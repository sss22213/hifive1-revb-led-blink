
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/debug/blink.elf:     file format elf32-littleriscv
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/debug/blink.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00000ea8 memsz 0x00000ea8 flags rwx
    LOAD off    0x00002000 vaddr 0x80000000 paddr 0x200157c8 align 2**12
         filesz 0x00000abc memsz 0x00000abc flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002ac0 vaddr 0x80000ac0 paddr 0x80000ac0 align 2**12
         filesz 0x00000000 memsz 0x00000ca0 flags rw-
    LOAD off    0x00002abc vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002f00 vaddr 0x20010f00 paddr 0x20010f00 align 2**12
         filesz 0x000048c8 memsz 0x000048c8 flags r-x
    LOAD off    0x000077c8 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e6  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       00000008  200102e8  200102e8  000012e8  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            00000056  200102f0  200102f0  000012f0  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000b60  20010348  20010348  00001348  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000048c8  20010f00  20010f00  00002f00  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000abc  80000000  200157c8  00002000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000098  80000ac0  80000ac0  00002ac0  2**3  ALLOC
  7 .stack            00000400  80000b60  80000b60  00002ac0  2**4  ALLOC
  8 .heap             00000800  80000f60  80000f60  00002ac0  2**3  ALLOC
  9 .debug_info       0002b22b  00000000  00000000  000077c8  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev     00002bab  00000000  00000000  000329f3  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges    00000ad0  00000000  00000000  000355a0  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges     00000950  00000000  00000000  00036070  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line       0000a7d2  00000000  00000000  000369c0  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str        0000484f  00000000  00000000  00041192  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment          00000028  00000000  00000000  000459e1  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002b  00000000  00000000  00045a09  2**0  CONTENTS, READONLY
 17 .debug_frame      00002d88  00000000  00000000  00045a34  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e8 l    d  .init_array	00000000 .init_array
200102f0 l    d  .ctors	00000000 .ctors
20010348 l    d  .rodata	00000000 .rodata
20010f00 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ac0 l    d  .bss	00000000 .bss
80000b60 l    d  .stack	00000000 .stack
80000f60 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
200100ca l     F .init	00000000 __metal_memory_scrub
20010138 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010248 l       .init	00000000 _skip_init
20010e94 l       .rodata	00000000 argv
20010e98 l       .rodata	00000000 envp
20010e9c l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20013b52 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20013b6c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20013b86 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20013b9c l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20013bb0 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20013bc2 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20013bd2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20013be8 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20013bfa l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
20010558 l     O .rodata	00000880 pll_configs
20013c0c l     F .text	0000004e get_pll_config_freq
20013e6e l     F .text	000000aa find_closest_config
20013f18 l     F .text	000001ac configure_pll
00000000 l    df *ABS*	00000000 blink.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20010fa0 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20010fca l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20010ff2 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
2001102e l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2001118e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
200116c0 l     F .text	00000028 __metal_driver_cpu_hartid
200116e8 l     F .text	0000002e __metal_driver_cpu_timebase
20011716 l     F .text	0000002e __metal_driver_cpu_interrupt_controller
20011744 l     F .text	00000028 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
200130c2 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
200130ec l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
20013116 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2001313e l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20013166 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20013188 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio-leds.c
2001429e l     F .text	0000004a __metal_driver_sifive_gpio_led_gpio
200142e8 l     F .text	00000044 __metal_driver_sifive_gpio_led_pin
2001432c l     F .text	0000005c __metal_driver_sifive_gpio_led_label
00000000 l    df *ABS*	00000000 sifive_gpio0.c
200144be l     F .text	00000026 __metal_driver_sifive_gpio0_base
200144e4 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
2001450e l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2001396a l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20013984 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2001399a l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
200139ae l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20013a66 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20013a80 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20013a96 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20013aaa l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20014226 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20015300 l       .text	00000000 IRQ_0
20015304 l       .text	00000000 IRQ_1
20015308 l       .text	00000000 IRQ_2
2001530c l       .text	00000000 IRQ_3
20015310 l       .text	00000000 IRQ_4
20015314 l       .text	00000000 IRQ_5
20015318 l       .text	00000000 IRQ_6
2001531c l       .text	00000000 IRQ_7
20015320 l       .text	00000000 IRQ_8
20015324 l       .text	00000000 IRQ_9
20015328 l       .text	00000000 IRQ_10
2001532c l       .text	00000000 IRQ_11
20015330 l       .text	00000000 IRQ_12
20015334 l       .text	00000000 IRQ_13
20015338 l       .text	00000000 IRQ_14
2001533c l       .text	00000000 IRQ_15
20015340 l       .text	00000000 IRQ_LC0
20015344 l       .text	00000000 IRQ_LC1
20015348 l       .text	00000000 IRQ_LC2
2001534c l       .text	00000000 IRQ_LC3
20015350 l       .text	00000000 IRQ_LC4
20015354 l       .text	00000000 IRQ_LC5
20015358 l       .text	00000000 IRQ_LC6
2001535c l       .text	00000000 IRQ_LC7
20015360 l       .text	00000000 IRQ_LC8
20015364 l       .text	00000000 IRQ_LC9
20015368 l       .text	00000000 IRQ_LC10
2001536c l       .text	00000000 IRQ_LC11
20015370 l       .text	00000000 IRQ_LC12
20015374 l       .text	00000000 IRQ_LC13
20015378 l       .text	00000000 IRQ_LC14
2001537c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 fixed-clock.c
20015380 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 strcat.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 __atexit.c
80000acc l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
80000ac4 l     O .bss	00000004 init_done.1531
80000ac8 l     O .bss	00000004 fini_done.1540
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 impure.c
80000a0c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 
200102f0 l       .init_array	00000000 metal_constructors_end
200102f0 l       .init_array	00000000 __fini_array_end
200102f0 l       .init_array	00000000 metal_destructors_end
200102f0 l       .init_array	00000000 metal_destructors_start
200102f0 l       .init_array	00000000 __fini_array_start
200102e8 l       .init_array	00000000 __init_array_end
200102e8 l       .init_array	00000000 __preinit_array_end
200102e8 l       .init_array	00000000 __init_array_start
200102e8 l       .init_array	00000000 metal_constructors_start
200102e8 l       .init_array	00000000 __preinit_array_start
20014388 g     F .text	00000036 __metal_driver_led_exist
2001553a g     F .text	00000012 strcpy
20011fcc  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20014f5c g     F .text	00000026 metal_clock_get_rate_hz
2001136a g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20011f36  w    F .text	00000096 metal_lc3_interrupt_vector_handler
200127bc g     F .text	00000064 __metal_valid_interrupt_id
20015120 g     F .text	00000040 metal_gpio_toggle_pin
80001270 g       .data	00000000 __global_pointer$
200102ec g     O .init_array	00000004 _use_hfxosc_ptr
20012c36 g     F .text	0000001a __metal_driver_riscv_cpu_controller_get_vector_mode
200151cc g     F .text	00000024 metal_led_off
200131e2 g     F .text	00000046 __metal_plic0_complete_interrupt
20012a0c g     F .text	000001d6 __metal_driver_riscv_cpu_controller_interrupt_register
200102e8 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20010e04 g     O .rodata	00000014 __metal_driver_vtable_sifive_led
80000ac0 g       .data	00000000 __tls_base
200151a8 g     F .text	00000024 metal_led_on
20014ff0 g     F .text	0000002e metal_cpu_get
20014af6 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20010354 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000b58 g       .bss	00000000 metal_segment_bss_target_end
2001105e g     F .text	0000009a __metal_clint0_mtime_get
20013036 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
200148ac g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
08000000 g       .rodata	00000000 metal_segment_itim_target_start
20015078 g     F .text	00000040 metal_gpio_enable_output
2001014a g     F .init	0000000e __metal_synchronize_harts
80000ac0 g       .data	00000000 metal_segment_bss_target_start
200110f8 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20014d46 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
20013cfe g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20014406 g     F .text	0000003e __metal_driver_led_on
200122ba  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d6  w    F .init	00000000 __metal_before_start
2001578c  w    F .text	00000014 metal_init_run
200104f4 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
200104b0 g     O .rodata	00000044 __metal_driver_vtable_cpu
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20012cbc g     F .text	00000072 __metal_driver_cpu_mcycle_get
20010dd8 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000a7c g     O .data	00000008 __metal_dt_cpu_0
20012224  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200140c4 g     F .text	00000162 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
200138ce g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20012512  w    F .text	00000096 metal_lc13_interrupt_vector_handler
200150b8 g     F .text	00000068 metal_gpio_set_pin
200118da g     F .text	00000018 __metal_default_exception_handler
2001168c g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20012c50 g     F .text	00000050 __metal_driver_riscv_cpu_controller_set_vector_mode
2001176c g     F .text	00000030 __metal_driver_cpu_get
2001044c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
200117ce g     F .text	00000018 __metal_interrupt_global_disable
20013942 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20015184 g     F .text	00000024 metal_led_enable
2001218e  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20012350  w    F .text	00000096 metal_lc10_interrupt_vector_handler
200136f6 g     F .text	0000004e __metal_driver_riscv_plic0_disable
200128dc g     F .text	0000004e __metal_exception_register
200151f0 g     F .text	00000092 metal_led_get_rgb
2001569c g     F .text	00000078 metal_init
20012e50 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2001498e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
200119ca g     F .text	00000068 __metal_default_sw_handler
80000018 g     O .data	0000000c __metal_dt_clock_2
20014a54 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
80000ab0 g     O .data	00000008 __metal_driver_vtable_fixed_clock
80000ab8 g     O .data	00000004 _global_impure_ptr
20011a32  w    F .text	00000092 metal_timer_interrupt_vector_handler
20015498 g     F .text	0000006a __libc_init_array
20014444 g     F .text	0000003e __metal_driver_led_off
80000a90 g     O .data	00000004 __metal_dt_led_2
200149ce g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
200123e6  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20013b30 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20012be2 g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_enable
20014948 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20014f1c g     F .text	00000040 _metal_clock_call_all_callbacks
200102c4 g     F .init	00000002 _init
20011830 g     F .text	0000001a __metal_interrupt_timer_disable
20014b40 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20012f0e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010e58 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20014a94 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20015460 g     F .text	00000038 __libc_fini_array
80000a00 g     O .data	0000000c __metal_dt_clock_4
20015714 g     F .text	00000078 metal_fini
20014ece g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20012e98 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
200130a2 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20011882 g     F .text	0000002c __metal_interrupt_local_enable
20011658 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
200133e0 g     F .text	00000018 __metal_plic0_default_handler
00000000 g       *ABS*	00000000 __tbss_size
8000000c g     O .data	0000000c __metal_dt_clock_0
20015502 g     F .text	00000020 strcat
00000800 g       *ABS*	00000000 __heap_size
20013744 g     F .text	0000002e __metal_driver_riscv_plic0_set_threshold
20011ac4 g     F .text	00000016 __metal_default_beu_handler
20011866 g     F .text	0000001c __metal_interrupt_external_disable
20012ca0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
2001292a g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
20012ff0 g     F .text	00000046 __metal_driver_cpu_exception_register
200117e6 g     F .text	00000018 __metal_interrupt_software_enable
20011e0a  w    F .text	00000096 metal_lc1_interrupt_vector_handler
80000ac0 g     O .bss	00000004 _global_atexit
200132a8 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
200126d4 g     F .text	00000050 __metal_controller_interrupt_vector_mode
200155d4 g     F .text	000000c8 __call_exitprocs
80000f60 g       .stack	00000000 _sp
20010158 g     F .init	00000000 _start
200139c0 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20012fd0 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20013064 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
2001184a g     F .text	0000001c __metal_interrupt_external_enable
2001554c g     F .text	00000088 __register_exitproc
2001349c g     F .text	00000150 __metal_driver_riscv_plic0_init
200136a8 g     F .text	0000004e __metal_driver_riscv_plic0_enable
2001491c g     F .text	0000002c __metal_driver_sifive_gpio0_output
200120f8  w    F .text	00000096 metal_lc6_interrupt_vector_handler
2001179c g     F .text	0000001a __metal_myhart_id
20014eee g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20011938  w    F .text	00000092 metal_software_interrupt_vector_handler
20012c0c g     F .text	0000002a __metal_driver_riscv_cpu_controller_interrupt_disable
2001124c g     F .text	000000da __metal_driver_riscv_clint0_register
20015038 g     F .text	00000040 metal_gpio_disable_input
80000a74 g     O .data	00000008 __metal_dt_clint_2000000
20014f82 g     F .text	00000048 metal_clock_set_rate_hz
2001486c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c6  w    F .init	00000000 secondary_main
2001190a  w    F .text	0000002e metal_interrupt_vector_handler
2001326e g     F .text	0000003a __metal_plic0_get_threshold
20014238 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20012820 g     F .text	000000bc __metal_local_interrupt_enable
20011526 g     F .text	00000132 __metal_driver_riscv_clint0_command_request
20012062  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20010f00 g     F .text	000000a0 main
80000ac0 g       .data	00000000 metal_segment_data_target_end
80000a98 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20012eac g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20012f70 g     F .text	00000060 __metal_driver_cpu_get_msip
20015282 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20013082 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20014482 g     F .text	0000003c __metal_driver_led_toggle
200131a6 g     F .text	0000003c __metal_plic0_claim_interrupt
80000000  w    O .data	0000000c __metal_led_table
2001247c  w    F .text	00000096 metal_lc12_interrupt_vector_handler
20010092 g     F .init	00000000 metal_mem_scrub
80000a8c g     O .data	00000004 __metal_dt_led_1
2001134e g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
200143be g     F .text	00000048 __metal_driver_led_enable
80000a94 g     O .data	00000004 __metal_dt_prci_10008000
20012d2e g     F .text	00000046 __metal_driver_cpu_timebase_get
20013832 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
2001501e g     F .text	0000001a metal_cpu_get_current_hartid
20015522 g     F .text	00000018 strcmp
20013abc g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20015300 g       .text	00000000 __metal_vector_table
20010ea8 g       *ABS*	00000000 metal_segment_itim_source_start
80000a70  w    O .data	00000004 __metal_cpu_table
80000040 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102c4 g     F .init	00000002 _fini
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2001330a g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2001031c g     F .ctors	0000002a use_hfxosc
200117b6 g     F .text	00000018 __metal_interrupt_global_enable
20015430 g     F .text	0000000a atexit
20011816 g     F .text	0000001a __metal_interrupt_timer_enable
20011474 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20012dda g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20013772 g     F .text	00000026 __metal_driver_riscv_plic0_get_threshold
20013c5a g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000024 g     O .data	0000000c __metal_dt_clock_5
20014266 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200153f0 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
200113c2 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
200157c8 g       *ABS*	00000000 metal_segment_data_source_start
2001013c g       .init	00000000 early_trap_vector
20012724 g     F .text	00000098 __metal_controller_interrupt_vector
800009f4 g     O .data	0000000c __metal_dt_clock_1
80000410 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
20014a0e g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20011ada g     F .text	00000066 __metal_default_timer_handler
200133f8 g     F .text	000000a4 __metal_plic0_handler
20011ea0  w    F .text	00000096 metal_lc2_interrupt_vector_handler
2001263e  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20014fca g     F .text	00000026 metal_cpu_interrupt_controller
20015160 g     F .text	00000024 metal_interrupt_init
2001543a g     F .text	00000026 exit
2001540e g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20010ea8 g       *ABS*	00000000 metal_segment_lim_source_start
80000a84 g     O .data	00000004 __metal_dt_gpio_10012000
200118f2 g     F .text	00000018 __metal_default_interrupt_handler
200157a0  w    F .text	00000014 metal_fini_run
200148f2 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20011b80 g     F .text	0000017c __metal_exception_handler
20011d76  w    F .text	00000094 metal_lc0_interrupt_vector_handler
200157b4 g     F .text	00000014 _exit
20012d74 g     F .text	00000066 __metal_driver_cpu_mtime_get
20011326 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
200125a8  w    F .text	00000096 metal_lc14_interrupt_vector_handler
80000aa0 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
200111c4 g     F .text	00000088 __metal_driver_riscv_clint0_init
200102f0 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20012e6a g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2001333e g     F .text	000000a2 __metal_plic0_enable
20010090  w      .init	00000000 __register_frame_info
20013a44 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20012e7e g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
200118ae g     F .text	0000002c __metal_interrupt_local_disable
200117fe g     F .text	00000018 __metal_interrupt_software_disable
800009e8 g     O .data	0000000c __metal_dt_clock_3
80000030 g     O .data	0000000c __metal_dt_clock_6
20013228 g     F .text	00000046 __metal_plic0_set_threshold
80000a88 g     O .data	00000004 __metal_dt_led_0
20013798 g     F .text	0000009a __metal_driver_riscv_plic0_affinity_enable
80000aa8 g     O .data	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
200135ec g     F .text	000000bc __metal_driver_riscv_plic0_register



Disassembly of section .init:

20010000 <_enter>:
_enter():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	27018193          	addi	gp,gp,624 # 80001270 <__global_pointer$>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11c28293          	addi	t0,t0,284 # 2001013c <early_trap_vector>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	dfff0117          	auipc	sp,0xdfff0
20010030:	fd410113          	addi	sp,sp,-44 # 0 <__metal_boot_hart>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010034:	00011463          	bnez	sp,2001003c <_enter+0x3c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:56
    la sp, _sp
20010038:	cf018113          	addi	sp,gp,-784 # 80000f60 <_sp>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	08208093          	addi	ra,ra,130 # 200100d6 <__metal_before_start>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:87
    call _start
2001006a:	20fd                	jal	20010158 <_start>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	dfff0097          	auipc	ra,0xdfff0
20010070:	f9408093          	addi	ra,ra,-108 # 0 <__metal_boot_hart>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010074:	00008363          	beqz	ra,2001007a <_enter+0x7a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:94
    jalr ra
20010078:	9082                	jalr	ra
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
2001007a:	00000297          	auipc	t0,0x0
2001007e:	00c28293          	addi	t0,t0,12 # 20010086 <_enter+0x86>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:100
     csrw mtvec, t0
20010082:	30529073          	csrw	mtvec,t0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010086:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:103
     j 1b
2001008a:	bff5                	j	20010086 <_enter+0x86>
2001008c:	0000                	unimp
	...

20010090 <__register_frame_info>:
__register_frame_info():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20010090:	8082                	ret

20010092 <metal_mem_scrub>:
metal_mem_scrub():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
20010092:	46a1                	li	a3,8
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010094:	3006b373          	csrrc	t1,mstatus,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010098:	00400293          	li	t0,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
2001009c:	0055c563          	blt	a1,t0,200100a6 <metal_mem_scrub+0x14>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
200100a0:	00357613          	andi	a2,a0,3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
200100a4:	ca11                	beqz	a2,200100b8 <metal_mem_scrub+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a6:	00050023          	sb	zero,0(a0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100aa:	0505                	addi	a0,a0,1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100ac:	15fd                	addi	a1,a1,-1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100ae:	feb047e3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100b2:	30031073          	csrw	mstatus,t1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:39
    ret
200100b6:	8082                	ret
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b8:	00052023          	sw	zero,0(a0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100bc:	0511                	addi	a0,a0,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100be:	15f1                	addi	a1,a1,-4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100c0:	fcb04ee3          	bgtz	a1,2001009c <metal_mem_scrub+0xa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100c4:	30031073          	csrw	mstatus,t1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:46
    ret
200100c8:	8082                	ret

200100ca <__metal_memory_scrub>:
__metal_memory_scrub():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100ca:	00032023          	sw	zero,0(t1)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100ce:	0311                	addi	t1,t1,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100d0:	fe734de3          	blt	t1,t2,200100ca <__metal_memory_scrub>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100d4:	8082                	ret

200100d6 <__metal_before_start>:
__metal_before_start():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d6:	8406                	mv	s0,ra
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d8:	dfff0297          	auipc	t0,0xdfff0
200100dc:	f2828293          	addi	t0,t0,-216 # 0 <__metal_boot_hart>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100e0:	04028c63          	beqz	t0,20010138 <skip_scrub>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100e4:	dfff0297          	auipc	t0,0xdfff0
200100e8:	f1c28293          	addi	t0,t0,-228 # 0 <__metal_boot_hart>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100ec:	f14027f3          	csrr	a5,mhartid
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100f0:	46a1                	li	a3,8
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100f2:	3006b073          	csrc	mstatus,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f6:	830a                	mv	t1,sp
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f8:	dfff0397          	auipc	t2,0xdfff0
200100fc:	30838393          	addi	t2,t2,776 # 400 <__stack_size>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
20010100:	938a                	add	t2,t2,sp
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
20010102:	00730363          	beq	t1,t2,20010108 <__metal_before_start+0x32>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010106:	37d1                	jal	200100ca <__metal_memory_scrub>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010108:	02579863          	bne	a5,t0,20010138 <skip_scrub>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
2001010c:	5fff0317          	auipc	t1,0x5fff0
20010110:	ef430313          	addi	t1,t1,-268 # 80000000 <metal_segment_lim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
20010114:	5fff1397          	auipc	t2,0x5fff1
20010118:	9ac38393          	addi	t2,t2,-1620 # 80000ac0 <__tls_base>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
2001011c:	00730363          	beq	t1,t2,20010122 <__metal_before_start+0x4c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20010120:	376d                	jal	200100ca <__metal_memory_scrub>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20010122:	e7ff0317          	auipc	t1,0xe7ff0
20010126:	ede30313          	addi	t1,t1,-290 # 8000000 <metal_segment_itim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
2001012a:	e7ff0397          	auipc	t2,0xe7ff0
2001012e:	ed638393          	addi	t2,t2,-298 # 8000000 <metal_segment_itim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20010132:	00730363          	beq	t1,t2,20010138 <skip_scrub>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010136:	3f51                	jal	200100ca <__metal_memory_scrub>

20010138 <skip_scrub>:
skip_scrub():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010138:	80a2                	mv	ra,s0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/scrub.S:130
    ret
2001013a:	8082                	ret

2001013c <early_trap_vector>:
early_trap_vector():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
2001013c:	342022f3          	csrr	t0,mcause
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/trap.S:65
    csrr t1, mepc
20010140:	34102373          	csrr	t1,mepc
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010144:	343023f3          	csrr	t2,mtval
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/trap.S:67
    j early_trap_vector
20010148:	bfd5                	j	2001013c <early_trap_vector>

2001014a <__metal_synchronize_harts>:
__metal_synchronize_harts():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
2001014a:	1141                	addi	sp,sp,-16
2001014c:	c622                	sw	s0,12(sp)
2001014e:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20010150:	0001                	nop
20010152:	4432                	lw	s0,12(sp)
20010154:	0141                	addi	sp,sp,16
20010156:	8082                	ret

20010158 <_start>:
_start():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010158:	8406                	mv	s0,ra
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
2001015a:	5fff1197          	auipc	gp,0x5fff1
2001015e:	11618193          	addi	gp,gp,278 # 80001270 <__global_pointer$>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
20010162:	00000293          	li	t0,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010166:	0e551163          	bne	a0,t0,20010248 <_skip_init>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
2001016a:	00005297          	auipc	t0,0x5
2001016e:	65e28293          	addi	t0,t0,1630 # 200157c8 <metal_segment_data_source_start>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
20010172:	5fff0317          	auipc	t1,0x5fff0
20010176:	e8e30313          	addi	t1,t1,-370 # 80000000 <metal_segment_lim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
2001017a:	5fff1397          	auipc	t2,0x5fff1
2001017e:	94638393          	addi	t2,t2,-1722 # 80000ac0 <__tls_base>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
20010182:	00628c63          	beq	t0,t1,2001019a <_start+0x42>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010186:	00735a63          	bge	t1,t2,2001019a <_start+0x42>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
2001018a:	0002a503          	lw	a0,0(t0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018e:	0291                	addi	t0,t0,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20010190:	00a32023          	sw	a0,0(t1)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010194:	0311                	addi	t1,t1,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010196:	fe734ae3          	blt	t1,t2,2001018a <_start+0x32>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
2001019a:	00001297          	auipc	t0,0x1
2001019e:	d0e28293          	addi	t0,t0,-754 # 20010ea8 <metal_segment_itim_source_start>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
200101a2:	e7ff0317          	auipc	t1,0xe7ff0
200101a6:	e5e30313          	addi	t1,t1,-418 # 8000000 <metal_segment_itim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101aa:	e7ff0397          	auipc	t2,0xe7ff0
200101ae:	e5638393          	addi	t2,t2,-426 # 8000000 <metal_segment_itim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101b2:	00628c63          	beq	t0,t1,200101ca <_start+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b6:	00735a63          	bge	t1,t2,200101ca <_start+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ba:	0002a503          	lw	a0,0(t0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101be:	0291                	addi	t0,t0,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101c0:	00a32023          	sw	a0,0(t1)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c4:	0311                	addi	t1,t1,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c6:	fe734ae3          	blt	t1,t2,200101ba <_start+0x62>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101ca:	0000100f          	fence.i
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ce:	00001297          	auipc	t0,0x1
200101d2:	cda28293          	addi	t0,t0,-806 # 20010ea8 <metal_segment_itim_source_start>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d6:	5fff0317          	auipc	t1,0x5fff0
200101da:	e2a30313          	addi	t1,t1,-470 # 80000000 <metal_segment_lim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101de:	5fff0397          	auipc	t2,0x5fff0
200101e2:	e2238393          	addi	t2,t2,-478 # 80000000 <metal_segment_lim_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e6:	00628c63          	beq	t0,t1,200101fe <_start+0xa6>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101ea:	00735a63          	bge	t1,t2,200101fe <_start+0xa6>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ee:	0002a503          	lw	a0,0(t0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101f2:	0291                	addi	t0,t0,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f4:	00a32023          	sw	a0,0(t1)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f8:	0311                	addi	t1,t1,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101fa:	fe734ae3          	blt	t1,t2,200101ee <_start+0x96>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fe:	0000100f          	fence.i
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
20010202:	5fff1317          	auipc	t1,0x5fff1
20010206:	8be30313          	addi	t1,t1,-1858 # 80000ac0 <__tls_base>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
2001020a:	8e818393          	addi	t2,gp,-1816 # 80000b58 <metal_segment_bss_target_end>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020e:	00735763          	bge	t1,t2,2001021c <_start+0xc4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
20010212:	00032023          	sw	zero,0(t1)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010216:	0311                	addi	t1,t1,4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010218:	fe734de3          	blt	t1,t2,20010212 <_start+0xba>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
2001021c:	5fff1217          	auipc	tp,0x5fff1
20010220:	8a420213          	addi	tp,tp,-1884 # 80000ac0 <__tls_base>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010224:	c211                	beqz	a2,20010228 <_start+0xd0>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:167
  jalr a2
20010226:	9602                	jalr	a2
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010228:	00005517          	auipc	a0,0x5
2001022c:	23850513          	addi	a0,a0,568 # 20015460 <__libc_fini_array>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:172
  call atexit
20010230:	200050ef          	jal	ra,20015430 <atexit>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010234:	264050ef          	jal	ra,20015498 <__libc_init_array>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010238:	00005517          	auipc	a0,0x5
2001023c:	56850513          	addi	a0,a0,1384 # 200157a0 <metal_fini_run>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:178
  call atexit
20010240:	1f0050ef          	jal	ra,20015430 <atexit>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010244:	548050ef          	jal	ra,2001578c <metal_init_run>

20010248 <_skip_init>:
_skip_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010248:	3709                	jal	2001014a <__metal_synchronize_harts>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
2001024a:	56fd                	li	a3,-1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
2001024c:	3046b073          	csrc	mie,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20010250:	3446b073          	csrc	mip,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010254:	301027f3          	csrr	a5,misa
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010258:	00042737          	lui	a4,0x42
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
2001025c:	8f7d                	and	a4,a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025e:	c709                	beqz	a4,20010268 <_skip_init+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20010260:	3036b073          	csrc	mideleg,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010264:	3026b073          	csrc	medeleg,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010268:	00040737          	lui	a4,0x40
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
2001026c:	8f7d                	and	a4,a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026e:	c319                	beqz	a4,20010274 <_skip_init+0x2c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20010270:	1806b073          	csrc	satp,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010274:	00010737          	lui	a4,0x10
20010278:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
2001027c:	8ff9                	and	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
2001027e:	cb89                	beqz	a5,20010290 <_skip_init+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20010280:	300027f3          	csrr	a5,mstatus
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
20010284:	6709                	lui	a4,0x2
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010286:	8fd9                	or	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010288:	30079073          	csrw	mstatus,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
2001028c:	00305073          	csrwi	fcsr,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20010290:	301027f3          	csrr	a5,misa
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
20010294:	00200737          	lui	a4,0x200
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010298:	8ff9                	and	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
2001029a:	c799                	beqz	a5,200102a8 <_skip_init+0x60>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
2001029c:	300027f3          	csrr	a5,mstatus
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
200102a0:	2007e793          	ori	a5,a5,512
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
200102a4:	30079073          	csrw	mstatus,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a8:	4505                	li	a0,1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102aa:	00001597          	auipc	a1,0x1
200102ae:	bea58593          	addi	a1,a1,-1046 # 20010e94 <argv>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102b2:	00001617          	auipc	a2,0x1
200102b6:	be660613          	addi	a2,a2,-1050 # 20010e98 <envp>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102ba:	2031                	jal	200102c6 <secondary_main>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102bc:	17e050ef          	jal	ra,2001543a <exit>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102c0:	80a2                	mv	ra,s0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:248
  ret
200102c2:	8082                	ret

200102c4 <_fini>:
_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102c4:	8082                	ret

200102c6 <secondary_main>:
secondary_main():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c6:	1141                	addi	sp,sp,-16
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c8:	c206                	sw	ra,4(sp)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102ca:	f14022f3          	csrr	t0,mhartid
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102ce:	00000313          	li	t1,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102d2:	00628563          	beq	t0,t1,200102dc <secondary_main+0x16>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d6:	10500073          	wfi
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:282
  j 1b
200102da:	bff5                	j	200102d6 <secondary_main+0x10>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:284
2:
  call main
200102dc:	425000ef          	jal	ra,20010f00 <main>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102e0:	4092                	lw	ra,4(sp)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102e2:	0141                	addi	sp,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/crt0.S:291
  ret
200102e4:	8082                	ret

Disassembly of section .ctors:

200102f0 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
200102f0:	1101                	addi	sp,sp,-32
200102f2:	ce06                	sw	ra,28(sp)
200102f4:	cc22                	sw	s0,24(sp)
200102f6:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
200102f8:	0db030ef          	jal	ra,20013bd2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
200102fc:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010300:	fec42783          	lw	a5,-20(s0)
20010304:	c799                	beqz	a5,20010312 <metal_sifive_fe310_g000_pll_init+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20010306:	800017b7          	lui	a5,0x80001
2001030a:	a0078513          	addi	a0,a5,-1536 # 80000a00 <__global_pointer$+0xfffff790>
2001030e:	14d030ef          	jal	ra,20013c5a <__metal_driver_sifive_fe310_g000_pll_init>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010312:	0001                	nop
20010314:	40f2                	lw	ra,28(sp)
20010316:	4462                	lw	s0,24(sp)
20010318:	6105                	addi	sp,sp,32
2001031a:	8082                	ret

2001031c <use_hfxosc>:
use_hfxosc():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2001031c:	1101                	addi	sp,sp,-32
2001031e:	ce06                	sw	ra,28(sp)
20010320:	cc22                	sw	s0,24(sp)
20010322:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010324:	0af030ef          	jal	ra,20013bd2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010328:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2001032c:	fec42583          	lw	a1,-20(s0)
20010330:	800017b7          	lui	a5,0x80001
20010334:	a0078513          	addi	a0,a5,-1536 # 80000a00 <__global_pointer$+0xfffff790>
20010338:	44b040ef          	jal	ra,20014f82 <metal_clock_set_rate_hz>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2001033c:	0001                	nop
2001033e:	40f2                	lw	ra,28(sp)
20010340:	4462                	lw	s0,24(sp)
20010342:	6105                	addi	sp,sp,32
20010344:	8082                	ret

Disassembly of section .text:

20010f00 <main>:
main():
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:4
#include <metal/machine.h>
#include <metal/led.h>
#define DELAY for(int delay = 0; delay < 1000000; delay++);
int main() {
20010f00:	7179                	addi	sp,sp,-48
20010f02:	d606                	sw	ra,44(sp)
20010f04:	d422                	sw	s0,40(sp)
20010f06:	1800                	addi	s0,sp,48
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:7
    struct metal_led *led0_blue;
    // initial cpu
    struct metal_cpu *cpu = metal_cpu_get(0);
20010f08:	4501                	li	a0,0
20010f0a:	0e6040ef          	jal	ra,20014ff0 <metal_cpu_get>
20010f0e:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:8
    struct metal_interrupt *cpu_int = metal_cpu_interrupt_controller(cpu);
20010f12:	fe442503          	lw	a0,-28(s0)
20010f16:	0b4040ef          	jal	ra,20014fca <metal_cpu_interrupt_controller>
20010f1a:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:9
    metal_interrupt_init(cpu_int);
20010f1e:	fe042503          	lw	a0,-32(s0)
20010f22:	23e040ef          	jal	ra,20015160 <metal_interrupt_init>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:11
    // set led pin
	led0_blue = metal_led_get_rgb("LD0", "blue");
20010f26:	200107b7          	lui	a5,0x20010
20010f2a:	34878593          	addi	a1,a5,840 # 20010348 <use_hfxosc+0x2c>
20010f2e:	200107b7          	lui	a5,0x20010
20010f32:	35078513          	addi	a0,a5,848 # 20010350 <use_hfxosc+0x34>
20010f36:	2ba040ef          	jal	ra,200151f0 <metal_led_get_rgb>
20010f3a:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:13
    // enable led
	metal_led_enable(led0_blue);
20010f3e:	fdc42503          	lw	a0,-36(s0)
20010f42:	242040ef          	jal	ra,20015184 <metal_led_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:15
    // off led
	metal_led_on(led0_blue);
20010f46:	fdc42503          	lw	a0,-36(s0)
20010f4a:	25e040ef          	jal	ra,200151a8 <metal_led_on>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:18
    while(1)
    {
        DELAY;
20010f4e:	fe042623          	sw	zero,-20(s0)
20010f52:	a031                	j	20010f5e <main+0x5e>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:18 (discriminator 3)
20010f54:	fec42783          	lw	a5,-20(s0)
20010f58:	0785                	addi	a5,a5,1
20010f5a:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:18 (discriminator 1)
20010f5e:	fec42703          	lw	a4,-20(s0)
20010f62:	000f47b7          	lui	a5,0xf4
20010f66:	23f78793          	addi	a5,a5,575 # f423f <__heap_size+0xf3a3f>
20010f6a:	fee7d5e3          	bge	a5,a4,20010f54 <main+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:19
		metal_led_off(led0_blue);
20010f6e:	fdc42503          	lw	a0,-36(s0)
20010f72:	25a040ef          	jal	ra,200151cc <metal_led_off>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:20
        DELAY;
20010f76:	fe042423          	sw	zero,-24(s0)
20010f7a:	a031                	j	20010f86 <main+0x86>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:20 (discriminator 3)
20010f7c:	fe842783          	lw	a5,-24(s0)
20010f80:	0785                	addi	a5,a5,1
20010f82:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:20 (discriminator 1)
20010f86:	fe842703          	lw	a4,-24(s0)
20010f8a:	000f47b7          	lui	a5,0xf4
20010f8e:	23f78793          	addi	a5,a5,575 # f423f <__heap_size+0xf3a3f>
20010f92:	fee7d5e3          	bge	a5,a4,20010f7c <main+0x7c>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:21
        metal_led_on(led0_blue);
20010f96:	fdc42503          	lw	a0,-36(s0)
20010f9a:	20e040ef          	jal	ra,200151a8 <metal_led_on>
/mnt/usb2/e_sdk/freedom-e-sdk/software/blink/blink.c:18
        DELAY;
20010f9e:	bf45                	j	20010f4e <main+0x4e>

20010fa0 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20010fa0:	1101                	addi	sp,sp,-32
20010fa2:	ce22                	sw	s0,28(sp)
20010fa4:	1000                	addi	s0,sp,32
20010fa6:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20010faa:	fec42703          	lw	a4,-20(s0)
20010fae:	800017b7          	lui	a5,0x80001
20010fb2:	a7478793          	addi	a5,a5,-1420 # 80000a74 <__global_pointer$+0xfffff804>
20010fb6:	00f71563          	bne	a4,a5,20010fc0 <__metal_driver_sifive_clint0_control_base+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20010fba:	020007b7          	lui	a5,0x2000
20010fbe:	a011                	j	20010fc2 <__metal_driver_sifive_clint0_control_base+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:238
	}
	else {
		return 0;
20010fc0:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:240
	}
}
20010fc2:	853e                	mv	a0,a5
20010fc4:	4472                	lw	s0,28(sp)
20010fc6:	6105                	addi	sp,sp,32
20010fc8:	8082                	ret

20010fca <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20010fca:	1101                	addi	sp,sp,-32
20010fcc:	ce22                	sw	s0,28(sp)
20010fce:	1000                	addi	s0,sp,32
20010fd0:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20010fd4:	fec42703          	lw	a4,-20(s0)
20010fd8:	800017b7          	lui	a5,0x80001
20010fdc:	a7478793          	addi	a5,a5,-1420 # 80000a74 <__global_pointer$+0xfffff804>
20010fe0:	00f71463          	bne	a4,a5,20010fe8 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
20010fe4:	4789                	li	a5,2
20010fe6:	a011                	j	20010fea <__metal_driver_sifive_clint0_num_interrupts+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:258
	}
	else {
		return 0;
20010fe8:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:260
	}
}
20010fea:	853e                	mv	a0,a5
20010fec:	4472                	lw	s0,28(sp)
20010fee:	6105                	addi	sp,sp,32
20010ff0:	8082                	ret

20010ff2 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20010ff2:	1101                	addi	sp,sp,-32
20010ff4:	ce22                	sw	s0,28(sp)
20010ff6:	1000                	addi	s0,sp,32
20010ff8:	fea42623          	sw	a0,-20(s0)
20010ffc:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:264
	if (idx == 0) {
20011000:	fe842783          	lw	a5,-24(s0)
20011004:	e791                	bnez	a5,20011010 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20011006:	800007b7          	lui	a5,0x80000
2001100a:	04078793          	addi	a5,a5,64 # 80000040 <__global_pointer$+0xffffedd0>
2001100e:	a821                	j	20011026 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:267
	}
	else if (idx == 1) {
20011010:	fe842703          	lw	a4,-24(s0)
20011014:	4785                	li	a5,1
20011016:	00f71763          	bne	a4,a5,20011024 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001101a:	800007b7          	lui	a5,0x80000
2001101e:	04078793          	addi	a5,a5,64 # 80000040 <__global_pointer$+0xffffedd0>
20011022:	a011                	j	20011026 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:271
	}
	else {
		return NULL;
20011024:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:273
	}
}
20011026:	853e                	mv	a0,a5
20011028:	4472                	lw	s0,28(sp)
2001102a:	6105                	addi	sp,sp,32
2001102c:	8082                	ret

2001102e <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001102e:	1101                	addi	sp,sp,-32
20011030:	ce22                	sw	s0,28(sp)
20011032:	1000                	addi	s0,sp,32
20011034:	fea42623          	sw	a0,-20(s0)
20011038:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:277
	if (idx == 0) {
2001103c:	fe842783          	lw	a5,-24(s0)
20011040:	e399                	bnez	a5,20011046 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:278
		return 3;
20011042:	478d                	li	a5,3
20011044:	a809                	j	20011056 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:280
	}
	else if (idx == 1) {
20011046:	fe842703          	lw	a4,-24(s0)
2001104a:	4785                	li	a5,1
2001104c:	00f71463          	bne	a4,a5,20011054 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:281
		return 7;
20011050:	479d                	li	a5,7
20011052:	a011                	j	20011056 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:284
	}
	else {
		return 0;
20011054:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:286
	}
}
20011056:	853e                	mv	a0,a5
20011058:	4472                	lw	s0,28(sp)
2001105a:	6105                	addi	sp,sp,32
2001105c:	8082                	ret

2001105e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2001105e:	715d                	addi	sp,sp,-80
20011060:	c686                	sw	ra,76(sp)
20011062:	c4a2                	sw	s0,72(sp)
20011064:	c2ca                	sw	s2,68(sp)
20011066:	c0ce                	sw	s3,64(sp)
20011068:	de52                	sw	s4,60(sp)
2001106a:	dc56                	sw	s5,56(sp)
2001106c:	da5a                	sw	s6,52(sp)
2001106e:	d85e                	sw	s7,48(sp)
20011070:	d662                	sw	s8,44(sp)
20011072:	d466                	sw	s9,40(sp)
20011074:	0880                	addi	s0,sp,80
20011076:	faa42e23          	sw	a0,-68(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001107a:	fbc42783          	lw	a5,-68(s0)
2001107e:	853e                	mv	a0,a5
20011080:	3705                	jal	20010fa0 <__metal_driver_sifive_clint0_control_base>
20011082:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20011086:	fcc42703          	lw	a4,-52(s0)
2001108a:	67b1                	lui	a5,0xc
2001108c:	17f1                	addi	a5,a5,-4
2001108e:	97ba                	add	a5,a5,a4
20011090:	439c                	lw	a5,0(a5)
20011092:	fcf42423          	sw	a5,-56(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20011096:	fcc42703          	lw	a4,-52(s0)
2001109a:	67b1                	lui	a5,0xc
2001109c:	17e1                	addi	a5,a5,-8
2001109e:	97ba                	add	a5,a5,a4
200110a0:	439c                	lw	a5,0(a5)
200110a2:	fcf42223          	sw	a5,-60(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
200110a6:	fcc42703          	lw	a4,-52(s0)
200110aa:	67b1                	lui	a5,0xc
200110ac:	17f1                	addi	a5,a5,-4
200110ae:	97ba                	add	a5,a5,a4
200110b0:	439c                	lw	a5,0(a5)
200110b2:	fc842703          	lw	a4,-56(s0)
200110b6:	fcf718e3          	bne	a4,a5,20011086 <__metal_clint0_mtime_get+0x28>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
200110ba:	fc842783          	lw	a5,-56(s0)
200110be:	8c3e                	mv	s8,a5
200110c0:	4c81                	li	s9,0
200110c2:	000c1993          	slli	s3,s8,0x0
200110c6:	4901                	li	s2,0
200110c8:	fc442783          	lw	a5,-60(s0)
200110cc:	8a3e                	mv	s4,a5
200110ce:	4a81                	li	s5,0
200110d0:	01496b33          	or	s6,s2,s4
200110d4:	0159ebb3          	or	s7,s3,s5
200110d8:	87da                	mv	a5,s6
200110da:	885e                	mv	a6,s7
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:30
}
200110dc:	853e                	mv	a0,a5
200110de:	85c2                	mv	a1,a6
200110e0:	40b6                	lw	ra,76(sp)
200110e2:	4426                	lw	s0,72(sp)
200110e4:	4916                	lw	s2,68(sp)
200110e6:	4986                	lw	s3,64(sp)
200110e8:	5a72                	lw	s4,60(sp)
200110ea:	5ae2                	lw	s5,56(sp)
200110ec:	5b52                	lw	s6,52(sp)
200110ee:	5bc2                	lw	s7,48(sp)
200110f0:	5c32                	lw	s8,44(sp)
200110f2:	5ca2                	lw	s9,40(sp)
200110f4:	6161                	addi	sp,sp,80
200110f6:	8082                	ret

200110f8 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
200110f8:	7179                	addi	sp,sp,-48
200110fa:	d606                	sw	ra,44(sp)
200110fc:	d422                	sw	s0,40(sp)
200110fe:	d24a                	sw	s2,36(sp)
20011100:	d04e                	sw	s3,32(sp)
20011102:	1800                	addi	s0,sp,48
20011104:	fca42e23          	sw	a0,-36(s0)
20011108:	fcb42c23          	sw	a1,-40(s0)
2001110c:	fcc42823          	sw	a2,-48(s0)
20011110:	fcd42a23          	sw	a3,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20011114:	fdc42783          	lw	a5,-36(s0)
20011118:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001111c:	fec42783          	lw	a5,-20(s0)
20011120:	853e                	mv	a0,a5
20011122:	3dbd                	jal	20010fa0 <__metal_driver_sifive_clint0_control_base>
20011124:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20011128:	fd842783          	lw	a5,-40(s0)
2001112c:	078e                	slli	a5,a5,0x3
2001112e:	873e                	mv	a4,a5
20011130:	fe842783          	lw	a5,-24(s0)
20011134:	973e                	add	a4,a4,a5
20011136:	6791                	lui	a5,0x4
20011138:	0791                	addi	a5,a5,4
2001113a:	97ba                	add	a5,a5,a4
2001113c:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
2001113e:	57fd                	li	a5,-1
20011140:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20011142:	fd842783          	lw	a5,-40(s0)
20011146:	078e                	slli	a5,a5,0x3
20011148:	873e                	mv	a4,a5
2001114a:	fe842783          	lw	a5,-24(s0)
2001114e:	973e                	add	a4,a4,a5
20011150:	6791                	lui	a5,0x4
20011152:	97ba                	add	a5,a5,a4
20011154:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20011156:	fd042783          	lw	a5,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2001115a:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
2001115c:	fd442783          	lw	a5,-44(s0)
20011160:	0007d913          	srli	s2,a5,0x0
20011164:	4981                	li	s3,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20011166:	fd842783          	lw	a5,-40(s0)
2001116a:	078e                	slli	a5,a5,0x3
2001116c:	873e                	mv	a4,a5
2001116e:	fe842783          	lw	a5,-24(s0)
20011172:	973e                	add	a4,a4,a5
20011174:	6791                	lui	a5,0x4
20011176:	0791                	addi	a5,a5,4
20011178:	97ba                	add	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2001117a:	874a                	mv	a4,s2
2001117c:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2001117e:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:55
}
20011180:	853e                	mv	a0,a5
20011182:	50b2                	lw	ra,44(sp)
20011184:	5422                	lw	s0,40(sp)
20011186:	5912                	lw	s2,36(sp)
20011188:	5982                	lw	s3,32(sp)
2001118a:	6145                	addi	sp,sp,48
2001118c:	8082                	ret

2001118e <_get_cpu_intc>:
_get_cpu_intc():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2001118e:	1101                	addi	sp,sp,-32
20011190:	ce06                	sw	ra,28(sp)
20011192:	cc22                	sw	s0,24(sp)
20011194:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20011196:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2001119a:	f14027f3          	csrr	a5,mhartid
2001119e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
200111a2:	fec42783          	lw	a5,-20(s0)
200111a6:	853e                	mv	a0,a5
200111a8:	649030ef          	jal	ra,20014ff0 <metal_cpu_get>
200111ac:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
200111b0:	fe842503          	lw	a0,-24(s0)
200111b4:	617030ef          	jal	ra,20014fca <metal_cpu_interrupt_controller>
200111b8:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:65
}
200111ba:	853e                	mv	a0,a5
200111bc:	40f2                	lw	ra,28(sp)
200111be:	4462                	lw	s0,24(sp)
200111c0:	6105                	addi	sp,sp,32
200111c2:	8082                	ret

200111c4 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
200111c4:	7139                	addi	sp,sp,-64
200111c6:	de06                	sw	ra,60(sp)
200111c8:	dc22                	sw	s0,56(sp)
200111ca:	0080                	addi	s0,sp,64
200111cc:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200111d0:	fcc42503          	lw	a0,-52(s0)
200111d4:	3bdd                	jal	20010fca <__metal_driver_sifive_clint0_num_interrupts>
200111d6:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
200111da:	fcc42783          	lw	a5,-52(s0)
200111de:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
200111e2:	fe442783          	lw	a5,-28(s0)
200111e6:	43dc                	lw	a5,4(a5)
200111e8:	efa9                	bnez	a5,20011242 <__metal_driver_riscv_clint0_init+0x7e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
200111ea:	fe042623          	sw	zero,-20(s0)
200111ee:	a081                	j	2001122e <__metal_driver_riscv_clint0_init+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200111f0:	fec42583          	lw	a1,-20(s0)
200111f4:	fcc42503          	lw	a0,-52(s0)
200111f8:	3bed                	jal	20010ff2 <__metal_driver_sifive_clint0_interrupt_parents>
200111fa:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200111fe:	fec42583          	lw	a1,-20(s0)
20011202:	fcc42503          	lw	a0,-52(s0)
20011206:	3525                	jal	2001102e <__metal_driver_sifive_clint0_interrupt_lines>
20011208:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2001120c:	fe042783          	lw	a5,-32(s0)
20011210:	439c                	lw	a5,0(a5)
20011212:	4fdc                	lw	a5,28(a5)
20011214:	fcc42683          	lw	a3,-52(s0)
20011218:	4601                	li	a2,0
2001121a:	fdc42583          	lw	a1,-36(s0)
2001121e:	fe042503          	lw	a0,-32(s0)
20011222:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20011224:	fec42783          	lw	a5,-20(s0)
20011228:	0785                	addi	a5,a5,1
2001122a:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2001122e:	fec42703          	lw	a4,-20(s0)
20011232:	fe842783          	lw	a5,-24(s0)
20011236:	faf74de3          	blt	a4,a5,200111f0 <__metal_driver_riscv_clint0_init+0x2c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
2001123a:	fe442783          	lw	a5,-28(s0)
2001123e:	4705                	li	a4,1
20011240:	c3d8                	sw	a4,4(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20011242:	0001                	nop
20011244:	50f2                	lw	ra,60(sp)
20011246:	5462                	lw	s0,56(sp)
20011248:	6121                	addi	sp,sp,64
2001124a:	8082                	ret

2001124c <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
2001124c:	7139                	addi	sp,sp,-64
2001124e:	de06                	sw	ra,60(sp)
20011250:	dc22                	sw	s0,56(sp)
20011252:	0080                	addi	s0,sp,64
20011254:	fca42623          	sw	a0,-52(s0)
20011258:	fcb42423          	sw	a1,-56(s0)
2001125c:	fcc42223          	sw	a2,-60(s0)
20011260:	fcd42023          	sw	a3,-64(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20011264:	57fd                	li	a5,-1
20011266:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2001126a:	46a010ef          	jal	ra,200126d4 <__metal_controller_interrupt_vector_mode>
2001126e:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20011272:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20011276:	3f21                	jal	2001118e <_get_cpu_intc>
20011278:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001127c:	fcc42503          	lw	a0,-52(s0)
20011280:	33a9                	jal	20010fca <__metal_driver_sifive_clint0_num_interrupts>
20011282:	fca42c23          	sw	a0,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20011286:	fe042703          	lw	a4,-32(s0)
2001128a:	4785                	li	a5,1
2001128c:	00f70863          	beq	a4,a5,2001129c <__metal_driver_riscv_clint0_register+0x50>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20011290:	fe042783          	lw	a5,-32(s0)
20011294:	c781                	beqz	a5,2001129c <__metal_driver_riscv_clint0_register+0x50>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20011296:	fec42783          	lw	a5,-20(s0)
2001129a:	a049                	j	2001131c <__metal_driver_riscv_clint0_register+0xd0>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
2001129c:	fe042223          	sw	zero,-28(s0)
200112a0:	a091                	j	200112e4 <__metal_driver_riscv_clint0_register+0x98>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200112a2:	fe442583          	lw	a1,-28(s0)
200112a6:	fcc42503          	lw	a0,-52(s0)
200112aa:	3351                	jal	2001102e <__metal_driver_sifive_clint0_interrupt_lines>
200112ac:	fca42a23          	sw	a0,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200112b0:	fe442583          	lw	a1,-28(s0)
200112b4:	fcc42503          	lw	a0,-52(s0)
200112b8:	3b2d                	jal	20010ff2 <__metal_driver_sifive_clint0_interrupt_parents>
200112ba:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
200112be:	fdc42703          	lw	a4,-36(s0)
200112c2:	fe842783          	lw	a5,-24(s0)
200112c6:	00f71863          	bne	a4,a5,200112d6 <__metal_driver_riscv_clint0_register+0x8a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
200112ca:	fc842703          	lw	a4,-56(s0)
200112ce:	fd442783          	lw	a5,-44(s0)
200112d2:	02f70063          	beq	a4,a5,200112f2 <__metal_driver_riscv_clint0_register+0xa6>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
200112d6:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
200112da:	fe442783          	lw	a5,-28(s0)
200112de:	0785                	addi	a5,a5,1
200112e0:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
200112e4:	fe442703          	lw	a4,-28(s0)
200112e8:	fd842783          	lw	a5,-40(s0)
200112ec:	faf74be3          	blt	a4,a5,200112a2 <__metal_driver_riscv_clint0_register+0x56>
200112f0:	a011                	j	200112f4 <__metal_driver_riscv_clint0_register+0xa8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
200112f2:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
200112f4:	fe842783          	lw	a5,-24(s0)
200112f8:	c385                	beqz	a5,20011318 <__metal_driver_riscv_clint0_register+0xcc>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
200112fa:	fe842783          	lw	a5,-24(s0)
200112fe:	439c                	lw	a5,0(a5)
20011300:	4fdc                	lw	a5,28(a5)
20011302:	fc042683          	lw	a3,-64(s0)
20011306:	fc442603          	lw	a2,-60(s0)
2001130a:	fc842583          	lw	a1,-56(s0)
2001130e:	fe842503          	lw	a0,-24(s0)
20011312:	9782                	jalr	a5
20011314:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20011318:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:115
}
2001131c:	853e                	mv	a0,a5
2001131e:	50f2                	lw	ra,60(sp)
20011320:	5462                	lw	s0,56(sp)
20011322:	6121                	addi	sp,sp,64
20011324:	8082                	ret

20011326 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20011326:	7179                	addi	sp,sp,-48
20011328:	d622                	sw	s0,44(sp)
2001132a:	1800                	addi	s0,sp,48
2001132c:	fca42e23          	sw	a0,-36(s0)
20011330:	fcb42c23          	sw	a1,-40(s0)
20011334:	fcc42a23          	sw	a2,-44(s0)
20011338:	fcd42823          	sw	a3,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
2001133c:	57fd                	li	a5,-1
2001133e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20011342:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:123
}
20011346:	853e                	mv	a0,a5
20011348:	5432                	lw	s0,44(sp)
2001134a:	6145                	addi	sp,sp,48
2001134c:	8082                	ret

2001134e <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2001134e:	1101                	addi	sp,sp,-32
20011350:	ce06                	sw	ra,28(sp)
20011352:	cc22                	sw	s0,24(sp)
20011354:	1000                	addi	s0,sp,32
20011356:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2001135a:	37a010ef          	jal	ra,200126d4 <__metal_controller_interrupt_vector_mode>
2001135e:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:128
}
20011360:	853e                	mv	a0,a5
20011362:	40f2                	lw	ra,28(sp)
20011364:	4462                	lw	s0,24(sp)
20011366:	6105                	addi	sp,sp,32
20011368:	8082                	ret

2001136a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2001136a:	7179                	addi	sp,sp,-48
2001136c:	d606                	sw	ra,44(sp)
2001136e:	d422                	sw	s0,40(sp)
20011370:	1800                	addi	s0,sp,48
20011372:	fca42e23          	sw	a0,-36(s0)
20011376:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2001137a:	57fd                	li	a5,-1
2001137c:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20011380:	3539                	jal	2001118e <_get_cpu_intc>
20011382:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20011386:	fe842783          	lw	a5,-24(s0)
2001138a:	c395                	beqz	a5,200113ae <__metal_driver_riscv_clint0_set_vector_mode+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2001138c:	fd842703          	lw	a4,-40(s0)
20011390:	4785                	li	a5,1
20011392:	02e7e063          	bltu	a5,a4,200113b2 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20011396:	fe842783          	lw	a5,-24(s0)
2001139a:	439c                	lw	a5,0(a5)
2001139c:	43dc                	lw	a5,4(a5)
2001139e:	fd842583          	lw	a1,-40(s0)
200113a2:	fe842503          	lw	a0,-24(s0)
200113a6:	9782                	jalr	a5
200113a8:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
200113ac:	a021                	j	200113b4 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
200113ae:	0001                	nop
200113b0:	a011                	j	200113b4 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
200113b2:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
200113b4:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:148
}
200113b8:	853e                	mv	a0,a5
200113ba:	50b2                	lw	ra,44(sp)
200113bc:	5422                	lw	s0,40(sp)
200113be:	6145                	addi	sp,sp,48
200113c0:	8082                	ret

200113c2 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
200113c2:	7139                	addi	sp,sp,-64
200113c4:	de06                	sw	ra,60(sp)
200113c6:	dc22                	sw	s0,56(sp)
200113c8:	0080                	addi	s0,sp,64
200113ca:	fca42623          	sw	a0,-52(s0)
200113ce:	fcb42423          	sw	a1,-56(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
200113d2:	57fd                	li	a5,-1
200113d4:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
200113d8:	fc842783          	lw	a5,-56(s0)
200113dc:	c7c9                	beqz	a5,20011466 <__metal_driver_riscv_clint0_enable+0xa4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
200113de:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
200113e2:	3375                	jal	2001118e <_get_cpu_intc>
200113e4:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
200113e8:	fcc42503          	lw	a0,-52(s0)
200113ec:	3ef9                	jal	20010fca <__metal_driver_sifive_clint0_num_interrupts>
200113ee:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
200113f2:	fe042223          	sw	zero,-28(s0)
200113f6:	a091                	j	2001143a <__metal_driver_riscv_clint0_enable+0x78>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200113f8:	fe442583          	lw	a1,-28(s0)
200113fc:	fcc42503          	lw	a0,-52(s0)
20011400:	313d                	jal	2001102e <__metal_driver_sifive_clint0_interrupt_lines>
20011402:	fca42c23          	sw	a0,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20011406:	fe442583          	lw	a1,-28(s0)
2001140a:	fcc42503          	lw	a0,-52(s0)
2001140e:	36d5                	jal	20010ff2 <__metal_driver_sifive_clint0_interrupt_parents>
20011410:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20011414:	fe042703          	lw	a4,-32(s0)
20011418:	fe842783          	lw	a5,-24(s0)
2001141c:	00f71863          	bne	a4,a5,2001142c <__metal_driver_riscv_clint0_enable+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20011420:	fc842703          	lw	a4,-56(s0)
20011424:	fd842783          	lw	a5,-40(s0)
20011428:	02f70063          	beq	a4,a5,20011448 <__metal_driver_riscv_clint0_enable+0x86>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
2001142c:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20011430:	fe442783          	lw	a5,-28(s0)
20011434:	0785                	addi	a5,a5,1
20011436:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
2001143a:	fe442703          	lw	a4,-28(s0)
2001143e:	fdc42783          	lw	a5,-36(s0)
20011442:	faf74be3          	blt	a4,a5,200113f8 <__metal_driver_riscv_clint0_enable+0x36>
20011446:	a011                	j	2001144a <__metal_driver_riscv_clint0_enable+0x88>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20011448:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
2001144a:	fe842783          	lw	a5,-24(s0)
2001144e:	cf81                	beqz	a5,20011466 <__metal_driver_riscv_clint0_enable+0xa4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20011450:	fe842783          	lw	a5,-24(s0)
20011454:	439c                	lw	a5,0(a5)
20011456:	53dc                	lw	a5,36(a5)
20011458:	fc842583          	lw	a1,-56(s0)
2001145c:	fe842503          	lw	a0,-24(s0)
20011460:	9782                	jalr	a5
20011462:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20011466:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:178
}
2001146a:	853e                	mv	a0,a5
2001146c:	50f2                	lw	ra,60(sp)
2001146e:	5462                	lw	s0,56(sp)
20011470:	6121                	addi	sp,sp,64
20011472:	8082                	ret

20011474 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20011474:	7139                	addi	sp,sp,-64
20011476:	de06                	sw	ra,60(sp)
20011478:	dc22                	sw	s0,56(sp)
2001147a:	0080                	addi	s0,sp,64
2001147c:	fca42623          	sw	a0,-52(s0)
20011480:	fcb42423          	sw	a1,-56(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20011484:	57fd                	li	a5,-1
20011486:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2001148a:	fc842783          	lw	a5,-56(s0)
2001148e:	c7c9                	beqz	a5,20011518 <__metal_driver_riscv_clint0_disable+0xa4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20011490:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20011494:	39ed                	jal	2001118e <_get_cpu_intc>
20011496:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2001149a:	fcc42503          	lw	a0,-52(s0)
2001149e:	3635                	jal	20010fca <__metal_driver_sifive_clint0_num_interrupts>
200114a0:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
200114a4:	fe042223          	sw	zero,-28(s0)
200114a8:	a091                	j	200114ec <__metal_driver_riscv_clint0_disable+0x78>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
200114aa:	fe442583          	lw	a1,-28(s0)
200114ae:	fcc42503          	lw	a0,-52(s0)
200114b2:	3eb5                	jal	2001102e <__metal_driver_sifive_clint0_interrupt_lines>
200114b4:	fca42c23          	sw	a0,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
200114b8:	fe442583          	lw	a1,-28(s0)
200114bc:	fcc42503          	lw	a0,-52(s0)
200114c0:	3e0d                	jal	20010ff2 <__metal_driver_sifive_clint0_interrupt_parents>
200114c2:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
200114c6:	fe042703          	lw	a4,-32(s0)
200114ca:	fe842783          	lw	a5,-24(s0)
200114ce:	00f71863          	bne	a4,a5,200114de <__metal_driver_riscv_clint0_disable+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
200114d2:	fc842703          	lw	a4,-56(s0)
200114d6:	fd842783          	lw	a5,-40(s0)
200114da:	02f70063          	beq	a4,a5,200114fa <__metal_driver_riscv_clint0_disable+0x86>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
200114de:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
200114e2:	fe442783          	lw	a5,-28(s0)
200114e6:	0785                	addi	a5,a5,1
200114e8:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
200114ec:	fe442703          	lw	a4,-28(s0)
200114f0:	fdc42783          	lw	a5,-36(s0)
200114f4:	faf74be3          	blt	a4,a5,200114aa <__metal_driver_riscv_clint0_disable+0x36>
200114f8:	a011                	j	200114fc <__metal_driver_riscv_clint0_disable+0x88>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
200114fa:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
200114fc:	fe842783          	lw	a5,-24(s0)
20011500:	cf81                	beqz	a5,20011518 <__metal_driver_riscv_clint0_disable+0xa4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20011502:	fe842783          	lw	a5,-24(s0)
20011506:	439c                	lw	a5,0(a5)
20011508:	579c                	lw	a5,40(a5)
2001150a:	fc842583          	lw	a1,-56(s0)
2001150e:	fe842503          	lw	a0,-24(s0)
20011512:	9782                	jalr	a5
20011514:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20011518:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:208
}
2001151c:	853e                	mv	a0,a5
2001151e:	50f2                	lw	ra,60(sp)
20011520:	5462                	lw	s0,56(sp)
20011522:	6121                	addi	sp,sp,64
20011524:	8082                	ret

20011526 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20011526:	7179                	addi	sp,sp,-48
20011528:	d606                	sw	ra,44(sp)
2001152a:	d422                	sw	s0,40(sp)
2001152c:	1800                	addi	s0,sp,48
2001152e:	fca42e23          	sw	a0,-36(s0)
20011532:	fcb42c23          	sw	a1,-40(s0)
20011536:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
2001153a:	57fd                	li	a5,-1
2001153c:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20011540:	fdc42783          	lw	a5,-36(s0)
20011544:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20011548:	fdc42503          	lw	a0,-36(s0)
2001154c:	3c91                	jal	20010fa0 <__metal_driver_sifive_clint0_control_base>
2001154e:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20011552:	fd842703          	lw	a4,-40(s0)
20011556:	4789                	li	a5,2
20011558:	04f70863          	beq	a4,a5,200115a8 <__metal_driver_riscv_clint0_command_request+0x82>
2001155c:	fd842703          	lw	a4,-40(s0)
20011560:	4789                	li	a5,2
20011562:	00e7c863          	blt	a5,a4,20011572 <__metal_driver_riscv_clint0_command_request+0x4c>
20011566:	fd842703          	lw	a4,-40(s0)
2001156a:	4785                	li	a5,1
2001156c:	00f70e63          	beq	a4,a5,20011588 <__metal_driver_riscv_clint0_command_request+0x62>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20011570:	a8e9                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:219
    switch (command) {
20011572:	fd842703          	lw	a4,-40(s0)
20011576:	478d                	li	a5,3
20011578:	04f70c63          	beq	a4,a5,200115d0 <__metal_driver_riscv_clint0_command_request+0xaa>
2001157c:	fd842703          	lw	a4,-40(s0)
20011580:	4791                	li	a5,4
20011582:	08f70863          	beq	a4,a5,20011612 <__metal_driver_riscv_clint0_command_request+0xec>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20011586:	a0d1                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20011588:	fd442783          	lw	a5,-44(s0)
2001158c:	cbc5                	beqz	a5,2001163c <__metal_driver_riscv_clint0_command_request+0x116>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
2001158e:	fe842503          	lw	a0,-24(s0)
20011592:	34f1                	jal	2001105e <__metal_clint0_mtime_get>
20011594:	87aa                	mv	a5,a0
20011596:	882e                	mv	a6,a1
20011598:	fd442703          	lw	a4,-44(s0)
2001159c:	c31c                	sw	a5,0(a4)
2001159e:	01072223          	sw	a6,4(a4) # 200004 <__heap_size+0x1ff804>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
200115a2:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
200115a6:	a859                	j	2001163c <__metal_driver_riscv_clint0_command_request+0x116>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
200115a8:	fd442783          	lw	a5,-44(s0)
200115ac:	cbd1                	beqz	a5,20011640 <__metal_driver_riscv_clint0_command_request+0x11a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
200115ae:	fd442783          	lw	a5,-44(s0)
200115b2:	439c                	lw	a5,0(a5)
200115b4:	fef42023          	sw	a5,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
200115b8:	fe042783          	lw	a5,-32(s0)
200115bc:	078a                	slli	a5,a5,0x2
200115be:	873e                	mv	a4,a5
200115c0:	fe442783          	lw	a5,-28(s0)
200115c4:	97ba                	add	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
200115c6:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
200115ca:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
200115ce:	a88d                	j	20011640 <__metal_driver_riscv_clint0_command_request+0x11a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
200115d0:	fd442783          	lw	a5,-44(s0)
200115d4:	cba5                	beqz	a5,20011644 <__metal_driver_riscv_clint0_command_request+0x11e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
200115d6:	fd442783          	lw	a5,-44(s0)
200115da:	439c                	lw	a5,0(a5)
200115dc:	fef42023          	sw	a5,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
200115e0:	fe042783          	lw	a5,-32(s0)
200115e4:	078a                	slli	a5,a5,0x2
200115e6:	873e                	mv	a4,a5
200115e8:	fe442783          	lw	a5,-28(s0)
200115ec:	97ba                	add	a5,a5,a4
200115ee:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
200115f0:	4785                	li	a5,1
200115f2:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
200115f4:	0480000f          	fence	o,i
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
200115f8:	fe042783          	lw	a5,-32(s0)
200115fc:	078a                	slli	a5,a5,0x2
200115fe:	873e                	mv	a4,a5
20011600:	fe442783          	lw	a5,-28(s0)
20011604:	97ba                	add	a5,a5,a4
20011606:	439c                	lw	a5,0(a5)
20011608:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
2001160c:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20011610:	a815                	j	20011644 <__metal_driver_riscv_clint0_command_request+0x11e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20011612:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20011616:	fd442783          	lw	a5,-44(s0)
2001161a:	c79d                	beqz	a5,20011648 <__metal_driver_riscv_clint0_command_request+0x122>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
2001161c:	fd442783          	lw	a5,-44(s0)
20011620:	439c                	lw	a5,0(a5)
20011622:	fef42023          	sw	a5,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20011626:	fe042783          	lw	a5,-32(s0)
2001162a:	078a                	slli	a5,a5,0x2
2001162c:	873e                	mv	a4,a5
2001162e:	fe442783          	lw	a5,-28(s0)
20011632:	97ba                	add	a5,a5,a4
20011634:	439c                	lw	a5,0(a5)
20011636:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2001163a:	a039                	j	20011648 <__metal_driver_riscv_clint0_command_request+0x122>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2001163c:	0001                	nop
2001163e:	a031                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20011640:	0001                	nop
20011642:	a021                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20011644:	0001                	nop
20011646:	a011                	j	2001164a <__metal_driver_riscv_clint0_command_request+0x124>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20011648:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
2001164a:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:267
}
2001164e:	853e                	mv	a0,a5
20011650:	50b2                	lw	ra,44(sp)
20011652:	5422                	lw	s0,40(sp)
20011654:	6145                	addi	sp,sp,48
20011656:	8082                	ret

20011658 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20011658:	7179                	addi	sp,sp,-48
2001165a:	d606                	sw	ra,44(sp)
2001165c:	d422                	sw	s0,40(sp)
2001165e:	1800                	addi	s0,sp,48
20011660:	fca42e23          	sw	a0,-36(s0)
20011664:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20011668:	1b7030ef          	jal	ra,2001501e <metal_cpu_get_current_hartid>
2001166c:	87aa                	mv	a5,a0
2001166e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20011672:	fec40793          	addi	a5,s0,-20
20011676:	863e                	mv	a2,a5
20011678:	4589                	li	a1,2
2001167a:	fdc42503          	lw	a0,-36(s0)
2001167e:	3565                	jal	20011526 <__metal_driver_riscv_clint0_command_request>
20011680:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20011682:	853e                	mv	a0,a5
20011684:	50b2                	lw	ra,44(sp)
20011686:	5422                	lw	s0,40(sp)
20011688:	6145                	addi	sp,sp,48
2001168a:	8082                	ret

2001168c <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
2001168c:	7179                	addi	sp,sp,-48
2001168e:	d606                	sw	ra,44(sp)
20011690:	d422                	sw	s0,40(sp)
20011692:	1800                	addi	s0,sp,48
20011694:	fca42e23          	sw	a0,-36(s0)
20011698:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
2001169c:	183030ef          	jal	ra,2001501e <metal_cpu_get_current_hartid>
200116a0:	87aa                	mv	a5,a0
200116a2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
200116a6:	fec40793          	addi	a5,s0,-20
200116aa:	863e                	mv	a2,a5
200116ac:	458d                	li	a1,3
200116ae:	fdc42503          	lw	a0,-36(s0)
200116b2:	3d95                	jal	20011526 <__metal_driver_riscv_clint0_command_request>
200116b4:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
200116b6:	853e                	mv	a0,a5
200116b8:	50b2                	lw	ra,44(sp)
200116ba:	5422                	lw	s0,40(sp)
200116bc:	6145                	addi	sp,sp,48
200116be:	8082                	ret

200116c0 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
200116c0:	1101                	addi	sp,sp,-32
200116c2:	ce22                	sw	s0,28(sp)
200116c4:	1000                	addi	s0,sp,32
200116c6:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200116ca:	fec42703          	lw	a4,-20(s0)
200116ce:	800017b7          	lui	a5,0x80001
200116d2:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <__global_pointer$+0xfffff80c>
200116d6:	00f71463          	bne	a4,a5,200116de <__metal_driver_cpu_hartid+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:294
		return 0;
200116da:	4781                	li	a5,0
200116dc:	a011                	j	200116e0 <__metal_driver_cpu_hartid+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:297
	}
	else {
		return -1;
200116de:	57fd                	li	a5,-1
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:299
	}
}
200116e0:	853e                	mv	a0,a5
200116e2:	4472                	lw	s0,28(sp)
200116e4:	6105                	addi	sp,sp,32
200116e6:	8082                	ret

200116e8 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
200116e8:	1101                	addi	sp,sp,-32
200116ea:	ce22                	sw	s0,28(sp)
200116ec:	1000                	addi	s0,sp,32
200116ee:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200116f2:	fec42703          	lw	a4,-20(s0)
200116f6:	800017b7          	lui	a5,0x80001
200116fa:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <__global_pointer$+0xfffff80c>
200116fe:	00f71763          	bne	a4,a5,2001170c <__metal_driver_cpu_timebase+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:304
		return 16000000;
20011702:	00f427b7          	lui	a5,0xf42
20011706:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
2001170a:	a011                	j	2001170e <__metal_driver_cpu_timebase+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:307
	}
	else {
		return 0;
2001170c:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:309
	}
}
2001170e:	853e                	mv	a0,a5
20011710:	4472                	lw	s0,28(sp)
20011712:	6105                	addi	sp,sp,32
20011714:	8082                	ret

20011716 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20011716:	1101                	addi	sp,sp,-32
20011718:	ce22                	sw	s0,28(sp)
2001171a:	1000                	addi	s0,sp,32
2001171c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20011720:	fec42703          	lw	a4,-20(s0)
20011724:	800017b7          	lui	a5,0x80001
20011728:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <__global_pointer$+0xfffff80c>
2001172c:	00f71763          	bne	a4,a5,2001173a <__metal_driver_cpu_interrupt_controller+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20011730:	800007b7          	lui	a5,0x80000
20011734:	04078793          	addi	a5,a5,64 # 80000040 <__global_pointer$+0xffffedd0>
20011738:	a011                	j	2001173c <__metal_driver_cpu_interrupt_controller+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:317
	}
	else {
		return NULL;
2001173a:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:319
	}
}
2001173c:	853e                	mv	a0,a5
2001173e:	4472                	lw	s0,28(sp)
20011740:	6105                	addi	sp,sp,32
20011742:	8082                	ret

20011744 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20011744:	1101                	addi	sp,sp,-32
20011746:	ce22                	sw	s0,28(sp)
20011748:	1000                	addi	s0,sp,32
2001174a:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2001174e:	fec42703          	lw	a4,-20(s0)
20011752:	800017b7          	lui	a5,0x80001
20011756:	a7c78793          	addi	a5,a5,-1412 # 80000a7c <__global_pointer$+0xfffff80c>
2001175a:	00f71463          	bne	a4,a5,20011762 <__metal_driver_cpu_buserror+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:334
		return NULL;
2001175e:	4781                	li	a5,0
20011760:	a011                	j	20011764 <__metal_driver_cpu_buserror+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:337
	}
	else {
		return NULL;
20011762:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:339
	}
}
20011764:	853e                	mv	a0,a5
20011766:	4472                	lw	s0,28(sp)
20011768:	6105                	addi	sp,sp,32
2001176a:	8082                	ret

2001176c <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
2001176c:	1101                	addi	sp,sp,-32
2001176e:	ce22                	sw	s0,28(sp)
20011770:	1000                	addi	s0,sp,32
20011772:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20011776:	fec42783          	lw	a5,-20(s0)
2001177a:	00f04c63          	bgtz	a5,20011792 <__metal_driver_cpu_get+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
2001177e:	800017b7          	lui	a5,0x80001
20011782:	fec42703          	lw	a4,-20(s0)
20011786:	070a                	slli	a4,a4,0x2
20011788:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
2001178c:	97ba                	add	a5,a5,a4
2001178e:	439c                	lw	a5,0(a5)
20011790:	a011                	j	20011794 <__metal_driver_cpu_get+0x28>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20011792:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:30
}
20011794:	853e                	mv	a0,a5
20011796:	4472                	lw	s0,28(sp)
20011798:	6105                	addi	sp,sp,32
2001179a:	8082                	ret

2001179c <__metal_myhart_id>:
__metal_myhart_id():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
2001179c:	1101                	addi	sp,sp,-32
2001179e:	ce22                	sw	s0,28(sp)
200117a0:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
200117a2:	f14027f3          	csrr	a5,mhartid
200117a6:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
200117aa:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:36
}
200117ae:	853e                	mv	a0,a5
200117b0:	4472                	lw	s0,28(sp)
200117b2:	6105                	addi	sp,sp,32
200117b4:	8082                	ret

200117b6 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
200117b6:	1101                	addi	sp,sp,-32
200117b8:	ce22                	sw	s0,28(sp)
200117ba:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
200117bc:	47a1                	li	a5,8
200117be:	3007a7f3          	csrrs	a5,mstatus,a5
200117c2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
200117c6:	0001                	nop
200117c8:	4472                	lw	s0,28(sp)
200117ca:	6105                	addi	sp,sp,32
200117cc:	8082                	ret

200117ce <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
200117ce:	1101                	addi	sp,sp,-32
200117d0:	ce22                	sw	s0,28(sp)
200117d2:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
200117d4:	47a1                	li	a5,8
200117d6:	3007b7f3          	csrrc	a5,mstatus,a5
200117da:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
200117de:	0001                	nop
200117e0:	4472                	lw	s0,28(sp)
200117e2:	6105                	addi	sp,sp,32
200117e4:	8082                	ret

200117e6 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
200117e6:	1101                	addi	sp,sp,-32
200117e8:	ce22                	sw	s0,28(sp)
200117ea:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
200117ec:	47a1                	li	a5,8
200117ee:	3047a7f3          	csrrs	a5,mie,a5
200117f2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
200117f6:	0001                	nop
200117f8:	4472                	lw	s0,28(sp)
200117fa:	6105                	addi	sp,sp,32
200117fc:	8082                	ret

200117fe <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
200117fe:	1101                	addi	sp,sp,-32
20011800:	ce22                	sw	s0,28(sp)
20011802:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011804:	47a1                	li	a5,8
20011806:	3047b7f3          	csrrc	a5,mie,a5
2001180a:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2001180e:	0001                	nop
20011810:	4472                	lw	s0,28(sp)
20011812:	6105                	addi	sp,sp,32
20011814:	8082                	ret

20011816 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20011816:	1101                	addi	sp,sp,-32
20011818:	ce22                	sw	s0,28(sp)
2001181a:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2001181c:	08000793          	li	a5,128
20011820:	3047a7f3          	csrrs	a5,mie,a5
20011824:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011828:	0001                	nop
2001182a:	4472                	lw	s0,28(sp)
2001182c:	6105                	addi	sp,sp,32
2001182e:	8082                	ret

20011830 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20011830:	1101                	addi	sp,sp,-32
20011832:	ce22                	sw	s0,28(sp)
20011834:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20011836:	08000793          	li	a5,128
2001183a:	3047b7f3          	csrrc	a5,mie,a5
2001183e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20011842:	0001                	nop
20011844:	4472                	lw	s0,28(sp)
20011846:	6105                	addi	sp,sp,32
20011848:	8082                	ret

2001184a <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
2001184a:	1101                	addi	sp,sp,-32
2001184c:	ce22                	sw	s0,28(sp)
2001184e:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20011850:	6785                	lui	a5,0x1
20011852:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011856:	3047a7f3          	csrrs	a5,mie,a5
2001185a:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2001185e:	0001                	nop
20011860:	4472                	lw	s0,28(sp)
20011862:	6105                	addi	sp,sp,32
20011864:	8082                	ret

20011866 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20011866:	1101                	addi	sp,sp,-32
20011868:	ce22                	sw	s0,28(sp)
2001186a:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
2001186c:	6785                	lui	a5,0x1
2001186e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20011872:	3047b7f3          	csrrc	a5,mie,a5
20011876:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2001187a:	0001                	nop
2001187c:	4472                	lw	s0,28(sp)
2001187e:	6105                	addi	sp,sp,32
20011880:	8082                	ret

20011882 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20011882:	7179                	addi	sp,sp,-48
20011884:	d622                	sw	s0,44(sp)
20011886:	1800                	addi	s0,sp,48
20011888:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
2001188c:	fdc42783          	lw	a5,-36(s0)
20011890:	4705                	li	a4,1
20011892:	00f717b3          	sll	a5,a4,a5
20011896:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
2001189a:	fec42783          	lw	a5,-20(s0)
2001189e:	3047a7f3          	csrrs	a5,mie,a5
200118a2:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:105
}
200118a6:	0001                	nop
200118a8:	5432                	lw	s0,44(sp)
200118aa:	6145                	addi	sp,sp,48
200118ac:	8082                	ret

200118ae <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
200118ae:	7179                	addi	sp,sp,-48
200118b0:	d622                	sw	s0,44(sp)
200118b2:	1800                	addi	s0,sp,48
200118b4:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
200118b8:	fdc42783          	lw	a5,-36(s0)
200118bc:	4705                	li	a4,1
200118be:	00f717b3          	sll	a5,a4,a5
200118c2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
200118c6:	fec42783          	lw	a5,-20(s0)
200118ca:	3047b7f3          	csrrc	a5,mie,a5
200118ce:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:111
}
200118d2:	0001                	nop
200118d4:	5432                	lw	s0,44(sp)
200118d6:	6145                	addi	sp,sp,48
200118d8:	8082                	ret

200118da <__metal_default_exception_handler>:
__metal_default_exception_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
200118da:	1101                	addi	sp,sp,-32
200118dc:	ce06                	sw	ra,28(sp)
200118de:	cc22                	sw	s0,24(sp)
200118e0:	1000                	addi	s0,sp,32
200118e2:	fea42623          	sw	a0,-20(s0)
200118e6:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
200118ea:	06400513          	li	a0,100
200118ee:	195030ef          	jal	ra,20015282 <metal_shutdown>

200118f2 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
200118f2:	1101                	addi	sp,sp,-32
200118f4:	ce06                	sw	ra,28(sp)
200118f6:	cc22                	sw	s0,24(sp)
200118f8:	1000                	addi	s0,sp,32
200118fa:	fea42623          	sw	a0,-20(s0)
200118fe:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20011902:	0c800513          	li	a0,200
20011906:	17d030ef          	jal	ra,20015282 <metal_shutdown>

2001190a <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
2001190a:	715d                	addi	sp,sp,-80
2001190c:	c686                	sw	ra,76(sp)
2001190e:	c496                	sw	t0,72(sp)
20011910:	c29a                	sw	t1,68(sp)
20011912:	c09e                	sw	t2,64(sp)
20011914:	de22                	sw	s0,60(sp)
20011916:	dc2a                	sw	a0,56(sp)
20011918:	da2e                	sw	a1,52(sp)
2001191a:	d832                	sw	a2,48(sp)
2001191c:	d636                	sw	a3,44(sp)
2001191e:	d43a                	sw	a4,40(sp)
20011920:	d23e                	sw	a5,36(sp)
20011922:	d042                	sw	a6,32(sp)
20011924:	ce46                	sw	a7,28(sp)
20011926:	cc72                	sw	t3,24(sp)
20011928:	ca76                	sw	t4,20(sp)
2001192a:	c87a                	sw	t5,16(sp)
2001192c:	c67e                	sw	t6,12(sp)
2001192e:	0880                	addi	s0,sp,80
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20011930:	12c00513          	li	a0,300
20011934:	14f030ef          	jal	ra,20015282 <metal_shutdown>

20011938 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20011938:	711d                	addi	sp,sp,-96
2001193a:	ce86                	sw	ra,92(sp)
2001193c:	cc96                	sw	t0,88(sp)
2001193e:	ca9a                	sw	t1,84(sp)
20011940:	c89e                	sw	t2,80(sp)
20011942:	c6a2                	sw	s0,76(sp)
20011944:	c4aa                	sw	a0,72(sp)
20011946:	c2ae                	sw	a1,68(sp)
20011948:	c0b2                	sw	a2,64(sp)
2001194a:	de36                	sw	a3,60(sp)
2001194c:	dc3a                	sw	a4,56(sp)
2001194e:	da3e                	sw	a5,52(sp)
20011950:	d842                	sw	a6,48(sp)
20011952:	d646                	sw	a7,44(sp)
20011954:	d472                	sw	t3,40(sp)
20011956:	d276                	sw	t4,36(sp)
20011958:	d07a                	sw	t5,32(sp)
2001195a:	ce7e                	sw	t6,28(sp)
2001195c:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
2001195e:	3d3d                	jal	2001179c <__metal_myhart_id>
20011960:	872a                	mv	a4,a0
20011962:	800017b7          	lui	a5,0x80001
20011966:	070a                	slli	a4,a4,0x2
20011968:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
2001196c:	97ba                	add	a5,a5,a4
2001196e:	439c                	lw	a5,0(a5)
20011970:	faf42623          	sw	a5,-84(s0)
20011974:	fac42783          	lw	a5,-84(s0)
20011978:	c785                	beqz	a5,200119a0 <metal_software_interrupt_vector_handler+0x68>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
2001197a:	fac42503          	lw	a0,-84(s0)
2001197e:	3b61                	jal	20011716 <__metal_driver_cpu_interrupt_controller>
20011980:	faa42423          	sw	a0,-88(s0)
20011984:	fa842783          	lw	a5,-88(s0)
20011988:	0e07a783          	lw	a5,224(a5)
2001198c:	faf42223          	sw	a5,-92(s0)
20011990:	fa842783          	lw	a5,-88(s0)
20011994:	0d87a783          	lw	a5,216(a5)
20011998:	fa442583          	lw	a1,-92(s0)
2001199c:	450d                	li	a0,3
2001199e:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:130
}
200119a0:	0001                	nop
200119a2:	40f6                	lw	ra,92(sp)
200119a4:	42e6                	lw	t0,88(sp)
200119a6:	4356                	lw	t1,84(sp)
200119a8:	43c6                	lw	t2,80(sp)
200119aa:	4436                	lw	s0,76(sp)
200119ac:	4526                	lw	a0,72(sp)
200119ae:	4596                	lw	a1,68(sp)
200119b0:	4606                	lw	a2,64(sp)
200119b2:	56f2                	lw	a3,60(sp)
200119b4:	5762                	lw	a4,56(sp)
200119b6:	57d2                	lw	a5,52(sp)
200119b8:	5842                	lw	a6,48(sp)
200119ba:	58b2                	lw	a7,44(sp)
200119bc:	5e22                	lw	t3,40(sp)
200119be:	5e92                	lw	t4,36(sp)
200119c0:	5f02                	lw	t5,32(sp)
200119c2:	4ff2                	lw	t6,28(sp)
200119c4:	6125                	addi	sp,sp,96
200119c6:	30200073          	mret

200119ca <__metal_default_sw_handler>:
__metal_default_sw_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
200119ca:	7179                	addi	sp,sp,-48
200119cc:	d606                	sw	ra,44(sp)
200119ce:	d422                	sw	s0,40(sp)
200119d0:	1800                	addi	s0,sp,48
200119d2:	fca42e23          	sw	a0,-36(s0)
200119d6:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
200119da:	33c9                	jal	2001179c <__metal_myhart_id>
200119dc:	872a                	mv	a4,a0
200119de:	800017b7          	lui	a5,0x80001
200119e2:	070a                	slli	a4,a4,0x2
200119e4:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
200119e8:	97ba                	add	a5,a5,a4
200119ea:	439c                	lw	a5,0(a5)
200119ec:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
200119f0:	342027f3          	csrr	a5,mcause
200119f4:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
200119f8:	fec42783          	lw	a5,-20(s0)
200119fc:	c795                	beqz	a5,20011a28 <__metal_default_sw_handler+0x5e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
200119fe:	fec42503          	lw	a0,-20(s0)
20011a02:	3b11                	jal	20011716 <__metal_driver_cpu_interrupt_controller>
20011a04:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20011a08:	fe842783          	lw	a5,-24(s0)
20011a0c:	3ff7f793          	andi	a5,a5,1023
20011a10:	fe442703          	lw	a4,-28(s0)
20011a14:	0e878793          	addi	a5,a5,232
20011a18:	078a                	slli	a5,a5,0x2
20011a1a:	97ba                	add	a5,a5,a4
20011a1c:	439c                	lw	a5,0(a5)
20011a1e:	fdc42583          	lw	a1,-36(s0)
20011a22:	fec42503          	lw	a0,-20(s0)
20011a26:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20011a28:	0001                	nop
20011a2a:	50b2                	lw	ra,44(sp)
20011a2c:	5422                	lw	s0,40(sp)
20011a2e:	6145                	addi	sp,sp,48
20011a30:	8082                	ret

20011a32 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20011a32:	711d                	addi	sp,sp,-96
20011a34:	ce86                	sw	ra,92(sp)
20011a36:	cc96                	sw	t0,88(sp)
20011a38:	ca9a                	sw	t1,84(sp)
20011a3a:	c89e                	sw	t2,80(sp)
20011a3c:	c6a2                	sw	s0,76(sp)
20011a3e:	c4aa                	sw	a0,72(sp)
20011a40:	c2ae                	sw	a1,68(sp)
20011a42:	c0b2                	sw	a2,64(sp)
20011a44:	de36                	sw	a3,60(sp)
20011a46:	dc3a                	sw	a4,56(sp)
20011a48:	da3e                	sw	a5,52(sp)
20011a4a:	d842                	sw	a6,48(sp)
20011a4c:	d646                	sw	a7,44(sp)
20011a4e:	d472                	sw	t3,40(sp)
20011a50:	d276                	sw	t4,36(sp)
20011a52:	d07a                	sw	t5,32(sp)
20011a54:	ce7e                	sw	t6,28(sp)
20011a56:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20011a58:	3391                	jal	2001179c <__metal_myhart_id>
20011a5a:	872a                	mv	a4,a0
20011a5c:	800017b7          	lui	a5,0x80001
20011a60:	070a                	slli	a4,a4,0x2
20011a62:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20011a66:	97ba                	add	a5,a5,a4
20011a68:	439c                	lw	a5,0(a5)
20011a6a:	faf42623          	sw	a5,-84(s0)
20011a6e:	fac42783          	lw	a5,-84(s0)
20011a72:	c785                	beqz	a5,20011a9a <metal_timer_interrupt_vector_handler+0x68>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20011a74:	fac42503          	lw	a0,-84(s0)
20011a78:	3979                	jal	20011716 <__metal_driver_cpu_interrupt_controller>
20011a7a:	faa42423          	sw	a0,-88(s0)
20011a7e:	fa842783          	lw	a5,-88(s0)
20011a82:	1407a783          	lw	a5,320(a5)
20011a86:	faf42223          	sw	a5,-92(s0)
20011a8a:	fa842783          	lw	a5,-88(s0)
20011a8e:	1387a783          	lw	a5,312(a5)
20011a92:	fa442583          	lw	a1,-92(s0)
20011a96:	451d                	li	a0,7
20011a98:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:150
}
20011a9a:	0001                	nop
20011a9c:	40f6                	lw	ra,92(sp)
20011a9e:	42e6                	lw	t0,88(sp)
20011aa0:	4356                	lw	t1,84(sp)
20011aa2:	43c6                	lw	t2,80(sp)
20011aa4:	4436                	lw	s0,76(sp)
20011aa6:	4526                	lw	a0,72(sp)
20011aa8:	4596                	lw	a1,68(sp)
20011aaa:	4606                	lw	a2,64(sp)
20011aac:	56f2                	lw	a3,60(sp)
20011aae:	5762                	lw	a4,56(sp)
20011ab0:	57d2                	lw	a5,52(sp)
20011ab2:	5842                	lw	a6,48(sp)
20011ab4:	58b2                	lw	a7,44(sp)
20011ab6:	5e22                	lw	t3,40(sp)
20011ab8:	5e92                	lw	t4,36(sp)
20011aba:	5f02                	lw	t5,32(sp)
20011abc:	4ff2                	lw	t6,28(sp)
20011abe:	6125                	addi	sp,sp,96
20011ac0:	30200073          	mret

20011ac4 <__metal_default_beu_handler>:
__metal_default_beu_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20011ac4:	1101                	addi	sp,sp,-32
20011ac6:	ce22                	sw	s0,28(sp)
20011ac8:	1000                	addi	s0,sp,32
20011aca:	fea42623          	sw	a0,-20(s0)
20011ace:	feb42423          	sw	a1,-24(s0)
20011ad2:	0001                	nop
20011ad4:	4472                	lw	s0,28(sp)
20011ad6:	6105                	addi	sp,sp,32
20011ad8:	8082                	ret

20011ada <__metal_default_timer_handler>:
__metal_default_timer_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20011ada:	7179                	addi	sp,sp,-48
20011adc:	d606                	sw	ra,44(sp)
20011ade:	d422                	sw	s0,40(sp)
20011ae0:	1800                	addi	s0,sp,48
20011ae2:	fca42e23          	sw	a0,-36(s0)
20011ae6:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20011aea:	394d                	jal	2001179c <__metal_myhart_id>
20011aec:	87aa                	mv	a5,a0
20011aee:	853e                	mv	a0,a5
20011af0:	39b5                	jal	2001176c <__metal_driver_cpu_get>
20011af2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20011af6:	fec42503          	lw	a0,-20(s0)
20011afa:	27a010ef          	jal	ra,20012d74 <__metal_driver_cpu_mtime_get>
20011afe:	fea42023          	sw	a0,-32(s0)
20011b02:	feb42223          	sw	a1,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20011b06:	fe042783          	lw	a5,-32(s0)
20011b0a:	fe442803          	lw	a6,-28(s0)
20011b0e:	45a9                	li	a1,10
20011b10:	4601                	li	a2,0
20011b12:	00b786b3          	add	a3,a5,a1
20011b16:	8536                	mv	a0,a3
20011b18:	00f53533          	sltu	a0,a0,a5
20011b1c:	00c80733          	add	a4,a6,a2
20011b20:	00e507b3          	add	a5,a0,a4
20011b24:	873e                	mv	a4,a5
20011b26:	87b6                	mv	a5,a3
20011b28:	883a                	mv	a6,a4
20011b2a:	85be                	mv	a1,a5
20011b2c:	8642                	mv	a2,a6
20011b2e:	fec42503          	lw	a0,-20(s0)
20011b32:	2a8010ef          	jal	ra,20012dda <__metal_driver_cpu_mtimecmp_set>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:160
}
20011b36:	0001                	nop
20011b38:	50b2                	lw	ra,44(sp)
20011b3a:	5422                	lw	s0,40(sp)
20011b3c:	6145                	addi	sp,sp,48
20011b3e:	8082                	ret
	...

20011b80 <__metal_exception_handler>:
__metal_exception_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20011b80:	7119                	addi	sp,sp,-128
20011b82:	de86                	sw	ra,124(sp)
20011b84:	dc96                	sw	t0,120(sp)
20011b86:	da9a                	sw	t1,116(sp)
20011b88:	d89e                	sw	t2,112(sp)
20011b8a:	d6a2                	sw	s0,108(sp)
20011b8c:	d4aa                	sw	a0,104(sp)
20011b8e:	d2ae                	sw	a1,100(sp)
20011b90:	d0b2                	sw	a2,96(sp)
20011b92:	ceb6                	sw	a3,92(sp)
20011b94:	ccba                	sw	a4,88(sp)
20011b96:	cabe                	sw	a5,84(sp)
20011b98:	c8c2                	sw	a6,80(sp)
20011b9a:	c6c6                	sw	a7,76(sp)
20011b9c:	c4f2                	sw	t3,72(sp)
20011b9e:	c2f6                	sw	t4,68(sp)
20011ba0:	c0fa                	sw	t5,64(sp)
20011ba2:	de7e                	sw	t6,60(sp)
20011ba4:	0100                	addi	s0,sp,128
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20011ba6:	3edd                	jal	2001179c <__metal_myhart_id>
20011ba8:	872a                	mv	a4,a0
20011baa:	800017b7          	lui	a5,0x80001
20011bae:	070a                	slli	a4,a4,0x2
20011bb0:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20011bb4:	97ba                	add	a5,a5,a4
20011bb6:	439c                	lw	a5,0(a5)
20011bb8:	faf42623          	sw	a5,-84(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20011bbc:	342027f3          	csrr	a5,mcause
20011bc0:	faf42423          	sw	a5,-88(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20011bc4:	341027f3          	csrr	a5,mepc
20011bc8:	faf42223          	sw	a5,-92(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20011bcc:	343027f3          	csrr	a5,mtval
20011bd0:	faf42023          	sw	a5,-96(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20011bd4:	305027f3          	csrr	a5,mtvec
20011bd8:	f8f42e23          	sw	a5,-100(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20011bdc:	fac42783          	lw	a5,-84(s0)
20011be0:	cbf5                	beqz	a5,20011cd4 <__metal_exception_handler+0x154>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20011be2:	fac42503          	lw	a0,-84(s0)
20011be6:	3e05                	jal	20011716 <__metal_driver_cpu_interrupt_controller>
20011be8:	f8a42c23          	sw	a0,-104(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20011bec:	fa842783          	lw	a5,-88(s0)
20011bf0:	3ff7f793          	andi	a5,a5,1023
20011bf4:	f8f42a23          	sw	a5,-108(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20011bf8:	fa842783          	lw	a5,-88(s0)
20011bfc:	0a07de63          	bgez	a5,20011cb8 <__metal_exception_handler+0x138>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20011c00:	f9442703          	lw	a4,-108(s0)
20011c04:	08000793          	li	a5,128
20011c08:	02f71263          	bne	a4,a5,20011c2c <__metal_exception_handler+0xac>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20011c0c:	f9842783          	lw	a5,-104(s0)
20011c10:	3987a783          	lw	a5,920(a5)
20011c14:	f8f42823          	sw	a5,-112(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20011c18:	f9842783          	lw	a5,-104(s0)
20011c1c:	3907a783          	lw	a5,912(a5)
20011c20:	f9042583          	lw	a1,-112(s0)
20011c24:	f9442503          	lw	a0,-108(s0)
20011c28:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20011c2a:	a06d                	j	20011cd4 <__metal_exception_handler+0x154>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011c2c:	f9442703          	lw	a4,-108(s0)
20011c30:	47ad                	li	a5,11
20011c32:	00e7d763          	bge	a5,a4,20011c40 <__metal_exception_handler+0xc0>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20011c36:	f9c42783          	lw	a5,-100(s0)
20011c3a:	03f7f793          	andi	a5,a5,63
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20011c3e:	ef9d                	bnez	a5,20011c7c <__metal_exception_handler+0xfc>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20011c40:	f9842683          	lw	a3,-104(s0)
20011c44:	f9442703          	lw	a4,-108(s0)
20011c48:	87ba                	mv	a5,a4
20011c4a:	0786                	slli	a5,a5,0x1
20011c4c:	97ba                	add	a5,a5,a4
20011c4e:	078e                	slli	a5,a5,0x3
20011c50:	97b6                	add	a5,a5,a3
20011c52:	0987a783          	lw	a5,152(a5)
20011c56:	f8f42823          	sw	a5,-112(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20011c5a:	f9842683          	lw	a3,-104(s0)
20011c5e:	f9442703          	lw	a4,-108(s0)
20011c62:	87ba                	mv	a5,a4
20011c64:	0786                	slli	a5,a5,0x1
20011c66:	97ba                	add	a5,a5,a4
20011c68:	078e                	slli	a5,a5,0x3
20011c6a:	97b6                	add	a5,a5,a3
20011c6c:	0907a783          	lw	a5,144(a5)
20011c70:	f9042583          	lw	a1,-112(s0)
20011c74:	f9442503          	lw	a0,-108(s0)
20011c78:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20011c7a:	a8a9                	j	20011cd4 <__metal_exception_handler+0x154>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20011c7c:	f9c42783          	lw	a5,-100(s0)
20011c80:	03f7f713          	andi	a4,a5,63
20011c84:	4789                	li	a5,2
20011c86:	04f71763          	bne	a4,a5,20011cd4 <__metal_exception_handler+0x154>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20011c8a:	307027f3          	csrr	a5,mtvt
20011c8e:	f8f42623          	sw	a5,-116(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20011c92:	f9842783          	lw	a5,-104(s0)
20011c96:	0dc7a783          	lw	a5,220(a5)
20011c9a:	f8f42823          	sw	a5,-112(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20011c9e:	f8c42783          	lw	a5,-116(s0)
20011ca2:	439c                	lw	a5,0(a5)
20011ca4:	f8f42423          	sw	a5,-120(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20011ca8:	f8842783          	lw	a5,-120(s0)
20011cac:	f9042583          	lw	a1,-112(s0)
20011cb0:	f9442503          	lw	a0,-108(s0)
20011cb4:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20011cb6:	a839                	j	20011cd4 <__metal_exception_handler+0x154>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20011cb8:	f9842703          	lw	a4,-104(s0)
20011cbc:	f9442783          	lw	a5,-108(s0)
20011cc0:	0e878793          	addi	a5,a5,232
20011cc4:	078a                	slli	a5,a5,0x2
20011cc6:	97ba                	add	a5,a5,a4
20011cc8:	439c                	lw	a5,0(a5)
20011cca:	f9442583          	lw	a1,-108(s0)
20011cce:	fac42503          	lw	a0,-84(s0)
20011cd2:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20011cd4:	50f6                	lw	ra,124(sp)
20011cd6:	52e6                	lw	t0,120(sp)
20011cd8:	5356                	lw	t1,116(sp)
20011cda:	53c6                	lw	t2,112(sp)
20011cdc:	5436                	lw	s0,108(sp)
20011cde:	5526                	lw	a0,104(sp)
20011ce0:	5596                	lw	a1,100(sp)
20011ce2:	5606                	lw	a2,96(sp)
20011ce4:	46f6                	lw	a3,92(sp)
20011ce6:	4766                	lw	a4,88(sp)
20011ce8:	47d6                	lw	a5,84(sp)
20011cea:	4846                	lw	a6,80(sp)
20011cec:	48b6                	lw	a7,76(sp)
20011cee:	4e26                	lw	t3,72(sp)
20011cf0:	4e96                	lw	t4,68(sp)
20011cf2:	4f06                	lw	t5,64(sp)
20011cf4:	5ff2                	lw	t6,60(sp)
20011cf6:	6109                	addi	sp,sp,128
20011cf8:	30200073          	mret
	...

20011d76 <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20011d76:	711d                	addi	sp,sp,-96
20011d78:	ce86                	sw	ra,92(sp)
20011d7a:	cc96                	sw	t0,88(sp)
20011d7c:	ca9a                	sw	t1,84(sp)
20011d7e:	c89e                	sw	t2,80(sp)
20011d80:	c6a2                	sw	s0,76(sp)
20011d82:	c4aa                	sw	a0,72(sp)
20011d84:	c2ae                	sw	a1,68(sp)
20011d86:	c0b2                	sw	a2,64(sp)
20011d88:	de36                	sw	a3,60(sp)
20011d8a:	dc3a                	sw	a4,56(sp)
20011d8c:	da3e                	sw	a5,52(sp)
20011d8e:	d842                	sw	a6,48(sp)
20011d90:	d646                	sw	a7,44(sp)
20011d92:	d472                	sw	t3,40(sp)
20011d94:	d276                	sw	t4,36(sp)
20011d96:	d07a                	sw	t5,32(sp)
20011d98:	ce7e                	sw	t6,28(sp)
20011d9a:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20011d9c:	3401                	jal	2001179c <__metal_myhart_id>
20011d9e:	872a                	mv	a4,a0
20011da0:	800017b7          	lui	a5,0x80001
20011da4:	070a                	slli	a4,a4,0x2
20011da6:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20011daa:	97ba                	add	a5,a5,a4
20011dac:	439c                	lw	a5,0(a5)
20011dae:	faf42623          	sw	a5,-84(s0)
20011db2:	fac42783          	lw	a5,-84(s0)
20011db6:	c78d                	beqz	a5,20011de0 <metal_lc0_interrupt_vector_handler+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20011db8:	fac42503          	lw	a0,-84(s0)
20011dbc:	95bff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20011dc0:	faa42423          	sw	a0,-88(s0)
20011dc4:	fa842783          	lw	a5,-88(s0)
20011dc8:	2187a783          	lw	a5,536(a5)
20011dcc:	faf42223          	sw	a5,-92(s0)
20011dd0:	fa842783          	lw	a5,-88(s0)
20011dd4:	2107a783          	lw	a5,528(a5)
20011dd8:	fa442583          	lw	a1,-92(s0)
20011ddc:	4541                	li	a0,16
20011dde:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:216
}
20011de0:	0001                	nop
20011de2:	40f6                	lw	ra,92(sp)
20011de4:	42e6                	lw	t0,88(sp)
20011de6:	4356                	lw	t1,84(sp)
20011de8:	43c6                	lw	t2,80(sp)
20011dea:	4436                	lw	s0,76(sp)
20011dec:	4526                	lw	a0,72(sp)
20011dee:	4596                	lw	a1,68(sp)
20011df0:	4606                	lw	a2,64(sp)
20011df2:	56f2                	lw	a3,60(sp)
20011df4:	5762                	lw	a4,56(sp)
20011df6:	57d2                	lw	a5,52(sp)
20011df8:	5842                	lw	a6,48(sp)
20011dfa:	58b2                	lw	a7,44(sp)
20011dfc:	5e22                	lw	t3,40(sp)
20011dfe:	5e92                	lw	t4,36(sp)
20011e00:	5f02                	lw	t5,32(sp)
20011e02:	4ff2                	lw	t6,28(sp)
20011e04:	6125                	addi	sp,sp,96
20011e06:	30200073          	mret

20011e0a <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20011e0a:	711d                	addi	sp,sp,-96
20011e0c:	ce86                	sw	ra,92(sp)
20011e0e:	cc96                	sw	t0,88(sp)
20011e10:	ca9a                	sw	t1,84(sp)
20011e12:	c89e                	sw	t2,80(sp)
20011e14:	c6a2                	sw	s0,76(sp)
20011e16:	c4aa                	sw	a0,72(sp)
20011e18:	c2ae                	sw	a1,68(sp)
20011e1a:	c0b2                	sw	a2,64(sp)
20011e1c:	de36                	sw	a3,60(sp)
20011e1e:	dc3a                	sw	a4,56(sp)
20011e20:	da3e                	sw	a5,52(sp)
20011e22:	d842                	sw	a6,48(sp)
20011e24:	d646                	sw	a7,44(sp)
20011e26:	d472                	sw	t3,40(sp)
20011e28:	d276                	sw	t4,36(sp)
20011e2a:	d07a                	sw	t5,32(sp)
20011e2c:	ce7e                	sw	t6,28(sp)
20011e2e:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20011e30:	96dff0ef          	jal	ra,2001179c <__metal_myhart_id>
20011e34:	872a                	mv	a4,a0
20011e36:	800017b7          	lui	a5,0x80001
20011e3a:	070a                	slli	a4,a4,0x2
20011e3c:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20011e40:	97ba                	add	a5,a5,a4
20011e42:	439c                	lw	a5,0(a5)
20011e44:	faf42623          	sw	a5,-84(s0)
20011e48:	fac42783          	lw	a5,-84(s0)
20011e4c:	c78d                	beqz	a5,20011e76 <metal_lc1_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20011e4e:	fac42503          	lw	a0,-84(s0)
20011e52:	8c5ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20011e56:	faa42423          	sw	a0,-88(s0)
20011e5a:	fa842783          	lw	a5,-88(s0)
20011e5e:	2307a783          	lw	a5,560(a5)
20011e62:	faf42223          	sw	a5,-92(s0)
20011e66:	fa842783          	lw	a5,-88(s0)
20011e6a:	2287a783          	lw	a5,552(a5)
20011e6e:	fa442583          	lw	a1,-92(s0)
20011e72:	4545                	li	a0,17
20011e74:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:221
}
20011e76:	0001                	nop
20011e78:	40f6                	lw	ra,92(sp)
20011e7a:	42e6                	lw	t0,88(sp)
20011e7c:	4356                	lw	t1,84(sp)
20011e7e:	43c6                	lw	t2,80(sp)
20011e80:	4436                	lw	s0,76(sp)
20011e82:	4526                	lw	a0,72(sp)
20011e84:	4596                	lw	a1,68(sp)
20011e86:	4606                	lw	a2,64(sp)
20011e88:	56f2                	lw	a3,60(sp)
20011e8a:	5762                	lw	a4,56(sp)
20011e8c:	57d2                	lw	a5,52(sp)
20011e8e:	5842                	lw	a6,48(sp)
20011e90:	58b2                	lw	a7,44(sp)
20011e92:	5e22                	lw	t3,40(sp)
20011e94:	5e92                	lw	t4,36(sp)
20011e96:	5f02                	lw	t5,32(sp)
20011e98:	4ff2                	lw	t6,28(sp)
20011e9a:	6125                	addi	sp,sp,96
20011e9c:	30200073          	mret

20011ea0 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20011ea0:	711d                	addi	sp,sp,-96
20011ea2:	ce86                	sw	ra,92(sp)
20011ea4:	cc96                	sw	t0,88(sp)
20011ea6:	ca9a                	sw	t1,84(sp)
20011ea8:	c89e                	sw	t2,80(sp)
20011eaa:	c6a2                	sw	s0,76(sp)
20011eac:	c4aa                	sw	a0,72(sp)
20011eae:	c2ae                	sw	a1,68(sp)
20011eb0:	c0b2                	sw	a2,64(sp)
20011eb2:	de36                	sw	a3,60(sp)
20011eb4:	dc3a                	sw	a4,56(sp)
20011eb6:	da3e                	sw	a5,52(sp)
20011eb8:	d842                	sw	a6,48(sp)
20011eba:	d646                	sw	a7,44(sp)
20011ebc:	d472                	sw	t3,40(sp)
20011ebe:	d276                	sw	t4,36(sp)
20011ec0:	d07a                	sw	t5,32(sp)
20011ec2:	ce7e                	sw	t6,28(sp)
20011ec4:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20011ec6:	8d7ff0ef          	jal	ra,2001179c <__metal_myhart_id>
20011eca:	872a                	mv	a4,a0
20011ecc:	800017b7          	lui	a5,0x80001
20011ed0:	070a                	slli	a4,a4,0x2
20011ed2:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20011ed6:	97ba                	add	a5,a5,a4
20011ed8:	439c                	lw	a5,0(a5)
20011eda:	faf42623          	sw	a5,-84(s0)
20011ede:	fac42783          	lw	a5,-84(s0)
20011ee2:	c78d                	beqz	a5,20011f0c <metal_lc2_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20011ee4:	fac42503          	lw	a0,-84(s0)
20011ee8:	82fff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20011eec:	faa42423          	sw	a0,-88(s0)
20011ef0:	fa842783          	lw	a5,-88(s0)
20011ef4:	2487a783          	lw	a5,584(a5)
20011ef8:	faf42223          	sw	a5,-92(s0)
20011efc:	fa842783          	lw	a5,-88(s0)
20011f00:	2407a783          	lw	a5,576(a5)
20011f04:	fa442583          	lw	a1,-92(s0)
20011f08:	4549                	li	a0,18
20011f0a:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:226
}
20011f0c:	0001                	nop
20011f0e:	40f6                	lw	ra,92(sp)
20011f10:	42e6                	lw	t0,88(sp)
20011f12:	4356                	lw	t1,84(sp)
20011f14:	43c6                	lw	t2,80(sp)
20011f16:	4436                	lw	s0,76(sp)
20011f18:	4526                	lw	a0,72(sp)
20011f1a:	4596                	lw	a1,68(sp)
20011f1c:	4606                	lw	a2,64(sp)
20011f1e:	56f2                	lw	a3,60(sp)
20011f20:	5762                	lw	a4,56(sp)
20011f22:	57d2                	lw	a5,52(sp)
20011f24:	5842                	lw	a6,48(sp)
20011f26:	58b2                	lw	a7,44(sp)
20011f28:	5e22                	lw	t3,40(sp)
20011f2a:	5e92                	lw	t4,36(sp)
20011f2c:	5f02                	lw	t5,32(sp)
20011f2e:	4ff2                	lw	t6,28(sp)
20011f30:	6125                	addi	sp,sp,96
20011f32:	30200073          	mret

20011f36 <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20011f36:	711d                	addi	sp,sp,-96
20011f38:	ce86                	sw	ra,92(sp)
20011f3a:	cc96                	sw	t0,88(sp)
20011f3c:	ca9a                	sw	t1,84(sp)
20011f3e:	c89e                	sw	t2,80(sp)
20011f40:	c6a2                	sw	s0,76(sp)
20011f42:	c4aa                	sw	a0,72(sp)
20011f44:	c2ae                	sw	a1,68(sp)
20011f46:	c0b2                	sw	a2,64(sp)
20011f48:	de36                	sw	a3,60(sp)
20011f4a:	dc3a                	sw	a4,56(sp)
20011f4c:	da3e                	sw	a5,52(sp)
20011f4e:	d842                	sw	a6,48(sp)
20011f50:	d646                	sw	a7,44(sp)
20011f52:	d472                	sw	t3,40(sp)
20011f54:	d276                	sw	t4,36(sp)
20011f56:	d07a                	sw	t5,32(sp)
20011f58:	ce7e                	sw	t6,28(sp)
20011f5a:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20011f5c:	841ff0ef          	jal	ra,2001179c <__metal_myhart_id>
20011f60:	872a                	mv	a4,a0
20011f62:	800017b7          	lui	a5,0x80001
20011f66:	070a                	slli	a4,a4,0x2
20011f68:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20011f6c:	97ba                	add	a5,a5,a4
20011f6e:	439c                	lw	a5,0(a5)
20011f70:	faf42623          	sw	a5,-84(s0)
20011f74:	fac42783          	lw	a5,-84(s0)
20011f78:	c78d                	beqz	a5,20011fa2 <metal_lc3_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20011f7a:	fac42503          	lw	a0,-84(s0)
20011f7e:	f98ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20011f82:	faa42423          	sw	a0,-88(s0)
20011f86:	fa842783          	lw	a5,-88(s0)
20011f8a:	2607a783          	lw	a5,608(a5)
20011f8e:	faf42223          	sw	a5,-92(s0)
20011f92:	fa842783          	lw	a5,-88(s0)
20011f96:	2587a783          	lw	a5,600(a5)
20011f9a:	fa442583          	lw	a1,-92(s0)
20011f9e:	454d                	li	a0,19
20011fa0:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:231
}
20011fa2:	0001                	nop
20011fa4:	40f6                	lw	ra,92(sp)
20011fa6:	42e6                	lw	t0,88(sp)
20011fa8:	4356                	lw	t1,84(sp)
20011faa:	43c6                	lw	t2,80(sp)
20011fac:	4436                	lw	s0,76(sp)
20011fae:	4526                	lw	a0,72(sp)
20011fb0:	4596                	lw	a1,68(sp)
20011fb2:	4606                	lw	a2,64(sp)
20011fb4:	56f2                	lw	a3,60(sp)
20011fb6:	5762                	lw	a4,56(sp)
20011fb8:	57d2                	lw	a5,52(sp)
20011fba:	5842                	lw	a6,48(sp)
20011fbc:	58b2                	lw	a7,44(sp)
20011fbe:	5e22                	lw	t3,40(sp)
20011fc0:	5e92                	lw	t4,36(sp)
20011fc2:	5f02                	lw	t5,32(sp)
20011fc4:	4ff2                	lw	t6,28(sp)
20011fc6:	6125                	addi	sp,sp,96
20011fc8:	30200073          	mret

20011fcc <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20011fcc:	711d                	addi	sp,sp,-96
20011fce:	ce86                	sw	ra,92(sp)
20011fd0:	cc96                	sw	t0,88(sp)
20011fd2:	ca9a                	sw	t1,84(sp)
20011fd4:	c89e                	sw	t2,80(sp)
20011fd6:	c6a2                	sw	s0,76(sp)
20011fd8:	c4aa                	sw	a0,72(sp)
20011fda:	c2ae                	sw	a1,68(sp)
20011fdc:	c0b2                	sw	a2,64(sp)
20011fde:	de36                	sw	a3,60(sp)
20011fe0:	dc3a                	sw	a4,56(sp)
20011fe2:	da3e                	sw	a5,52(sp)
20011fe4:	d842                	sw	a6,48(sp)
20011fe6:	d646                	sw	a7,44(sp)
20011fe8:	d472                	sw	t3,40(sp)
20011fea:	d276                	sw	t4,36(sp)
20011fec:	d07a                	sw	t5,32(sp)
20011fee:	ce7e                	sw	t6,28(sp)
20011ff0:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20011ff2:	faaff0ef          	jal	ra,2001179c <__metal_myhart_id>
20011ff6:	872a                	mv	a4,a0
20011ff8:	800017b7          	lui	a5,0x80001
20011ffc:	070a                	slli	a4,a4,0x2
20011ffe:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20012002:	97ba                	add	a5,a5,a4
20012004:	439c                	lw	a5,0(a5)
20012006:	faf42623          	sw	a5,-84(s0)
2001200a:	fac42783          	lw	a5,-84(s0)
2001200e:	c78d                	beqz	a5,20012038 <metal_lc4_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20012010:	fac42503          	lw	a0,-84(s0)
20012014:	f02ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012018:	faa42423          	sw	a0,-88(s0)
2001201c:	fa842783          	lw	a5,-88(s0)
20012020:	2787a783          	lw	a5,632(a5)
20012024:	faf42223          	sw	a5,-92(s0)
20012028:	fa842783          	lw	a5,-88(s0)
2001202c:	2707a783          	lw	a5,624(a5)
20012030:	fa442583          	lw	a1,-92(s0)
20012034:	4551                	li	a0,20
20012036:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:236
}
20012038:	0001                	nop
2001203a:	40f6                	lw	ra,92(sp)
2001203c:	42e6                	lw	t0,88(sp)
2001203e:	4356                	lw	t1,84(sp)
20012040:	43c6                	lw	t2,80(sp)
20012042:	4436                	lw	s0,76(sp)
20012044:	4526                	lw	a0,72(sp)
20012046:	4596                	lw	a1,68(sp)
20012048:	4606                	lw	a2,64(sp)
2001204a:	56f2                	lw	a3,60(sp)
2001204c:	5762                	lw	a4,56(sp)
2001204e:	57d2                	lw	a5,52(sp)
20012050:	5842                	lw	a6,48(sp)
20012052:	58b2                	lw	a7,44(sp)
20012054:	5e22                	lw	t3,40(sp)
20012056:	5e92                	lw	t4,36(sp)
20012058:	5f02                	lw	t5,32(sp)
2001205a:	4ff2                	lw	t6,28(sp)
2001205c:	6125                	addi	sp,sp,96
2001205e:	30200073          	mret

20012062 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20012062:	711d                	addi	sp,sp,-96
20012064:	ce86                	sw	ra,92(sp)
20012066:	cc96                	sw	t0,88(sp)
20012068:	ca9a                	sw	t1,84(sp)
2001206a:	c89e                	sw	t2,80(sp)
2001206c:	c6a2                	sw	s0,76(sp)
2001206e:	c4aa                	sw	a0,72(sp)
20012070:	c2ae                	sw	a1,68(sp)
20012072:	c0b2                	sw	a2,64(sp)
20012074:	de36                	sw	a3,60(sp)
20012076:	dc3a                	sw	a4,56(sp)
20012078:	da3e                	sw	a5,52(sp)
2001207a:	d842                	sw	a6,48(sp)
2001207c:	d646                	sw	a7,44(sp)
2001207e:	d472                	sw	t3,40(sp)
20012080:	d276                	sw	t4,36(sp)
20012082:	d07a                	sw	t5,32(sp)
20012084:	ce7e                	sw	t6,28(sp)
20012086:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20012088:	f14ff0ef          	jal	ra,2001179c <__metal_myhart_id>
2001208c:	872a                	mv	a4,a0
2001208e:	800017b7          	lui	a5,0x80001
20012092:	070a                	slli	a4,a4,0x2
20012094:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20012098:	97ba                	add	a5,a5,a4
2001209a:	439c                	lw	a5,0(a5)
2001209c:	faf42623          	sw	a5,-84(s0)
200120a0:	fac42783          	lw	a5,-84(s0)
200120a4:	c78d                	beqz	a5,200120ce <metal_lc5_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
200120a6:	fac42503          	lw	a0,-84(s0)
200120aa:	e6cff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
200120ae:	faa42423          	sw	a0,-88(s0)
200120b2:	fa842783          	lw	a5,-88(s0)
200120b6:	2907a783          	lw	a5,656(a5)
200120ba:	faf42223          	sw	a5,-92(s0)
200120be:	fa842783          	lw	a5,-88(s0)
200120c2:	2887a783          	lw	a5,648(a5)
200120c6:	fa442583          	lw	a1,-92(s0)
200120ca:	4555                	li	a0,21
200120cc:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:241
}
200120ce:	0001                	nop
200120d0:	40f6                	lw	ra,92(sp)
200120d2:	42e6                	lw	t0,88(sp)
200120d4:	4356                	lw	t1,84(sp)
200120d6:	43c6                	lw	t2,80(sp)
200120d8:	4436                	lw	s0,76(sp)
200120da:	4526                	lw	a0,72(sp)
200120dc:	4596                	lw	a1,68(sp)
200120de:	4606                	lw	a2,64(sp)
200120e0:	56f2                	lw	a3,60(sp)
200120e2:	5762                	lw	a4,56(sp)
200120e4:	57d2                	lw	a5,52(sp)
200120e6:	5842                	lw	a6,48(sp)
200120e8:	58b2                	lw	a7,44(sp)
200120ea:	5e22                	lw	t3,40(sp)
200120ec:	5e92                	lw	t4,36(sp)
200120ee:	5f02                	lw	t5,32(sp)
200120f0:	4ff2                	lw	t6,28(sp)
200120f2:	6125                	addi	sp,sp,96
200120f4:	30200073          	mret

200120f8 <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
200120f8:	711d                	addi	sp,sp,-96
200120fa:	ce86                	sw	ra,92(sp)
200120fc:	cc96                	sw	t0,88(sp)
200120fe:	ca9a                	sw	t1,84(sp)
20012100:	c89e                	sw	t2,80(sp)
20012102:	c6a2                	sw	s0,76(sp)
20012104:	c4aa                	sw	a0,72(sp)
20012106:	c2ae                	sw	a1,68(sp)
20012108:	c0b2                	sw	a2,64(sp)
2001210a:	de36                	sw	a3,60(sp)
2001210c:	dc3a                	sw	a4,56(sp)
2001210e:	da3e                	sw	a5,52(sp)
20012110:	d842                	sw	a6,48(sp)
20012112:	d646                	sw	a7,44(sp)
20012114:	d472                	sw	t3,40(sp)
20012116:	d276                	sw	t4,36(sp)
20012118:	d07a                	sw	t5,32(sp)
2001211a:	ce7e                	sw	t6,28(sp)
2001211c:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
2001211e:	e7eff0ef          	jal	ra,2001179c <__metal_myhart_id>
20012122:	872a                	mv	a4,a0
20012124:	800017b7          	lui	a5,0x80001
20012128:	070a                	slli	a4,a4,0x2
2001212a:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
2001212e:	97ba                	add	a5,a5,a4
20012130:	439c                	lw	a5,0(a5)
20012132:	faf42623          	sw	a5,-84(s0)
20012136:	fac42783          	lw	a5,-84(s0)
2001213a:	c78d                	beqz	a5,20012164 <metal_lc6_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
2001213c:	fac42503          	lw	a0,-84(s0)
20012140:	dd6ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012144:	faa42423          	sw	a0,-88(s0)
20012148:	fa842783          	lw	a5,-88(s0)
2001214c:	2a87a783          	lw	a5,680(a5)
20012150:	faf42223          	sw	a5,-92(s0)
20012154:	fa842783          	lw	a5,-88(s0)
20012158:	2a07a783          	lw	a5,672(a5)
2001215c:	fa442583          	lw	a1,-92(s0)
20012160:	4559                	li	a0,22
20012162:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:246
}
20012164:	0001                	nop
20012166:	40f6                	lw	ra,92(sp)
20012168:	42e6                	lw	t0,88(sp)
2001216a:	4356                	lw	t1,84(sp)
2001216c:	43c6                	lw	t2,80(sp)
2001216e:	4436                	lw	s0,76(sp)
20012170:	4526                	lw	a0,72(sp)
20012172:	4596                	lw	a1,68(sp)
20012174:	4606                	lw	a2,64(sp)
20012176:	56f2                	lw	a3,60(sp)
20012178:	5762                	lw	a4,56(sp)
2001217a:	57d2                	lw	a5,52(sp)
2001217c:	5842                	lw	a6,48(sp)
2001217e:	58b2                	lw	a7,44(sp)
20012180:	5e22                	lw	t3,40(sp)
20012182:	5e92                	lw	t4,36(sp)
20012184:	5f02                	lw	t5,32(sp)
20012186:	4ff2                	lw	t6,28(sp)
20012188:	6125                	addi	sp,sp,96
2001218a:	30200073          	mret

2001218e <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
2001218e:	711d                	addi	sp,sp,-96
20012190:	ce86                	sw	ra,92(sp)
20012192:	cc96                	sw	t0,88(sp)
20012194:	ca9a                	sw	t1,84(sp)
20012196:	c89e                	sw	t2,80(sp)
20012198:	c6a2                	sw	s0,76(sp)
2001219a:	c4aa                	sw	a0,72(sp)
2001219c:	c2ae                	sw	a1,68(sp)
2001219e:	c0b2                	sw	a2,64(sp)
200121a0:	de36                	sw	a3,60(sp)
200121a2:	dc3a                	sw	a4,56(sp)
200121a4:	da3e                	sw	a5,52(sp)
200121a6:	d842                	sw	a6,48(sp)
200121a8:	d646                	sw	a7,44(sp)
200121aa:	d472                	sw	t3,40(sp)
200121ac:	d276                	sw	t4,36(sp)
200121ae:	d07a                	sw	t5,32(sp)
200121b0:	ce7e                	sw	t6,28(sp)
200121b2:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
200121b4:	de8ff0ef          	jal	ra,2001179c <__metal_myhart_id>
200121b8:	872a                	mv	a4,a0
200121ba:	800017b7          	lui	a5,0x80001
200121be:	070a                	slli	a4,a4,0x2
200121c0:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
200121c4:	97ba                	add	a5,a5,a4
200121c6:	439c                	lw	a5,0(a5)
200121c8:	faf42623          	sw	a5,-84(s0)
200121cc:	fac42783          	lw	a5,-84(s0)
200121d0:	c78d                	beqz	a5,200121fa <metal_lc7_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
200121d2:	fac42503          	lw	a0,-84(s0)
200121d6:	d40ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
200121da:	faa42423          	sw	a0,-88(s0)
200121de:	fa842783          	lw	a5,-88(s0)
200121e2:	2c07a783          	lw	a5,704(a5)
200121e6:	faf42223          	sw	a5,-92(s0)
200121ea:	fa842783          	lw	a5,-88(s0)
200121ee:	2b87a783          	lw	a5,696(a5)
200121f2:	fa442583          	lw	a1,-92(s0)
200121f6:	455d                	li	a0,23
200121f8:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:251
}
200121fa:	0001                	nop
200121fc:	40f6                	lw	ra,92(sp)
200121fe:	42e6                	lw	t0,88(sp)
20012200:	4356                	lw	t1,84(sp)
20012202:	43c6                	lw	t2,80(sp)
20012204:	4436                	lw	s0,76(sp)
20012206:	4526                	lw	a0,72(sp)
20012208:	4596                	lw	a1,68(sp)
2001220a:	4606                	lw	a2,64(sp)
2001220c:	56f2                	lw	a3,60(sp)
2001220e:	5762                	lw	a4,56(sp)
20012210:	57d2                	lw	a5,52(sp)
20012212:	5842                	lw	a6,48(sp)
20012214:	58b2                	lw	a7,44(sp)
20012216:	5e22                	lw	t3,40(sp)
20012218:	5e92                	lw	t4,36(sp)
2001221a:	5f02                	lw	t5,32(sp)
2001221c:	4ff2                	lw	t6,28(sp)
2001221e:	6125                	addi	sp,sp,96
20012220:	30200073          	mret

20012224 <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20012224:	711d                	addi	sp,sp,-96
20012226:	ce86                	sw	ra,92(sp)
20012228:	cc96                	sw	t0,88(sp)
2001222a:	ca9a                	sw	t1,84(sp)
2001222c:	c89e                	sw	t2,80(sp)
2001222e:	c6a2                	sw	s0,76(sp)
20012230:	c4aa                	sw	a0,72(sp)
20012232:	c2ae                	sw	a1,68(sp)
20012234:	c0b2                	sw	a2,64(sp)
20012236:	de36                	sw	a3,60(sp)
20012238:	dc3a                	sw	a4,56(sp)
2001223a:	da3e                	sw	a5,52(sp)
2001223c:	d842                	sw	a6,48(sp)
2001223e:	d646                	sw	a7,44(sp)
20012240:	d472                	sw	t3,40(sp)
20012242:	d276                	sw	t4,36(sp)
20012244:	d07a                	sw	t5,32(sp)
20012246:	ce7e                	sw	t6,28(sp)
20012248:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
2001224a:	d52ff0ef          	jal	ra,2001179c <__metal_myhart_id>
2001224e:	872a                	mv	a4,a0
20012250:	800017b7          	lui	a5,0x80001
20012254:	070a                	slli	a4,a4,0x2
20012256:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
2001225a:	97ba                	add	a5,a5,a4
2001225c:	439c                	lw	a5,0(a5)
2001225e:	faf42623          	sw	a5,-84(s0)
20012262:	fac42783          	lw	a5,-84(s0)
20012266:	c78d                	beqz	a5,20012290 <metal_lc8_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20012268:	fac42503          	lw	a0,-84(s0)
2001226c:	caaff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012270:	faa42423          	sw	a0,-88(s0)
20012274:	fa842783          	lw	a5,-88(s0)
20012278:	2d87a783          	lw	a5,728(a5)
2001227c:	faf42223          	sw	a5,-92(s0)
20012280:	fa842783          	lw	a5,-88(s0)
20012284:	2d07a783          	lw	a5,720(a5)
20012288:	fa442583          	lw	a1,-92(s0)
2001228c:	4561                	li	a0,24
2001228e:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:256
}
20012290:	0001                	nop
20012292:	40f6                	lw	ra,92(sp)
20012294:	42e6                	lw	t0,88(sp)
20012296:	4356                	lw	t1,84(sp)
20012298:	43c6                	lw	t2,80(sp)
2001229a:	4436                	lw	s0,76(sp)
2001229c:	4526                	lw	a0,72(sp)
2001229e:	4596                	lw	a1,68(sp)
200122a0:	4606                	lw	a2,64(sp)
200122a2:	56f2                	lw	a3,60(sp)
200122a4:	5762                	lw	a4,56(sp)
200122a6:	57d2                	lw	a5,52(sp)
200122a8:	5842                	lw	a6,48(sp)
200122aa:	58b2                	lw	a7,44(sp)
200122ac:	5e22                	lw	t3,40(sp)
200122ae:	5e92                	lw	t4,36(sp)
200122b0:	5f02                	lw	t5,32(sp)
200122b2:	4ff2                	lw	t6,28(sp)
200122b4:	6125                	addi	sp,sp,96
200122b6:	30200073          	mret

200122ba <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
200122ba:	711d                	addi	sp,sp,-96
200122bc:	ce86                	sw	ra,92(sp)
200122be:	cc96                	sw	t0,88(sp)
200122c0:	ca9a                	sw	t1,84(sp)
200122c2:	c89e                	sw	t2,80(sp)
200122c4:	c6a2                	sw	s0,76(sp)
200122c6:	c4aa                	sw	a0,72(sp)
200122c8:	c2ae                	sw	a1,68(sp)
200122ca:	c0b2                	sw	a2,64(sp)
200122cc:	de36                	sw	a3,60(sp)
200122ce:	dc3a                	sw	a4,56(sp)
200122d0:	da3e                	sw	a5,52(sp)
200122d2:	d842                	sw	a6,48(sp)
200122d4:	d646                	sw	a7,44(sp)
200122d6:	d472                	sw	t3,40(sp)
200122d8:	d276                	sw	t4,36(sp)
200122da:	d07a                	sw	t5,32(sp)
200122dc:	ce7e                	sw	t6,28(sp)
200122de:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
200122e0:	cbcff0ef          	jal	ra,2001179c <__metal_myhart_id>
200122e4:	872a                	mv	a4,a0
200122e6:	800017b7          	lui	a5,0x80001
200122ea:	070a                	slli	a4,a4,0x2
200122ec:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
200122f0:	97ba                	add	a5,a5,a4
200122f2:	439c                	lw	a5,0(a5)
200122f4:	faf42623          	sw	a5,-84(s0)
200122f8:	fac42783          	lw	a5,-84(s0)
200122fc:	c78d                	beqz	a5,20012326 <metal_lc9_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
200122fe:	fac42503          	lw	a0,-84(s0)
20012302:	c14ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012306:	faa42423          	sw	a0,-88(s0)
2001230a:	fa842783          	lw	a5,-88(s0)
2001230e:	2f07a783          	lw	a5,752(a5)
20012312:	faf42223          	sw	a5,-92(s0)
20012316:	fa842783          	lw	a5,-88(s0)
2001231a:	2e87a783          	lw	a5,744(a5)
2001231e:	fa442583          	lw	a1,-92(s0)
20012322:	4565                	li	a0,25
20012324:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:261
}
20012326:	0001                	nop
20012328:	40f6                	lw	ra,92(sp)
2001232a:	42e6                	lw	t0,88(sp)
2001232c:	4356                	lw	t1,84(sp)
2001232e:	43c6                	lw	t2,80(sp)
20012330:	4436                	lw	s0,76(sp)
20012332:	4526                	lw	a0,72(sp)
20012334:	4596                	lw	a1,68(sp)
20012336:	4606                	lw	a2,64(sp)
20012338:	56f2                	lw	a3,60(sp)
2001233a:	5762                	lw	a4,56(sp)
2001233c:	57d2                	lw	a5,52(sp)
2001233e:	5842                	lw	a6,48(sp)
20012340:	58b2                	lw	a7,44(sp)
20012342:	5e22                	lw	t3,40(sp)
20012344:	5e92                	lw	t4,36(sp)
20012346:	5f02                	lw	t5,32(sp)
20012348:	4ff2                	lw	t6,28(sp)
2001234a:	6125                	addi	sp,sp,96
2001234c:	30200073          	mret

20012350 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20012350:	711d                	addi	sp,sp,-96
20012352:	ce86                	sw	ra,92(sp)
20012354:	cc96                	sw	t0,88(sp)
20012356:	ca9a                	sw	t1,84(sp)
20012358:	c89e                	sw	t2,80(sp)
2001235a:	c6a2                	sw	s0,76(sp)
2001235c:	c4aa                	sw	a0,72(sp)
2001235e:	c2ae                	sw	a1,68(sp)
20012360:	c0b2                	sw	a2,64(sp)
20012362:	de36                	sw	a3,60(sp)
20012364:	dc3a                	sw	a4,56(sp)
20012366:	da3e                	sw	a5,52(sp)
20012368:	d842                	sw	a6,48(sp)
2001236a:	d646                	sw	a7,44(sp)
2001236c:	d472                	sw	t3,40(sp)
2001236e:	d276                	sw	t4,36(sp)
20012370:	d07a                	sw	t5,32(sp)
20012372:	ce7e                	sw	t6,28(sp)
20012374:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20012376:	c26ff0ef          	jal	ra,2001179c <__metal_myhart_id>
2001237a:	872a                	mv	a4,a0
2001237c:	800017b7          	lui	a5,0x80001
20012380:	070a                	slli	a4,a4,0x2
20012382:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20012386:	97ba                	add	a5,a5,a4
20012388:	439c                	lw	a5,0(a5)
2001238a:	faf42623          	sw	a5,-84(s0)
2001238e:	fac42783          	lw	a5,-84(s0)
20012392:	c78d                	beqz	a5,200123bc <metal_lc10_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20012394:	fac42503          	lw	a0,-84(s0)
20012398:	b7eff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
2001239c:	faa42423          	sw	a0,-88(s0)
200123a0:	fa842783          	lw	a5,-88(s0)
200123a4:	3087a783          	lw	a5,776(a5)
200123a8:	faf42223          	sw	a5,-92(s0)
200123ac:	fa842783          	lw	a5,-88(s0)
200123b0:	3007a783          	lw	a5,768(a5)
200123b4:	fa442583          	lw	a1,-92(s0)
200123b8:	4569                	li	a0,26
200123ba:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:267
}
200123bc:	0001                	nop
200123be:	40f6                	lw	ra,92(sp)
200123c0:	42e6                	lw	t0,88(sp)
200123c2:	4356                	lw	t1,84(sp)
200123c4:	43c6                	lw	t2,80(sp)
200123c6:	4436                	lw	s0,76(sp)
200123c8:	4526                	lw	a0,72(sp)
200123ca:	4596                	lw	a1,68(sp)
200123cc:	4606                	lw	a2,64(sp)
200123ce:	56f2                	lw	a3,60(sp)
200123d0:	5762                	lw	a4,56(sp)
200123d2:	57d2                	lw	a5,52(sp)
200123d4:	5842                	lw	a6,48(sp)
200123d6:	58b2                	lw	a7,44(sp)
200123d8:	5e22                	lw	t3,40(sp)
200123da:	5e92                	lw	t4,36(sp)
200123dc:	5f02                	lw	t5,32(sp)
200123de:	4ff2                	lw	t6,28(sp)
200123e0:	6125                	addi	sp,sp,96
200123e2:	30200073          	mret

200123e6 <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
200123e6:	711d                	addi	sp,sp,-96
200123e8:	ce86                	sw	ra,92(sp)
200123ea:	cc96                	sw	t0,88(sp)
200123ec:	ca9a                	sw	t1,84(sp)
200123ee:	c89e                	sw	t2,80(sp)
200123f0:	c6a2                	sw	s0,76(sp)
200123f2:	c4aa                	sw	a0,72(sp)
200123f4:	c2ae                	sw	a1,68(sp)
200123f6:	c0b2                	sw	a2,64(sp)
200123f8:	de36                	sw	a3,60(sp)
200123fa:	dc3a                	sw	a4,56(sp)
200123fc:	da3e                	sw	a5,52(sp)
200123fe:	d842                	sw	a6,48(sp)
20012400:	d646                	sw	a7,44(sp)
20012402:	d472                	sw	t3,40(sp)
20012404:	d276                	sw	t4,36(sp)
20012406:	d07a                	sw	t5,32(sp)
20012408:	ce7e                	sw	t6,28(sp)
2001240a:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
2001240c:	b90ff0ef          	jal	ra,2001179c <__metal_myhart_id>
20012410:	872a                	mv	a4,a0
20012412:	800017b7          	lui	a5,0x80001
20012416:	070a                	slli	a4,a4,0x2
20012418:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
2001241c:	97ba                	add	a5,a5,a4
2001241e:	439c                	lw	a5,0(a5)
20012420:	faf42623          	sw	a5,-84(s0)
20012424:	fac42783          	lw	a5,-84(s0)
20012428:	c78d                	beqz	a5,20012452 <metal_lc11_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
2001242a:	fac42503          	lw	a0,-84(s0)
2001242e:	ae8ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012432:	faa42423          	sw	a0,-88(s0)
20012436:	fa842783          	lw	a5,-88(s0)
2001243a:	3207a783          	lw	a5,800(a5)
2001243e:	faf42223          	sw	a5,-92(s0)
20012442:	fa842783          	lw	a5,-88(s0)
20012446:	3187a783          	lw	a5,792(a5)
2001244a:	fa442583          	lw	a1,-92(s0)
2001244e:	456d                	li	a0,27
20012450:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:273
}
20012452:	0001                	nop
20012454:	40f6                	lw	ra,92(sp)
20012456:	42e6                	lw	t0,88(sp)
20012458:	4356                	lw	t1,84(sp)
2001245a:	43c6                	lw	t2,80(sp)
2001245c:	4436                	lw	s0,76(sp)
2001245e:	4526                	lw	a0,72(sp)
20012460:	4596                	lw	a1,68(sp)
20012462:	4606                	lw	a2,64(sp)
20012464:	56f2                	lw	a3,60(sp)
20012466:	5762                	lw	a4,56(sp)
20012468:	57d2                	lw	a5,52(sp)
2001246a:	5842                	lw	a6,48(sp)
2001246c:	58b2                	lw	a7,44(sp)
2001246e:	5e22                	lw	t3,40(sp)
20012470:	5e92                	lw	t4,36(sp)
20012472:	5f02                	lw	t5,32(sp)
20012474:	4ff2                	lw	t6,28(sp)
20012476:	6125                	addi	sp,sp,96
20012478:	30200073          	mret

2001247c <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
2001247c:	711d                	addi	sp,sp,-96
2001247e:	ce86                	sw	ra,92(sp)
20012480:	cc96                	sw	t0,88(sp)
20012482:	ca9a                	sw	t1,84(sp)
20012484:	c89e                	sw	t2,80(sp)
20012486:	c6a2                	sw	s0,76(sp)
20012488:	c4aa                	sw	a0,72(sp)
2001248a:	c2ae                	sw	a1,68(sp)
2001248c:	c0b2                	sw	a2,64(sp)
2001248e:	de36                	sw	a3,60(sp)
20012490:	dc3a                	sw	a4,56(sp)
20012492:	da3e                	sw	a5,52(sp)
20012494:	d842                	sw	a6,48(sp)
20012496:	d646                	sw	a7,44(sp)
20012498:	d472                	sw	t3,40(sp)
2001249a:	d276                	sw	t4,36(sp)
2001249c:	d07a                	sw	t5,32(sp)
2001249e:	ce7e                	sw	t6,28(sp)
200124a0:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
200124a2:	afaff0ef          	jal	ra,2001179c <__metal_myhart_id>
200124a6:	872a                	mv	a4,a0
200124a8:	800017b7          	lui	a5,0x80001
200124ac:	070a                	slli	a4,a4,0x2
200124ae:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
200124b2:	97ba                	add	a5,a5,a4
200124b4:	439c                	lw	a5,0(a5)
200124b6:	faf42623          	sw	a5,-84(s0)
200124ba:	fac42783          	lw	a5,-84(s0)
200124be:	c78d                	beqz	a5,200124e8 <metal_lc12_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
200124c0:	fac42503          	lw	a0,-84(s0)
200124c4:	a52ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
200124c8:	faa42423          	sw	a0,-88(s0)
200124cc:	fa842783          	lw	a5,-88(s0)
200124d0:	3387a783          	lw	a5,824(a5)
200124d4:	faf42223          	sw	a5,-92(s0)
200124d8:	fa842783          	lw	a5,-88(s0)
200124dc:	3307a783          	lw	a5,816(a5)
200124e0:	fa442583          	lw	a1,-92(s0)
200124e4:	4571                	li	a0,28
200124e6:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:279
}
200124e8:	0001                	nop
200124ea:	40f6                	lw	ra,92(sp)
200124ec:	42e6                	lw	t0,88(sp)
200124ee:	4356                	lw	t1,84(sp)
200124f0:	43c6                	lw	t2,80(sp)
200124f2:	4436                	lw	s0,76(sp)
200124f4:	4526                	lw	a0,72(sp)
200124f6:	4596                	lw	a1,68(sp)
200124f8:	4606                	lw	a2,64(sp)
200124fa:	56f2                	lw	a3,60(sp)
200124fc:	5762                	lw	a4,56(sp)
200124fe:	57d2                	lw	a5,52(sp)
20012500:	5842                	lw	a6,48(sp)
20012502:	58b2                	lw	a7,44(sp)
20012504:	5e22                	lw	t3,40(sp)
20012506:	5e92                	lw	t4,36(sp)
20012508:	5f02                	lw	t5,32(sp)
2001250a:	4ff2                	lw	t6,28(sp)
2001250c:	6125                	addi	sp,sp,96
2001250e:	30200073          	mret

20012512 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20012512:	711d                	addi	sp,sp,-96
20012514:	ce86                	sw	ra,92(sp)
20012516:	cc96                	sw	t0,88(sp)
20012518:	ca9a                	sw	t1,84(sp)
2001251a:	c89e                	sw	t2,80(sp)
2001251c:	c6a2                	sw	s0,76(sp)
2001251e:	c4aa                	sw	a0,72(sp)
20012520:	c2ae                	sw	a1,68(sp)
20012522:	c0b2                	sw	a2,64(sp)
20012524:	de36                	sw	a3,60(sp)
20012526:	dc3a                	sw	a4,56(sp)
20012528:	da3e                	sw	a5,52(sp)
2001252a:	d842                	sw	a6,48(sp)
2001252c:	d646                	sw	a7,44(sp)
2001252e:	d472                	sw	t3,40(sp)
20012530:	d276                	sw	t4,36(sp)
20012532:	d07a                	sw	t5,32(sp)
20012534:	ce7e                	sw	t6,28(sp)
20012536:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20012538:	a64ff0ef          	jal	ra,2001179c <__metal_myhart_id>
2001253c:	872a                	mv	a4,a0
2001253e:	800017b7          	lui	a5,0x80001
20012542:	070a                	slli	a4,a4,0x2
20012544:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20012548:	97ba                	add	a5,a5,a4
2001254a:	439c                	lw	a5,0(a5)
2001254c:	faf42623          	sw	a5,-84(s0)
20012550:	fac42783          	lw	a5,-84(s0)
20012554:	c78d                	beqz	a5,2001257e <metal_lc13_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20012556:	fac42503          	lw	a0,-84(s0)
2001255a:	9bcff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
2001255e:	faa42423          	sw	a0,-88(s0)
20012562:	fa842783          	lw	a5,-88(s0)
20012566:	3507a783          	lw	a5,848(a5)
2001256a:	faf42223          	sw	a5,-92(s0)
2001256e:	fa842783          	lw	a5,-88(s0)
20012572:	3487a783          	lw	a5,840(a5)
20012576:	fa442583          	lw	a1,-92(s0)
2001257a:	4575                	li	a0,29
2001257c:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:285
}
2001257e:	0001                	nop
20012580:	40f6                	lw	ra,92(sp)
20012582:	42e6                	lw	t0,88(sp)
20012584:	4356                	lw	t1,84(sp)
20012586:	43c6                	lw	t2,80(sp)
20012588:	4436                	lw	s0,76(sp)
2001258a:	4526                	lw	a0,72(sp)
2001258c:	4596                	lw	a1,68(sp)
2001258e:	4606                	lw	a2,64(sp)
20012590:	56f2                	lw	a3,60(sp)
20012592:	5762                	lw	a4,56(sp)
20012594:	57d2                	lw	a5,52(sp)
20012596:	5842                	lw	a6,48(sp)
20012598:	58b2                	lw	a7,44(sp)
2001259a:	5e22                	lw	t3,40(sp)
2001259c:	5e92                	lw	t4,36(sp)
2001259e:	5f02                	lw	t5,32(sp)
200125a0:	4ff2                	lw	t6,28(sp)
200125a2:	6125                	addi	sp,sp,96
200125a4:	30200073          	mret

200125a8 <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
200125a8:	711d                	addi	sp,sp,-96
200125aa:	ce86                	sw	ra,92(sp)
200125ac:	cc96                	sw	t0,88(sp)
200125ae:	ca9a                	sw	t1,84(sp)
200125b0:	c89e                	sw	t2,80(sp)
200125b2:	c6a2                	sw	s0,76(sp)
200125b4:	c4aa                	sw	a0,72(sp)
200125b6:	c2ae                	sw	a1,68(sp)
200125b8:	c0b2                	sw	a2,64(sp)
200125ba:	de36                	sw	a3,60(sp)
200125bc:	dc3a                	sw	a4,56(sp)
200125be:	da3e                	sw	a5,52(sp)
200125c0:	d842                	sw	a6,48(sp)
200125c2:	d646                	sw	a7,44(sp)
200125c4:	d472                	sw	t3,40(sp)
200125c6:	d276                	sw	t4,36(sp)
200125c8:	d07a                	sw	t5,32(sp)
200125ca:	ce7e                	sw	t6,28(sp)
200125cc:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
200125ce:	9ceff0ef          	jal	ra,2001179c <__metal_myhart_id>
200125d2:	872a                	mv	a4,a0
200125d4:	800017b7          	lui	a5,0x80001
200125d8:	070a                	slli	a4,a4,0x2
200125da:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
200125de:	97ba                	add	a5,a5,a4
200125e0:	439c                	lw	a5,0(a5)
200125e2:	faf42623          	sw	a5,-84(s0)
200125e6:	fac42783          	lw	a5,-84(s0)
200125ea:	c78d                	beqz	a5,20012614 <metal_lc14_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
200125ec:	fac42503          	lw	a0,-84(s0)
200125f0:	926ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
200125f4:	faa42423          	sw	a0,-88(s0)
200125f8:	fa842783          	lw	a5,-88(s0)
200125fc:	3687a783          	lw	a5,872(a5)
20012600:	faf42223          	sw	a5,-92(s0)
20012604:	fa842783          	lw	a5,-88(s0)
20012608:	3607a783          	lw	a5,864(a5)
2001260c:	fa442583          	lw	a1,-92(s0)
20012610:	4579                	li	a0,30
20012612:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:291
}
20012614:	0001                	nop
20012616:	40f6                	lw	ra,92(sp)
20012618:	42e6                	lw	t0,88(sp)
2001261a:	4356                	lw	t1,84(sp)
2001261c:	43c6                	lw	t2,80(sp)
2001261e:	4436                	lw	s0,76(sp)
20012620:	4526                	lw	a0,72(sp)
20012622:	4596                	lw	a1,68(sp)
20012624:	4606                	lw	a2,64(sp)
20012626:	56f2                	lw	a3,60(sp)
20012628:	5762                	lw	a4,56(sp)
2001262a:	57d2                	lw	a5,52(sp)
2001262c:	5842                	lw	a6,48(sp)
2001262e:	58b2                	lw	a7,44(sp)
20012630:	5e22                	lw	t3,40(sp)
20012632:	5e92                	lw	t4,36(sp)
20012634:	5f02                	lw	t5,32(sp)
20012636:	4ff2                	lw	t6,28(sp)
20012638:	6125                	addi	sp,sp,96
2001263a:	30200073          	mret

2001263e <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
2001263e:	711d                	addi	sp,sp,-96
20012640:	ce86                	sw	ra,92(sp)
20012642:	cc96                	sw	t0,88(sp)
20012644:	ca9a                	sw	t1,84(sp)
20012646:	c89e                	sw	t2,80(sp)
20012648:	c6a2                	sw	s0,76(sp)
2001264a:	c4aa                	sw	a0,72(sp)
2001264c:	c2ae                	sw	a1,68(sp)
2001264e:	c0b2                	sw	a2,64(sp)
20012650:	de36                	sw	a3,60(sp)
20012652:	dc3a                	sw	a4,56(sp)
20012654:	da3e                	sw	a5,52(sp)
20012656:	d842                	sw	a6,48(sp)
20012658:	d646                	sw	a7,44(sp)
2001265a:	d472                	sw	t3,40(sp)
2001265c:	d276                	sw	t4,36(sp)
2001265e:	d07a                	sw	t5,32(sp)
20012660:	ce7e                	sw	t6,28(sp)
20012662:	1080                	addi	s0,sp,96
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20012664:	938ff0ef          	jal	ra,2001179c <__metal_myhart_id>
20012668:	872a                	mv	a4,a0
2001266a:	800017b7          	lui	a5,0x80001
2001266e:	070a                	slli	a4,a4,0x2
20012670:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
20012674:	97ba                	add	a5,a5,a4
20012676:	439c                	lw	a5,0(a5)
20012678:	faf42623          	sw	a5,-84(s0)
2001267c:	fac42783          	lw	a5,-84(s0)
20012680:	c78d                	beqz	a5,200126aa <metal_lc15_interrupt_vector_handler+0x6c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20012682:	fac42503          	lw	a0,-84(s0)
20012686:	890ff0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
2001268a:	faa42423          	sw	a0,-88(s0)
2001268e:	fa842783          	lw	a5,-88(s0)
20012692:	3807a783          	lw	a5,896(a5)
20012696:	faf42223          	sw	a5,-92(s0)
2001269a:	fa842783          	lw	a5,-88(s0)
2001269e:	3787a783          	lw	a5,888(a5)
200126a2:	fa442583          	lw	a1,-92(s0)
200126a6:	457d                	li	a0,31
200126a8:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:297
}
200126aa:	0001                	nop
200126ac:	40f6                	lw	ra,92(sp)
200126ae:	42e6                	lw	t0,88(sp)
200126b0:	4356                	lw	t1,84(sp)
200126b2:	43c6                	lw	t2,80(sp)
200126b4:	4436                	lw	s0,76(sp)
200126b6:	4526                	lw	a0,72(sp)
200126b8:	4596                	lw	a1,68(sp)
200126ba:	4606                	lw	a2,64(sp)
200126bc:	56f2                	lw	a3,60(sp)
200126be:	5762                	lw	a4,56(sp)
200126c0:	57d2                	lw	a5,52(sp)
200126c2:	5842                	lw	a6,48(sp)
200126c4:	58b2                	lw	a7,44(sp)
200126c6:	5e22                	lw	t3,40(sp)
200126c8:	5e92                	lw	t4,36(sp)
200126ca:	5f02                	lw	t5,32(sp)
200126cc:	4ff2                	lw	t6,28(sp)
200126ce:	6125                	addi	sp,sp,96
200126d0:	30200073          	mret

200126d4 <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
200126d4:	1101                	addi	sp,sp,-32
200126d6:	ce22                	sw	s0,28(sp)
200126d8:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
200126da:	305027f3          	csrr	a5,mtvec
200126de:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
200126e2:	fec42783          	lw	a5,-20(s0)
200126e6:	03f7f793          	andi	a5,a5,63
200126ea:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
200126ee:	fec42703          	lw	a4,-20(s0)
200126f2:	4789                	li	a5,2
200126f4:	00f70d63          	beq	a4,a5,2001270e <__metal_controller_interrupt_vector_mode+0x3a>
200126f8:	fec42703          	lw	a4,-20(s0)
200126fc:	478d                	li	a5,3
200126fe:	00f70a63          	beq	a4,a5,20012712 <__metal_controller_interrupt_vector_mode+0x3e>
20012702:	fec42703          	lw	a4,-20(s0)
20012706:	4785                	li	a5,1
20012708:	00f70763          	beq	a4,a5,20012716 <__metal_controller_interrupt_vector_mode+0x42>
2001270c:	a039                	j	2001271a <__metal_controller_interrupt_vector_mode+0x46>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2001270e:	478d                	li	a5,3
20012710:	a031                	j	2001271c <__metal_controller_interrupt_vector_mode+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20012712:	4791                	li	a5,4
20012714:	a021                	j	2001271c <__metal_controller_interrupt_vector_mode+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20012716:	4785                	li	a5,1
20012718:	a011                	j	2001271c <__metal_controller_interrupt_vector_mode+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
2001271a:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:314
}
2001271c:	853e                	mv	a0,a5
2001271e:	4472                	lw	s0,28(sp)
20012720:	6105                	addi	sp,sp,32
20012722:	8082                	ret

20012724 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20012724:	7179                	addi	sp,sp,-48
20012726:	d622                	sw	s0,44(sp)
20012728:	1800                	addi	s0,sp,48
2001272a:	fca42e23          	sw	a0,-36(s0)
2001272e:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20012732:	305027f3          	csrr	a5,mtvec
20012736:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
2001273a:	fec42783          	lw	a5,-20(s0)
2001273e:	fc07f793          	andi	a5,a5,-64
20012742:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20012746:	fd842783          	lw	a5,-40(s0)
2001274a:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
2001274e:	fdc42703          	lw	a4,-36(s0)
20012752:	4791                	li	a5,4
20012754:	06e7e063          	bltu	a5,a4,200127b4 <__metal_controller_interrupt_vector+0x90>
20012758:	fdc42783          	lw	a5,-36(s0)
2001275c:	00279713          	slli	a4,a5,0x2
20012760:	200107b7          	lui	a5,0x20010
20012764:	3b878793          	addi	a5,a5,952 # 200103b8 <__metal_driver_vtable_riscv_clint0+0x64>
20012768:	97ba                	add	a5,a5,a4
2001276a:	439c                	lw	a5,0(a5)
2001276c:	8782                	jr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:327
    case METAL_SELECTIVE_NONVECTOR_MODE:
    case METAL_SELECTIVE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2001276e:	fe842783          	lw	a5,-24(s0)
20012772:	30779073          	csrw	mtvt,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20012776:	fec42783          	lw	a5,-20(s0)
2001277a:	0027e793          	ori	a5,a5,2
2001277e:	30579073          	csrw	mtvec,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20012782:	a80d                	j	200127b4 <__metal_controller_interrupt_vector+0x90>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:331
    case METAL_HARDWARE_VECTOR_MODE:
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20012784:	fe842783          	lw	a5,-24(s0)
20012788:	30779073          	csrw	mtvt,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:333
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
2001278c:	fec42783          	lw	a5,-20(s0)
20012790:	0037e793          	ori	a5,a5,3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20012794:	30579073          	csrw	mtvec,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20012798:	a831                	j	200127b4 <__metal_controller_interrupt_vector+0x90>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:337
    case METAL_VECTOR_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
2001279a:	fe842783          	lw	a5,-24(s0)
2001279e:	0017e793          	ori	a5,a5,1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
200127a2:	30579073          	csrw	mtvec,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
200127a6:	a039                	j	200127b4 <__metal_controller_interrupt_vector+0x90>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:341
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
200127a8:	fe842783          	lw	a5,-24(s0)
200127ac:	9bf1                	andi	a5,a5,-4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
200127ae:	30579073          	csrw	mtvec,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
200127b2:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:344
    }
}
200127b4:	0001                	nop
200127b6:	5432                	lw	s0,44(sp)
200127b8:	6145                	addi	sp,sp,48
200127ba:	8082                	ret

200127bc <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
200127bc:	1101                	addi	sp,sp,-32
200127be:	ce22                	sw	s0,28(sp)
200127c0:	1000                	addi	s0,sp,32
200127c2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
200127c6:	fec42703          	lw	a4,-20(s0)
200127ca:	47ad                	li	a5,11
200127cc:	04f70263          	beq	a4,a5,20012810 <__metal_valid_interrupt_id+0x54>
200127d0:	fec42703          	lw	a4,-20(s0)
200127d4:	47ad                	li	a5,11
200127d6:	00e7cd63          	blt	a5,a4,200127f0 <__metal_valid_interrupt_id+0x34>
200127da:	fec42703          	lw	a4,-20(s0)
200127de:	478d                	li	a5,3
200127e0:	02f70863          	beq	a4,a5,20012810 <__metal_valid_interrupt_id+0x54>
200127e4:	fec42703          	lw	a4,-20(s0)
200127e8:	479d                	li	a5,7
200127ea:	02f70363          	beq	a4,a5,20012810 <__metal_valid_interrupt_id+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
200127ee:	a01d                	j	20012814 <__metal_valid_interrupt_id+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
200127f0:	fec42703          	lw	a4,-20(s0)
200127f4:	47c1                	li	a5,16
200127f6:	00f74f63          	blt	a4,a5,20012814 <__metal_valid_interrupt_id+0x58>
200127fa:	fec42703          	lw	a4,-20(s0)
200127fe:	47fd                	li	a5,31
20012800:	00e7d863          	bge	a5,a4,20012810 <__metal_valid_interrupt_id+0x54>
20012804:	fec42703          	lw	a4,-20(s0)
20012808:	08000793          	li	a5,128
2001280c:	00f71463          	bne	a4,a5,20012814 <__metal_valid_interrupt_id+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20012810:	4785                	li	a5,1
20012812:	a019                	j	20012818 <__metal_valid_interrupt_id+0x5c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20012814:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20012816:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:374
}
20012818:	853e                	mv	a0,a5
2001281a:	4472                	lw	s0,28(sp)
2001281c:	6105                	addi	sp,sp,32
2001281e:	8082                	ret

20012820 <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20012820:	7179                	addi	sp,sp,-48
20012822:	d606                	sw	ra,44(sp)
20012824:	d422                	sw	s0,40(sp)
20012826:	1800                	addi	s0,sp,48
20012828:	fca42e23          	sw	a0,-36(s0)
2001282c:	fcb42c23          	sw	a1,-40(s0)
20012830:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20012834:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20012838:	fdc42783          	lw	a5,-36(s0)
2001283c:	e399                	bnez	a5,20012842 <__metal_local_interrupt_enable+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
2001283e:	57fd                	li	a5,-1
20012840:	a849                	j	200128d2 <__metal_local_interrupt_enable+0xb2>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:384
    }

    switch (id) {
20012842:	fd842703          	lw	a4,-40(s0)
20012846:	47fd                	li	a5,31
20012848:	08e7e063          	bltu	a5,a4,200128c8 <__metal_local_interrupt_enable+0xa8>
2001284c:	fd842783          	lw	a5,-40(s0)
20012850:	00279713          	slli	a4,a5,0x2
20012854:	200107b7          	lui	a5,0x20010
20012858:	3cc78793          	addi	a5,a5,972 # 200103cc <__metal_driver_vtable_riscv_clint0+0x78>
2001285c:	97ba                	add	a5,a5,a4
2001285e:	439c                	lw	a5,0(a5)
20012860:	8782                	jr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:386
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20012862:	fd442783          	lw	a5,-44(s0)
20012866:	c781                	beqz	a5,2001286e <__metal_local_interrupt_enable+0x4e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20012868:	f4ffe0ef          	jal	ra,200117b6 <__metal_interrupt_global_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
2001286c:	a08d                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
2001286e:	f61fe0ef          	jal	ra,200117ce <__metal_interrupt_global_disable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20012872:	a8b1                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20012874:	fd442783          	lw	a5,-44(s0)
20012878:	c781                	beqz	a5,20012880 <__metal_local_interrupt_enable+0x60>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
2001287a:	f6dfe0ef          	jal	ra,200117e6 <__metal_interrupt_software_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
2001287e:	a881                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20012880:	f7ffe0ef          	jal	ra,200117fe <__metal_interrupt_software_disable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20012884:	a0a9                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20012886:	fd442783          	lw	a5,-44(s0)
2001288a:	c781                	beqz	a5,20012892 <__metal_local_interrupt_enable+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
2001288c:	f8bfe0ef          	jal	ra,20011816 <__metal_interrupt_timer_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20012890:	a83d                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20012892:	f9ffe0ef          	jal	ra,20011830 <__metal_interrupt_timer_disable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20012896:	a825                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20012898:	fd442783          	lw	a5,-44(s0)
2001289c:	c781                	beqz	a5,200128a4 <__metal_local_interrupt_enable+0x84>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
2001289e:	fadfe0ef          	jal	ra,2001184a <__metal_interrupt_external_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
200128a2:	a035                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
200128a4:	fc3fe0ef          	jal	ra,20011866 <__metal_interrupt_external_disable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
200128a8:	a01d                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
200128aa:	fd442783          	lw	a5,-44(s0)
200128ae:	c799                	beqz	a5,200128bc <__metal_local_interrupt_enable+0x9c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
200128b0:	fd842783          	lw	a5,-40(s0)
200128b4:	853e                	mv	a0,a5
200128b6:	fcdfe0ef          	jal	ra,20011882 <__metal_interrupt_local_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
200128ba:	a811                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
200128bc:	fd842783          	lw	a5,-40(s0)
200128c0:	853e                	mv	a0,a5
200128c2:	fedfe0ef          	jal	ra,200118ae <__metal_interrupt_local_disable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
200128c6:	a021                	j	200128ce <__metal_local_interrupt_enable+0xae>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
200128c8:	57fd                	li	a5,-1
200128ca:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
200128ce:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:439
}
200128d2:	853e                	mv	a0,a5
200128d4:	50b2                	lw	ra,44(sp)
200128d6:	5422                	lw	s0,40(sp)
200128d8:	6145                	addi	sp,sp,48
200128da:	8082                	ret

200128dc <__metal_exception_register>:
__metal_exception_register():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
200128dc:	7179                	addi	sp,sp,-48
200128de:	d622                	sw	s0,44(sp)
200128e0:	1800                	addi	s0,sp,48
200128e2:	fca42e23          	sw	a0,-36(s0)
200128e6:	fcb42c23          	sw	a1,-40(s0)
200128ea:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
200128ee:	fdc42783          	lw	a5,-36(s0)
200128f2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
200128f6:	fd842703          	lw	a4,-40(s0)
200128fa:	47ad                	li	a5,11
200128fc:	02e7c263          	blt	a5,a4,20012920 <__metal_exception_register+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20012900:	fd442783          	lw	a5,-44(s0)
20012904:	cf91                	beqz	a5,20012920 <__metal_exception_register+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20012906:	fec42703          	lw	a4,-20(s0)
2001290a:	fd842783          	lw	a5,-40(s0)
2001290e:	0e878793          	addi	a5,a5,232
20012912:	078a                	slli	a5,a5,0x2
20012914:	97ba                	add	a5,a5,a4
20012916:	fd442703          	lw	a4,-44(s0)
2001291a:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
2001291c:	4781                	li	a5,0
2001291e:	a011                	j	20012922 <__metal_exception_register+0x46>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20012920:	57fd                	li	a5,-1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:450
}
20012922:	853e                	mv	a0,a5
20012924:	5432                	lw	s0,44(sp)
20012926:	6145                	addi	sp,sp,48
20012928:	8082                	ret

2001292a <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
2001292a:	7179                	addi	sp,sp,-48
2001292c:	d606                	sw	ra,44(sp)
2001292e:	d422                	sw	s0,40(sp)
20012930:	1800                	addi	s0,sp,48
20012932:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012936:	fdc42783          	lw	a5,-36(s0)
2001293a:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
2001293e:	fe442783          	lw	a5,-28(s0)
20012942:	43dc                	lw	a5,4(a5)
20012944:	efdd                	bnez	a5,20012a02 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20012946:	fe042623          	sw	zero,-20(s0)
2001294a:	a0b9                	j	20012998 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
2001294c:	fe442683          	lw	a3,-28(s0)
20012950:	fec42703          	lw	a4,-20(s0)
20012954:	87ba                	mv	a5,a4
20012956:	0786                	slli	a5,a5,0x1
20012958:	97ba                	add	a5,a5,a4
2001295a:	078e                	slli	a5,a5,0x3
2001295c:	97b6                	add	a5,a5,a3
2001295e:	0807a823          	sw	zero,144(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20012962:	fe442683          	lw	a3,-28(s0)
20012966:	fec42703          	lw	a4,-20(s0)
2001296a:	87ba                	mv	a5,a4
2001296c:	0786                	slli	a5,a5,0x1
2001296e:	97ba                	add	a5,a5,a4
20012970:	078e                	slli	a5,a5,0x3
20012972:	97b6                	add	a5,a5,a3
20012974:	0807aa23          	sw	zero,148(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20012978:	fe442683          	lw	a3,-28(s0)
2001297c:	fec42703          	lw	a4,-20(s0)
20012980:	87ba                	mv	a5,a4
20012982:	0786                	slli	a5,a5,0x1
20012984:	97ba                	add	a5,a5,a4
20012986:	078e                	slli	a5,a5,0x3
20012988:	97b6                	add	a5,a5,a3
2001298a:	0807ac23          	sw	zero,152(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
2001298e:	fec42783          	lw	a5,-20(s0)
20012992:	0785                	addi	a5,a5,1
20012994:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20012998:	fec42703          	lw	a4,-20(s0)
2001299c:	47fd                	li	a5,31
2001299e:	fae7d7e3          	bge	a5,a4,2001294c <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
200129a2:	fe042423          	sw	zero,-24(s0)
200129a6:	a01d                	j	200129cc <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
200129a8:	fe442703          	lw	a4,-28(s0)
200129ac:	fe842783          	lw	a5,-24(s0)
200129b0:	0e878793          	addi	a5,a5,232
200129b4:	078a                	slli	a5,a5,0x2
200129b6:	97ba                	add	a5,a5,a4
200129b8:	20012737          	lui	a4,0x20012
200129bc:	8da70713          	addi	a4,a4,-1830 # 200118da <__metal_default_exception_handler>
200129c0:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
200129c2:	fe842783          	lw	a5,-24(s0)
200129c6:	0785                	addi	a5,a5,1
200129c8:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
200129cc:	fe842703          	lw	a4,-24(s0)
200129d0:	47ad                	li	a5,11
200129d2:	fce7dbe3          	bge	a5,a4,200129a8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
200129d6:	305027f3          	csrr	a5,mtvec
200129da:	fef42023          	sw	a5,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
200129de:	200107b7          	lui	a5,0x20010
200129e2:	13c78793          	addi	a5,a5,316 # 2001013c <early_trap_vector>
200129e6:	fe042703          	lw	a4,-32(s0)
200129ea:	00f71863          	bne	a4,a5,200129fa <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
200129ee:	200127b7          	lui	a5,0x20012
200129f2:	b8078593          	addi	a1,a5,-1152 # 20011b80 <__metal_exception_handler>
200129f6:	4501                	li	a0,0
200129f8:	3335                	jal	20012724 <__metal_controller_interrupt_vector>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
200129fa:	fe442783          	lw	a5,-28(s0)
200129fe:	4705                	li	a4,1
20012a00:	c3d8                	sw	a4,4(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20012a02:	0001                	nop
20012a04:	50b2                	lw	ra,44(sp)
20012a06:	5422                	lw	s0,40(sp)
20012a08:	6145                	addi	sp,sp,48
20012a0a:	8082                	ret

20012a0c <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20012a0c:	7179                	addi	sp,sp,-48
20012a0e:	d606                	sw	ra,44(sp)
20012a10:	d422                	sw	s0,40(sp)
20012a12:	1800                	addi	s0,sp,48
20012a14:	fca42e23          	sw	a0,-36(s0)
20012a18:	fcb42c23          	sw	a1,-40(s0)
20012a1c:	fcc42a23          	sw	a2,-44(s0)
20012a20:	fcd42823          	sw	a3,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20012a24:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20012a28:	fdc42783          	lw	a5,-36(s0)
20012a2c:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20012a30:	fd842503          	lw	a0,-40(s0)
20012a34:	3361                	jal	200127bc <__metal_valid_interrupt_id>
20012a36:	87aa                	mv	a5,a0
20012a38:	e399                	bnez	a5,20012a3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20012a3a:	57d5                	li	a5,-11
20012a3c:	aa71                	j	20012bd8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012a3e:	fd842703          	lw	a4,-40(s0)
20012a42:	08000793          	li	a5,128
20012a46:	00f71763          	bne	a4,a5,20012a54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20012a4a:	3169                	jal	200126d4 <__metal_controller_interrupt_vector_mode>
20012a4c:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20012a4e:	c399                	beqz	a5,20012a54 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20012a50:	57cd                	li	a5,-13
20012a52:	a259                	j	20012bd8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20012a54:	fd442783          	lw	a5,-44(s0)
20012a58:	cfb9                	beqz	a5,20012ab6 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20012a5a:	fd842703          	lw	a4,-40(s0)
20012a5e:	08000793          	li	a5,128
20012a62:	00f71f63          	bne	a4,a5,20012a80 <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20012a66:	fe842783          	lw	a5,-24(s0)
20012a6a:	fd442703          	lw	a4,-44(s0)
20012a6e:	38e7a823          	sw	a4,912(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20012a72:	fe842783          	lw	a5,-24(s0)
20012a76:	fd042703          	lw	a4,-48(s0)
20012a7a:	38e7ac23          	sw	a4,920(a5)
20012a7e:	aa99                	j	20012bd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20012a80:	fe842683          	lw	a3,-24(s0)
20012a84:	fd842703          	lw	a4,-40(s0)
20012a88:	87ba                	mv	a5,a4
20012a8a:	0786                	slli	a5,a5,0x1
20012a8c:	97ba                	add	a5,a5,a4
20012a8e:	078e                	slli	a5,a5,0x3
20012a90:	97b6                	add	a5,a5,a3
20012a92:	fd442703          	lw	a4,-44(s0)
20012a96:	08e7a823          	sw	a4,144(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20012a9a:	fe842683          	lw	a3,-24(s0)
20012a9e:	fd842703          	lw	a4,-40(s0)
20012aa2:	87ba                	mv	a5,a4
20012aa4:	0786                	slli	a5,a5,0x1
20012aa6:	97ba                	add	a5,a5,a4
20012aa8:	078e                	slli	a5,a5,0x3
20012aaa:	97b6                	add	a5,a5,a3
20012aac:	fd042703          	lw	a4,-48(s0)
20012ab0:	08e7ac23          	sw	a4,152(a5)
20012ab4:	a205                	j	20012bd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20012ab6:	fd842703          	lw	a4,-40(s0)
20012aba:	47ad                	li	a5,11
20012abc:	0cf70c63          	beq	a4,a5,20012b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20012ac0:	fd842703          	lw	a4,-40(s0)
20012ac4:	47ad                	li	a5,11
20012ac6:	00e7cd63          	blt	a5,a4,20012ae0 <__metal_driver_riscv_cpu_controller_interrupt_register+0xd4>
20012aca:	fd842703          	lw	a4,-40(s0)
20012ace:	478d                	li	a5,3
20012ad0:	02f70963          	beq	a4,a5,20012b02 <__metal_driver_riscv_cpu_controller_interrupt_register+0xf6>
20012ad4:	fd842703          	lw	a4,-40(s0)
20012ad8:	479d                	li	a5,7
20012ada:	06f70163          	beq	a4,a5,20012b3c <__metal_driver_riscv_cpu_controller_interrupt_register+0x130>
20012ade:	a8c5                	j	20012bce <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20012ae0:	fd842703          	lw	a4,-40(s0)
20012ae4:	47c1                	li	a5,16
20012ae6:	0ef74463          	blt	a4,a5,20012bce <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
20012aea:	fd842703          	lw	a4,-40(s0)
20012aee:	47fd                	li	a5,31
20012af0:	0ae7d263          	bge	a5,a4,20012b94 <__metal_driver_riscv_cpu_controller_interrupt_register+0x188>
20012af4:	fd842703          	lw	a4,-40(s0)
20012af8:	08000793          	li	a5,128
20012afc:	06f70d63          	beq	a4,a5,20012b76 <__metal_driver_riscv_cpu_controller_interrupt_register+0x16a>
20012b00:	a0f9                	j	20012bce <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c2>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20012b02:	fe842683          	lw	a3,-24(s0)
20012b06:	fd842703          	lw	a4,-40(s0)
20012b0a:	87ba                	mv	a5,a4
20012b0c:	0786                	slli	a5,a5,0x1
20012b0e:	97ba                	add	a5,a5,a4
20012b10:	078e                	slli	a5,a5,0x3
20012b12:	97b6                	add	a5,a5,a3
20012b14:	20012737          	lui	a4,0x20012
20012b18:	9ca70713          	addi	a4,a4,-1590 # 200119ca <__metal_default_sw_handler>
20012b1c:	08e7a823          	sw	a4,144(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20012b20:	fe842683          	lw	a3,-24(s0)
20012b24:	fd842703          	lw	a4,-40(s0)
20012b28:	87ba                	mv	a5,a4
20012b2a:	0786                	slli	a5,a5,0x1
20012b2c:	97ba                	add	a5,a5,a4
20012b2e:	078e                	slli	a5,a5,0x3
20012b30:	97b6                	add	a5,a5,a3
20012b32:	fd042703          	lw	a4,-48(s0)
20012b36:	08e7aa23          	sw	a4,148(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20012b3a:	a869                	j	20012bd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20012b3c:	fe842683          	lw	a3,-24(s0)
20012b40:	fd842703          	lw	a4,-40(s0)
20012b44:	87ba                	mv	a5,a4
20012b46:	0786                	slli	a5,a5,0x1
20012b48:	97ba                	add	a5,a5,a4
20012b4a:	078e                	slli	a5,a5,0x3
20012b4c:	97b6                	add	a5,a5,a3
20012b4e:	20012737          	lui	a4,0x20012
20012b52:	ada70713          	addi	a4,a4,-1318 # 20011ada <__metal_default_timer_handler>
20012b56:	08e7a823          	sw	a4,144(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20012b5a:	fe842683          	lw	a3,-24(s0)
20012b5e:	fd842703          	lw	a4,-40(s0)
20012b62:	87ba                	mv	a5,a4
20012b64:	0786                	slli	a5,a5,0x1
20012b66:	97ba                	add	a5,a5,a4
20012b68:	078e                	slli	a5,a5,0x3
20012b6a:	97b6                	add	a5,a5,a3
20012b6c:	fd042703          	lw	a4,-48(s0)
20012b70:	08e7aa23          	sw	a4,148(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20012b74:	a085                	j	20012bd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20012b76:	fe842783          	lw	a5,-24(s0)
20012b7a:	20012737          	lui	a4,0x20012
20012b7e:	ac470713          	addi	a4,a4,-1340 # 20011ac4 <__metal_default_beu_handler>
20012b82:	38e7a823          	sw	a4,912(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20012b86:	fe842783          	lw	a5,-24(s0)
20012b8a:	fd042703          	lw	a4,-48(s0)
20012b8e:	38e7ac23          	sw	a4,920(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20012b92:	a089                	j	20012bd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20012b94:	fe842683          	lw	a3,-24(s0)
20012b98:	fd842703          	lw	a4,-40(s0)
20012b9c:	87ba                	mv	a5,a4
20012b9e:	0786                	slli	a5,a5,0x1
20012ba0:	97ba                	add	a5,a5,a4
20012ba2:	078e                	slli	a5,a5,0x3
20012ba4:	97b6                	add	a5,a5,a3
20012ba6:	20012737          	lui	a4,0x20012
20012baa:	8f270713          	addi	a4,a4,-1806 # 200118f2 <__metal_default_interrupt_handler>
20012bae:	08e7a823          	sw	a4,144(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20012bb2:	fe842683          	lw	a3,-24(s0)
20012bb6:	fd842703          	lw	a4,-40(s0)
20012bba:	87ba                	mv	a5,a4
20012bbc:	0786                	slli	a5,a5,0x1
20012bbe:	97ba                	add	a5,a5,a4
20012bc0:	078e                	slli	a5,a5,0x3
20012bc2:	97b6                	add	a5,a5,a3
20012bc4:	fd042703          	lw	a4,-48(s0)
20012bc8:	08e7aa23          	sw	a4,148(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20012bcc:	a021                	j	20012bd4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1c8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20012bce:	57d1                	li	a5,-12
20012bd0:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20012bd4:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:549
}
20012bd8:	853e                	mv	a0,a5
20012bda:	50b2                	lw	ra,44(sp)
20012bdc:	5422                	lw	s0,40(sp)
20012bde:	6145                	addi	sp,sp,48
20012be0:	8082                	ret

20012be2 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20012be2:	1101                	addi	sp,sp,-32
20012be4:	ce06                	sw	ra,28(sp)
20012be6:	cc22                	sw	s0,24(sp)
20012be8:	1000                	addi	s0,sp,32
20012bea:	fea42623          	sw	a0,-20(s0)
20012bee:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20012bf2:	fe842783          	lw	a5,-24(s0)
20012bf6:	4605                	li	a2,1
20012bf8:	85be                	mv	a1,a5
20012bfa:	fec42503          	lw	a0,-20(s0)
20012bfe:	310d                	jal	20012820 <__metal_local_interrupt_enable>
20012c00:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:554
}
20012c02:	853e                	mv	a0,a5
20012c04:	40f2                	lw	ra,28(sp)
20012c06:	4462                	lw	s0,24(sp)
20012c08:	6105                	addi	sp,sp,32
20012c0a:	8082                	ret

20012c0c <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20012c0c:	1101                	addi	sp,sp,-32
20012c0e:	ce06                	sw	ra,28(sp)
20012c10:	cc22                	sw	s0,24(sp)
20012c12:	1000                	addi	s0,sp,32
20012c14:	fea42623          	sw	a0,-20(s0)
20012c18:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20012c1c:	fe842783          	lw	a5,-24(s0)
20012c20:	4601                	li	a2,0
20012c22:	85be                	mv	a1,a5
20012c24:	fec42503          	lw	a0,-20(s0)
20012c28:	3ee5                	jal	20012820 <__metal_local_interrupt_enable>
20012c2a:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:559
}
20012c2c:	853e                	mv	a0,a5
20012c2e:	40f2                	lw	ra,28(sp)
20012c30:	4462                	lw	s0,24(sp)
20012c32:	6105                	addi	sp,sp,32
20012c34:	8082                	ret

20012c36 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20012c36:	1101                	addi	sp,sp,-32
20012c38:	ce06                	sw	ra,28(sp)
20012c3a:	cc22                	sw	s0,24(sp)
20012c3c:	1000                	addi	s0,sp,32
20012c3e:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20012c42:	3c49                	jal	200126d4 <__metal_controller_interrupt_vector_mode>
20012c44:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:593
}
20012c46:	853e                	mv	a0,a5
20012c48:	40f2                	lw	ra,28(sp)
20012c4a:	4462                	lw	s0,24(sp)
20012c4c:	6105                	addi	sp,sp,32
20012c4e:	8082                	ret

20012c50 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20012c50:	1101                	addi	sp,sp,-32
20012c52:	ce06                	sw	ra,28(sp)
20012c54:	cc22                	sw	s0,24(sp)
20012c56:	1000                	addi	s0,sp,32
20012c58:	fea42623          	sw	a0,-20(s0)
20012c5c:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20012c60:	fe842783          	lw	a5,-24(s0)
20012c64:	eb91                	bnez	a5,20012c78 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x28>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20012c66:	200127b7          	lui	a5,0x20012
20012c6a:	b8078593          	addi	a1,a5,-1152 # 20011b80 <__metal_exception_handler>
20012c6e:	fe842503          	lw	a0,-24(s0)
20012c72:	3c4d                	jal	20012724 <__metal_controller_interrupt_vector>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20012c74:	4781                	li	a5,0
20012c76:	a005                	j	20012c96 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20012c78:	fe842703          	lw	a4,-24(s0)
20012c7c:	4785                	li	a5,1
20012c7e:	00f71b63          	bne	a4,a5,20012c94 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20012c82:	200157b7          	lui	a5,0x20015
20012c86:	30078593          	addi	a1,a5,768 # 20015300 <__metal_vector_table>
20012c8a:	fe842503          	lw	a0,-24(s0)
20012c8e:	3c59                	jal	20012724 <__metal_controller_interrupt_vector>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20012c90:	4781                	li	a5,0
20012c92:	a011                	j	20012c96 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x46>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20012c94:	57fd                	li	a5,-1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:609
}
20012c96:	853e                	mv	a0,a5
20012c98:	40f2                	lw	ra,28(sp)
20012c9a:	4462                	lw	s0,24(sp)
20012c9c:	6105                	addi	sp,sp,32
20012c9e:	8082                	ret

20012ca0 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20012ca0:	1101                	addi	sp,sp,-32
20012ca2:	ce22                	sw	s0,28(sp)
20012ca4:	1000                	addi	s0,sp,32
20012ca6:	fea42623          	sw	a0,-20(s0)
20012caa:	feb42423          	sw	a1,-24(s0)
20012cae:	fec42223          	sw	a2,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20012cb2:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:616
}
20012cb4:	853e                	mv	a0,a5
20012cb6:	4472                	lw	s0,28(sp)
20012cb8:	6105                	addi	sp,sp,32
20012cba:	8082                	ret

20012cbc <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20012cbc:	7139                	addi	sp,sp,-64
20012cbe:	de22                	sw	s0,60(sp)
20012cc0:	0080                	addi	s0,sp,64
20012cc2:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20012cc6:	4301                	li	t1,0
20012cc8:	4381                	li	t2,0
20012cca:	fe642423          	sw	t1,-24(s0)
20012cce:	fe742623          	sw	t2,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20012cd2:	b8002573          	csrr	a0,mcycleh
20012cd6:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20012cda:	b0002573          	csrr	a0,mcycle
20012cde:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20012ce2:	b8002573          	csrr	a0,mcycleh
20012ce6:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20012cea:	fe442883          	lw	a7,-28(s0)
20012cee:	fdc42503          	lw	a0,-36(s0)
20012cf2:	fea890e3          	bne	a7,a0,20012cd2 <__metal_driver_cpu_mcycle_get+0x16>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20012cf6:	fe442503          	lw	a0,-28(s0)
20012cfa:	85aa                	mv	a1,a0
20012cfc:	4601                	li	a2,0
20012cfe:	00059813          	slli	a6,a1,0x0
20012d02:	4781                	li	a5,0
20012d04:	fe042603          	lw	a2,-32(s0)
20012d08:	86b2                	mv	a3,a2
20012d0a:	4701                	li	a4,0
20012d0c:	00d7e633          	or	a2,a5,a3
20012d10:	fec42423          	sw	a2,-24(s0)
20012d14:	00e867b3          	or	a5,a6,a4
20012d18:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20012d1c:	fe842783          	lw	a5,-24(s0)
20012d20:	fec42803          	lw	a6,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:640
}
20012d24:	853e                	mv	a0,a5
20012d26:	85c2                	mv	a1,a6
20012d28:	5472                	lw	s0,60(sp)
20012d2a:	6121                	addi	sp,sp,64
20012d2c:	8082                	ret

20012d2e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20012d2e:	7179                	addi	sp,sp,-48
20012d30:	d606                	sw	ra,44(sp)
20012d32:	d422                	sw	s0,40(sp)
20012d34:	d24a                	sw	s2,36(sp)
20012d36:	d04e                	sw	s3,32(sp)
20012d38:	1800                	addi	s0,sp,48
20012d3a:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20012d3e:	fdc42783          	lw	a5,-36(s0)
20012d42:	e781                	bnez	a5,20012d4a <__metal_driver_cpu_timebase_get+0x1c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20012d44:	4901                	li	s2,0
20012d46:	4981                	li	s3,0
20012d48:	a821                	j	20012d60 <__metal_driver_cpu_timebase_get+0x32>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20012d4a:	fdc42503          	lw	a0,-36(s0)
20012d4e:	99bfe0ef          	jal	ra,200116e8 <__metal_driver_cpu_timebase>
20012d52:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20012d56:	fec42783          	lw	a5,-20(s0)
20012d5a:	893e                	mv	s2,a5
20012d5c:	87fd                	srai	a5,a5,0x1f
20012d5e:	89be                	mv	s3,a5
20012d60:	87ca                	mv	a5,s2
20012d62:	884e                	mv	a6,s3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:650
}
20012d64:	853e                	mv	a0,a5
20012d66:	85c2                	mv	a1,a6
20012d68:	50b2                	lw	ra,44(sp)
20012d6a:	5422                	lw	s0,40(sp)
20012d6c:	5912                	lw	s2,36(sp)
20012d6e:	5982                	lw	s3,32(sp)
20012d70:	6145                	addi	sp,sp,48
20012d72:	8082                	ret

20012d74 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20012d74:	7179                	addi	sp,sp,-48
20012d76:	d606                	sw	ra,44(sp)
20012d78:	d422                	sw	s0,40(sp)
20012d7a:	1800                	addi	s0,sp,48
20012d7c:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20012d80:	4781                	li	a5,0
20012d82:	4801                	li	a6,0
20012d84:	fef42023          	sw	a5,-32(s0)
20012d88:	ff042223          	sw	a6,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012d8c:	fdc42503          	lw	a0,-36(s0)
20012d90:	987fe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012d94:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20012d98:	fec42783          	lw	a5,-20(s0)
20012d9c:	c78d                	beqz	a5,20012dc6 <__metal_driver_cpu_mtime_get+0x52>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20012d9e:	fec42783          	lw	a5,-20(s0)
20012da2:	13c7a783          	lw	a5,316(a5)
20012da6:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20012daa:	fe842783          	lw	a5,-24(s0)
20012dae:	cf81                	beqz	a5,20012dc6 <__metal_driver_cpu_mtime_get+0x52>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20012db0:	fe842783          	lw	a5,-24(s0)
20012db4:	439c                	lw	a5,0(a5)
20012db6:	47f8                	lw	a4,76(a5)
20012db8:	fe040793          	addi	a5,s0,-32
20012dbc:	863e                	mv	a2,a5
20012dbe:	4585                	li	a1,1
20012dc0:	fe842503          	lw	a0,-24(s0)
20012dc4:	9702                	jalr	a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20012dc6:	fe042783          	lw	a5,-32(s0)
20012dca:	fe442803          	lw	a6,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:667
}
20012dce:	853e                	mv	a0,a5
20012dd0:	85c2                	mv	a1,a6
20012dd2:	50b2                	lw	ra,44(sp)
20012dd4:	5422                	lw	s0,40(sp)
20012dd6:	6145                	addi	sp,sp,48
20012dd8:	8082                	ret

20012dda <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20012dda:	7179                	addi	sp,sp,-48
20012ddc:	d606                	sw	ra,44(sp)
20012dde:	d422                	sw	s0,40(sp)
20012de0:	d226                	sw	s1,36(sp)
20012de2:	1800                	addi	s0,sp,48
20012de4:	fca42e23          	sw	a0,-36(s0)
20012de8:	fcb42823          	sw	a1,-48(s0)
20012dec:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20012df0:	57fd                	li	a5,-1
20012df2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012df6:	fdc42503          	lw	a0,-36(s0)
20012dfa:	91dfe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012dfe:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20012e02:	fe842783          	lw	a5,-24(s0)
20012e06:	cf8d                	beqz	a5,20012e40 <__metal_driver_cpu_mtimecmp_set+0x66>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20012e08:	fe842783          	lw	a5,-24(s0)
20012e0c:	13c7a783          	lw	a5,316(a5)
20012e10:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20012e14:	fe442783          	lw	a5,-28(s0)
20012e18:	c785                	beqz	a5,20012e40 <__metal_driver_cpu_mtimecmp_set+0x66>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20012e1a:	fe442783          	lw	a5,-28(s0)
20012e1e:	439c                	lw	a5,0(a5)
20012e20:	4ba4                	lw	s1,80(a5)
20012e22:	fdc42503          	lw	a0,-36(s0)
20012e26:	89bfe0ef          	jal	ra,200116c0 <__metal_driver_cpu_hartid>
20012e2a:	87aa                	mv	a5,a0
20012e2c:	fd042603          	lw	a2,-48(s0)
20012e30:	fd442683          	lw	a3,-44(s0)
20012e34:	85be                	mv	a1,a5
20012e36:	fe442503          	lw	a0,-28(s0)
20012e3a:	9482                	jalr	s1
20012e3c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20012e40:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:685
}
20012e44:	853e                	mv	a0,a5
20012e46:	50b2                	lw	ra,44(sp)
20012e48:	5422                	lw	s0,40(sp)
20012e4a:	5492                	lw	s1,36(sp)
20012e4c:	6145                	addi	sp,sp,48
20012e4e:	8082                	ret

20012e50 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20012e50:	1101                	addi	sp,sp,-32
20012e52:	ce22                	sw	s0,28(sp)
20012e54:	1000                	addi	s0,sp,32
20012e56:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20012e5a:	800017b7          	lui	a5,0x80001
20012e5e:	a7478793          	addi	a5,a5,-1420 # 80000a74 <__global_pointer$+0xfffff804>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20012e62:	853e                	mv	a0,a5
20012e64:	4472                	lw	s0,28(sp)
20012e66:	6105                	addi	sp,sp,32
20012e68:	8082                	ret

20012e6a <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20012e6a:	1101                	addi	sp,sp,-32
20012e6c:	ce22                	sw	s0,28(sp)
20012e6e:	1000                	addi	s0,sp,32
20012e70:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20012e74:	479d                	li	a5,7
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:703
}
20012e76:	853e                	mv	a0,a5
20012e78:	4472                	lw	s0,28(sp)
20012e7a:	6105                	addi	sp,sp,32
20012e7c:	8082                	ret

20012e7e <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20012e7e:	1101                	addi	sp,sp,-32
20012e80:	ce22                	sw	s0,28(sp)
20012e82:	1000                	addi	s0,sp,32
20012e84:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20012e88:	800017b7          	lui	a5,0x80001
20012e8c:	a7478793          	addi	a5,a5,-1420 # 80000a74 <__global_pointer$+0xfffff804>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20012e90:	853e                	mv	a0,a5
20012e92:	4472                	lw	s0,28(sp)
20012e94:	6105                	addi	sp,sp,32
20012e96:	8082                	ret

20012e98 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20012e98:	1101                	addi	sp,sp,-32
20012e9a:	ce22                	sw	s0,28(sp)
20012e9c:	1000                	addi	s0,sp,32
20012e9e:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20012ea2:	478d                	li	a5,3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:721
}
20012ea4:	853e                	mv	a0,a5
20012ea6:	4472                	lw	s0,28(sp)
20012ea8:	6105                	addi	sp,sp,32
20012eaa:	8082                	ret

20012eac <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20012eac:	7179                	addi	sp,sp,-48
20012eae:	d606                	sw	ra,44(sp)
20012eb0:	d422                	sw	s0,40(sp)
20012eb2:	1800                	addi	s0,sp,48
20012eb4:	fca42e23          	sw	a0,-36(s0)
20012eb8:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20012ebc:	57fd                	li	a5,-1
20012ebe:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012ec2:	fdc42503          	lw	a0,-36(s0)
20012ec6:	851fe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012eca:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20012ece:	fe842783          	lw	a5,-24(s0)
20012ed2:	c79d                	beqz	a5,20012f00 <__metal_driver_cpu_set_sw_ipi+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012ed4:	fe842783          	lw	a5,-24(s0)
20012ed8:	0dc7a783          	lw	a5,220(a5)
20012edc:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20012ee0:	fe442783          	lw	a5,-28(s0)
20012ee4:	cf91                	beqz	a5,20012f00 <__metal_driver_cpu_set_sw_ipi+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20012ee6:	fe442783          	lw	a5,-28(s0)
20012eea:	439c                	lw	a5,0(a5)
20012eec:	47f8                	lw	a4,76(a5)
20012eee:	fd840793          	addi	a5,s0,-40
20012ef2:	863e                	mv	a2,a5
20012ef4:	458d                	li	a1,3
20012ef6:	fe442503          	lw	a0,-28(s0)
20012efa:	9702                	jalr	a4
20012efc:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20012f00:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:738
}
20012f04:	853e                	mv	a0,a5
20012f06:	50b2                	lw	ra,44(sp)
20012f08:	5422                	lw	s0,40(sp)
20012f0a:	6145                	addi	sp,sp,48
20012f0c:	8082                	ret

20012f0e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20012f0e:	7179                	addi	sp,sp,-48
20012f10:	d606                	sw	ra,44(sp)
20012f12:	d422                	sw	s0,40(sp)
20012f14:	1800                	addi	s0,sp,48
20012f16:	fca42e23          	sw	a0,-36(s0)
20012f1a:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20012f1e:	57fd                	li	a5,-1
20012f20:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012f24:	fdc42503          	lw	a0,-36(s0)
20012f28:	feefe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012f2c:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20012f30:	fe842783          	lw	a5,-24(s0)
20012f34:	c79d                	beqz	a5,20012f62 <__metal_driver_cpu_clear_sw_ipi+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012f36:	fe842783          	lw	a5,-24(s0)
20012f3a:	0dc7a783          	lw	a5,220(a5)
20012f3e:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20012f42:	fe442783          	lw	a5,-28(s0)
20012f46:	cf91                	beqz	a5,20012f62 <__metal_driver_cpu_clear_sw_ipi+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20012f48:	fe442783          	lw	a5,-28(s0)
20012f4c:	439c                	lw	a5,0(a5)
20012f4e:	47f8                	lw	a4,76(a5)
20012f50:	fd840793          	addi	a5,s0,-40
20012f54:	863e                	mv	a2,a5
20012f56:	4589                	li	a1,2
20012f58:	fe442503          	lw	a0,-28(s0)
20012f5c:	9702                	jalr	a4
20012f5e:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20012f62:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:755
}
20012f66:	853e                	mv	a0,a5
20012f68:	50b2                	lw	ra,44(sp)
20012f6a:	5422                	lw	s0,40(sp)
20012f6c:	6145                	addi	sp,sp,48
20012f6e:	8082                	ret

20012f70 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20012f70:	7179                	addi	sp,sp,-48
20012f72:	d606                	sw	ra,44(sp)
20012f74:	d422                	sw	s0,40(sp)
20012f76:	1800                	addi	s0,sp,48
20012f78:	fca42e23          	sw	a0,-36(s0)
20012f7c:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20012f80:	fe042623          	sw	zero,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20012f84:	fdc42503          	lw	a0,-36(s0)
20012f88:	f8efe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012f8c:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20012f90:	fe842783          	lw	a5,-24(s0)
20012f94:	c79d                	beqz	a5,20012fc2 <__metal_driver_cpu_get_msip+0x52>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20012f96:	fe842783          	lw	a5,-24(s0)
20012f9a:	0dc7a783          	lw	a5,220(a5)
20012f9e:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20012fa2:	fe442783          	lw	a5,-28(s0)
20012fa6:	cf91                	beqz	a5,20012fc2 <__metal_driver_cpu_get_msip+0x52>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20012fa8:	fe442783          	lw	a5,-28(s0)
20012fac:	439c                	lw	a5,0(a5)
20012fae:	47f8                	lw	a4,76(a5)
20012fb0:	fd840793          	addi	a5,s0,-40
20012fb4:	863e                	mv	a2,a5
20012fb6:	4591                	li	a1,4
20012fb8:	fe442503          	lw	a0,-28(s0)
20012fbc:	9702                	jalr	a4
20012fbe:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20012fc2:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:772
}
20012fc6:	853e                	mv	a0,a5
20012fc8:	50b2                	lw	ra,44(sp)
20012fca:	5422                	lw	s0,40(sp)
20012fcc:	6145                	addi	sp,sp,48
20012fce:	8082                	ret

20012fd0 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20012fd0:	1101                	addi	sp,sp,-32
20012fd2:	ce06                	sw	ra,28(sp)
20012fd4:	cc22                	sw	s0,24(sp)
20012fd6:	1000                	addi	s0,sp,32
20012fd8:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20012fdc:	fec42503          	lw	a0,-20(s0)
20012fe0:	f36fe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
20012fe4:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:777
}
20012fe6:	853e                	mv	a0,a5
20012fe8:	40f2                	lw	ra,28(sp)
20012fea:	4462                	lw	s0,24(sp)
20012fec:	6105                	addi	sp,sp,32
20012fee:	8082                	ret

20012ff0 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20012ff0:	7179                	addi	sp,sp,-48
20012ff2:	d606                	sw	ra,44(sp)
20012ff4:	d422                	sw	s0,40(sp)
20012ff6:	1800                	addi	s0,sp,48
20012ff8:	fca42e23          	sw	a0,-36(s0)
20012ffc:	fcb42c23          	sw	a1,-40(s0)
20013000:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20013004:	fdc42503          	lw	a0,-36(s0)
20013008:	f0efe0ef          	jal	ra,20011716 <__metal_driver_cpu_interrupt_controller>
2001300c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20013010:	fec42783          	lw	a5,-20(s0)
20013014:	cb99                	beqz	a5,2001302a <__metal_driver_cpu_exception_register+0x3a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20013016:	fd442603          	lw	a2,-44(s0)
2001301a:	fd842583          	lw	a1,-40(s0)
2001301e:	fec42503          	lw	a0,-20(s0)
20013022:	8bbff0ef          	jal	ra,200128dc <__metal_exception_register>
20013026:	87aa                	mv	a5,a0
20013028:	a011                	j	2001302c <__metal_driver_cpu_exception_register+0x3c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2001302a:	57fd                	li	a5,-1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:808
}
2001302c:	853e                	mv	a0,a5
2001302e:	50b2                	lw	ra,44(sp)
20013030:	5422                	lw	s0,40(sp)
20013032:	6145                	addi	sp,sp,48
20013034:	8082                	ret

20013036 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20013036:	1101                	addi	sp,sp,-32
20013038:	ce22                	sw	s0,28(sp)
2001303a:	1000                	addi	s0,sp,32
2001303c:	fea42623          	sw	a0,-20(s0)
20013040:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20013044:	fe842783          	lw	a5,-24(s0)
20013048:	0007d783          	lhu	a5,0(a5)
2001304c:	0037f713          	andi	a4,a5,3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20013050:	478d                	li	a5,3
20013052:	00f71463          	bne	a4,a5,2001305a <__metal_driver_cpu_get_instruction_length+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20013056:	4791                	li	a5,4
20013058:	a011                	j	2001305c <__metal_driver_cpu_get_instruction_length+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2001305a:	4789                	li	a5,2
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2001305c:	853e                	mv	a0,a5
2001305e:	4472                	lw	s0,28(sp)
20013060:	6105                	addi	sp,sp,32
20013062:	8082                	ret

20013064 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20013064:	7179                	addi	sp,sp,-48
20013066:	d622                	sw	s0,44(sp)
20013068:	1800                	addi	s0,sp,48
2001306a:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2001306e:	341027f3          	csrr	a5,mepc
20013072:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20013076:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:827
}
2001307a:	853e                	mv	a0,a5
2001307c:	5432                	lw	s0,44(sp)
2001307e:	6145                	addi	sp,sp,48
20013080:	8082                	ret

20013082 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20013082:	1101                	addi	sp,sp,-32
20013084:	ce22                	sw	s0,28(sp)
20013086:	1000                	addi	s0,sp,32
20013088:	fea42623          	sw	a0,-20(s0)
2001308c:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20013090:	fe842783          	lw	a5,-24(s0)
20013094:	34179073          	csrw	mepc,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20013098:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:832
}
2001309a:	853e                	mv	a0,a5
2001309c:	4472                	lw	s0,28(sp)
2001309e:	6105                	addi	sp,sp,32
200130a0:	8082                	ret

200130a2 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
200130a2:	1101                	addi	sp,sp,-32
200130a4:	ce06                	sw	ra,28(sp)
200130a6:	cc22                	sw	s0,24(sp)
200130a8:	1000                	addi	s0,sp,32
200130aa:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
200130ae:	fec42503          	lw	a0,-20(s0)
200130b2:	e92fe0ef          	jal	ra,20011744 <__metal_driver_cpu_buserror>
200130b6:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_cpu.c:836
}
200130b8:	853e                	mv	a0,a5
200130ba:	40f2                	lw	ra,28(sp)
200130bc:	4462                	lw	s0,24(sp)
200130be:	6105                	addi	sp,sp,32
200130c0:	8082                	ret

200130c2 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
200130c2:	1101                	addi	sp,sp,-32
200130c4:	ce22                	sw	s0,28(sp)
200130c6:	1000                	addi	s0,sp,32
200130c8:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200130cc:	fec42703          	lw	a4,-20(s0)
200130d0:	800007b7          	lui	a5,0x80000
200130d4:	41078793          	addi	a5,a5,1040 # 80000410 <__global_pointer$+0xfffff1a0>
200130d8:	00f71563          	bne	a4,a5,200130e2 <__metal_driver_sifive_plic0_control_base+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
200130dc:	0c0007b7          	lui	a5,0xc000
200130e0:	a011                	j	200130e4 <__metal_driver_sifive_plic0_control_base+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:350
	}
	else {
		return 0;
200130e2:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:352
	}
}
200130e4:	853e                	mv	a0,a5
200130e6:	4472                	lw	s0,28(sp)
200130e8:	6105                	addi	sp,sp,32
200130ea:	8082                	ret

200130ec <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
200130ec:	1101                	addi	sp,sp,-32
200130ee:	ce22                	sw	s0,28(sp)
200130f0:	1000                	addi	s0,sp,32
200130f2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200130f6:	fec42703          	lw	a4,-20(s0)
200130fa:	800007b7          	lui	a5,0x80000
200130fe:	41078793          	addi	a5,a5,1040 # 80000410 <__global_pointer$+0xfffff1a0>
20013102:	00f71563          	bne	a4,a5,2001310c <__metal_driver_sifive_plic0_num_interrupts+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20013106:	03500793          	li	a5,53
2001310a:	a011                	j	2001310e <__metal_driver_sifive_plic0_num_interrupts+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:370
	}
	else {
		return 0;
2001310c:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:372
	}
}
2001310e:	853e                	mv	a0,a5
20013110:	4472                	lw	s0,28(sp)
20013112:	6105                	addi	sp,sp,32
20013114:	8082                	ret

20013116 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20013116:	1101                	addi	sp,sp,-32
20013118:	ce22                	sw	s0,28(sp)
2001311a:	1000                	addi	s0,sp,32
2001311c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20013120:	fec42703          	lw	a4,-20(s0)
20013124:	800007b7          	lui	a5,0x80000
20013128:	41078793          	addi	a5,a5,1040 # 80000410 <__global_pointer$+0xfffff1a0>
2001312c:	00f71463          	bne	a4,a5,20013134 <__metal_driver_sifive_plic0_max_priority+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20013130:	479d                	li	a5,7
20013132:	a011                	j	20013136 <__metal_driver_sifive_plic0_max_priority+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:380
	}
	else {
		return 0;
20013134:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:382
	}
}
20013136:	853e                	mv	a0,a5
20013138:	4472                	lw	s0,28(sp)
2001313a:	6105                	addi	sp,sp,32
2001313c:	8082                	ret

2001313e <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2001313e:	1101                	addi	sp,sp,-32
20013140:	ce22                	sw	s0,28(sp)
20013142:	1000                	addi	s0,sp,32
20013144:	fea42623          	sw	a0,-20(s0)
20013148:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:386
	if (idx == 0) {
2001314c:	fe842783          	lw	a5,-24(s0)
20013150:	e791                	bnez	a5,2001315c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20013152:	800007b7          	lui	a5,0x80000
20013156:	04078793          	addi	a5,a5,64 # 80000040 <__global_pointer$+0xffffedd0>
2001315a:	a011                	j	2001315e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:390
	}
	else {
		return NULL;
2001315c:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:392
	}
}
2001315e:	853e                	mv	a0,a5
20013160:	4472                	lw	s0,28(sp)
20013162:	6105                	addi	sp,sp,32
20013164:	8082                	ret

20013166 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20013166:	1101                	addi	sp,sp,-32
20013168:	ce22                	sw	s0,28(sp)
2001316a:	1000                	addi	s0,sp,32
2001316c:	fea42623          	sw	a0,-20(s0)
20013170:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:396
	if (idx == 0) {
20013174:	fe842783          	lw	a5,-24(s0)
20013178:	e399                	bnez	a5,2001317e <__metal_driver_sifive_plic0_interrupt_lines+0x18>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:397
		return 11;
2001317a:	47ad                	li	a5,11
2001317c:	a011                	j	20013180 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:400
	}
	else {
		return 0;
2001317e:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:402
	}
}
20013180:	853e                	mv	a0,a5
20013182:	4472                	lw	s0,28(sp)
20013184:	6105                	addi	sp,sp,32
20013186:	8082                	ret

20013188 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20013188:	1101                	addi	sp,sp,-32
2001318a:	ce22                	sw	s0,28(sp)
2001318c:	1000                	addi	s0,sp,32
2001318e:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:406
	if (hartid == 0) {
20013192:	fec42783          	lw	a5,-20(s0)
20013196:	e399                	bnez	a5,2001319c <__metal_driver_sifive_plic0_context_ids+0x14>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:407
		return 0;
20013198:	4781                	li	a5,0
2001319a:	a011                	j	2001319e <__metal_driver_sifive_plic0_context_ids+0x16>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:410
	}
	else {
		return -1;
2001319c:	57fd                	li	a5,-1
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:412
	}
}
2001319e:	853e                	mv	a0,a5
200131a0:	4472                	lw	s0,28(sp)
200131a2:	6105                	addi	sp,sp,32
200131a4:	8082                	ret

200131a6 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
200131a6:	7179                	addi	sp,sp,-48
200131a8:	d606                	sw	ra,44(sp)
200131aa:	d422                	sw	s0,40(sp)
200131ac:	1800                	addi	s0,sp,48
200131ae:	fca42e23          	sw	a0,-36(s0)
200131b2:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200131b6:	fdc42503          	lw	a0,-36(s0)
200131ba:	3721                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
200131bc:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
200131c0:	fd842783          	lw	a5,-40(s0)
200131c4:	00c79713          	slli	a4,a5,0xc
200131c8:	fec42783          	lw	a5,-20(s0)
200131cc:	973e                	add	a4,a4,a5
200131ce:	002007b7          	lui	a5,0x200
200131d2:	0791                	addi	a5,a5,4
200131d4:	97ba                	add	a5,a5,a4
200131d6:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
200131d8:	853e                	mv	a0,a5
200131da:	50b2                	lw	ra,44(sp)
200131dc:	5422                	lw	s0,40(sp)
200131de:	6145                	addi	sp,sp,48
200131e0:	8082                	ret

200131e2 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
200131e2:	7179                	addi	sp,sp,-48
200131e4:	d606                	sw	ra,44(sp)
200131e6:	d422                	sw	s0,40(sp)
200131e8:	1800                	addi	s0,sp,48
200131ea:	fca42e23          	sw	a0,-36(s0)
200131ee:	fcb42c23          	sw	a1,-40(s0)
200131f2:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200131f6:	fdc42503          	lw	a0,-36(s0)
200131fa:	35e1                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
200131fc:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20013200:	fd842783          	lw	a5,-40(s0)
20013204:	00c79713          	slli	a4,a5,0xc
20013208:	fec42783          	lw	a5,-20(s0)
2001320c:	973e                	add	a4,a4,a5
2001320e:	002007b7          	lui	a5,0x200
20013212:	0791                	addi	a5,a5,4
20013214:	97ba                	add	a5,a5,a4
20013216:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20013218:	fd442783          	lw	a5,-44(s0)
2001321c:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:35
}
2001321e:	0001                	nop
20013220:	50b2                	lw	ra,44(sp)
20013222:	5422                	lw	s0,40(sp)
20013224:	6145                	addi	sp,sp,48
20013226:	8082                	ret

20013228 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20013228:	7179                	addi	sp,sp,-48
2001322a:	d606                	sw	ra,44(sp)
2001322c:	d422                	sw	s0,40(sp)
2001322e:	1800                	addi	s0,sp,48
20013230:	fca42e23          	sw	a0,-36(s0)
20013234:	fcb42c23          	sw	a1,-40(s0)
20013238:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001323c:	fdc42503          	lw	a0,-36(s0)
20013240:	3549                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
20013242:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20013246:	fd842783          	lw	a5,-40(s0)
2001324a:	00c79713          	slli	a4,a5,0xc
2001324e:	fec42783          	lw	a5,-20(s0)
20013252:	973e                	add	a4,a4,a5
20013254:	002007b7          	lui	a5,0x200
20013258:	97ba                	add	a5,a5,a4
2001325a:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2001325c:	fd442783          	lw	a5,-44(s0)
20013260:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20013262:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:46
}
20013264:	853e                	mv	a0,a5
20013266:	50b2                	lw	ra,44(sp)
20013268:	5422                	lw	s0,40(sp)
2001326a:	6145                	addi	sp,sp,48
2001326c:	8082                	ret

2001326e <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2001326e:	7179                	addi	sp,sp,-48
20013270:	d606                	sw	ra,44(sp)
20013272:	d422                	sw	s0,40(sp)
20013274:	1800                	addi	s0,sp,48
20013276:	fca42e23          	sw	a0,-36(s0)
2001327a:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001327e:	fdc42503          	lw	a0,-36(s0)
20013282:	3581                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
20013284:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20013288:	fd842783          	lw	a5,-40(s0)
2001328c:	00c79713          	slli	a4,a5,0xc
20013290:	fec42783          	lw	a5,-20(s0)
20013294:	973e                	add	a4,a4,a5
20013296:	002007b7          	lui	a5,0x200
2001329a:	97ba                	add	a5,a5,a4
2001329c:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
2001329e:	853e                	mv	a0,a5
200132a0:	50b2                	lw	ra,44(sp)
200132a2:	5422                	lw	s0,40(sp)
200132a4:	6145                	addi	sp,sp,48
200132a6:	8082                	ret

200132a8 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
200132a8:	7179                	addi	sp,sp,-48
200132aa:	d606                	sw	ra,44(sp)
200132ac:	d422                	sw	s0,40(sp)
200132ae:	1800                	addi	s0,sp,48
200132b0:	fca42e23          	sw	a0,-36(s0)
200132b4:	fcb42c23          	sw	a1,-40(s0)
200132b8:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200132bc:	fdc42503          	lw	a0,-36(s0)
200132c0:	3509                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
200132c2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
200132c6:	fdc42503          	lw	a0,-36(s0)
200132ca:	35b1                	jal	20013116 <__metal_driver_sifive_plic0_max_priority>
200132cc:	87aa                	mv	a5,a0
200132ce:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
200132d2:	fe842783          	lw	a5,-24(s0)
200132d6:	c785                	beqz	a5,200132fe <__metal_driver_riscv_plic0_set_priority+0x56>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
200132d8:	fd442703          	lw	a4,-44(s0)
200132dc:	fe842783          	lw	a5,-24(s0)
200132e0:	00f77f63          	bgeu	a4,a5,200132fe <__metal_driver_riscv_plic0_set_priority+0x56>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
200132e4:	fd842783          	lw	a5,-40(s0)
200132e8:	078a                	slli	a5,a5,0x2
200132ea:	873e                	mv	a4,a5
200132ec:	fec42783          	lw	a5,-20(s0)
200132f0:	97ba                	add	a5,a5,a4
200132f2:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
200132f4:	fd442783          	lw	a5,-44(s0)
200132f8:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
200132fa:	4781                	li	a5,0
200132fc:	a011                	j	20013300 <__metal_driver_riscv_plic0_set_priority+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
200132fe:	57fd                	li	a5,-1
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:72
}
20013300:	853e                	mv	a0,a5
20013302:	50b2                	lw	ra,44(sp)
20013304:	5422                	lw	s0,40(sp)
20013306:	6145                	addi	sp,sp,48
20013308:	8082                	ret

2001330a <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2001330a:	7179                	addi	sp,sp,-48
2001330c:	d606                	sw	ra,44(sp)
2001330e:	d422                	sw	s0,40(sp)
20013310:	1800                	addi	s0,sp,48
20013312:	fca42e23          	sw	a0,-36(s0)
20013316:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2001331a:	fdc42503          	lw	a0,-36(s0)
2001331e:	3355                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
20013320:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20013324:	fd842783          	lw	a5,-40(s0)
20013328:	078a                	slli	a5,a5,0x2
2001332a:	873e                	mv	a4,a5
2001332c:	fec42783          	lw	a5,-20(s0)
20013330:	97ba                	add	a5,a5,a4
20013332:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20013334:	853e                	mv	a0,a5
20013336:	50b2                	lw	ra,44(sp)
20013338:	5422                	lw	s0,40(sp)
2001333a:	6145                	addi	sp,sp,48
2001333c:	8082                	ret

2001333e <__metal_plic0_enable>:
__metal_plic0_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2001333e:	7179                	addi	sp,sp,-48
20013340:	d606                	sw	ra,44(sp)
20013342:	d422                	sw	s0,40(sp)
20013344:	1800                	addi	s0,sp,48
20013346:	fca42e23          	sw	a0,-36(s0)
2001334a:	fcb42c23          	sw	a1,-40(s0)
2001334e:	fcc42a23          	sw	a2,-44(s0)
20013352:	fcd42823          	sw	a3,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20013356:	fdc42503          	lw	a0,-36(s0)
2001335a:	33a5                	jal	200130c2 <__metal_driver_sifive_plic0_control_base>
2001335c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20013360:	fd842783          	lw	a5,-40(s0)
20013364:	00779713          	slli	a4,a5,0x7
20013368:	fec42783          	lw	a5,-20(s0)
2001336c:	97ba                	add	a5,a5,a4
2001336e:	fd442703          	lw	a4,-44(s0)
20013372:	8715                	srai	a4,a4,0x5
20013374:	070a                	slli	a4,a4,0x2
20013376:	973e                	add	a4,a4,a5
20013378:	6789                	lui	a5,0x2
2001337a:	97ba                	add	a5,a5,a4
2001337c:	439c                	lw	a5,0(a5)
2001337e:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20013382:	fd042783          	lw	a5,-48(s0)
20013386:	cf81                	beqz	a5,2001339e <__metal_plic0_enable+0x60>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20013388:	fd442783          	lw	a5,-44(s0)
2001338c:	8bfd                	andi	a5,a5,31
2001338e:	4705                	li	a4,1
20013390:	00f717b3          	sll	a5,a4,a5
20013394:	873e                	mv	a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20013396:	fe842783          	lw	a5,-24(s0)
2001339a:	8fd9                	or	a5,a5,a4
2001339c:	a829                	j	200133b6 <__metal_plic0_enable+0x78>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2001339e:	fd442783          	lw	a5,-44(s0)
200133a2:	8bfd                	andi	a5,a5,31
200133a4:	4705                	li	a4,1
200133a6:	00f717b3          	sll	a5,a4,a5
200133aa:	fff7c793          	not	a5,a5
200133ae:	873e                	mv	a4,a5
200133b0:	fe842783          	lw	a5,-24(s0)
200133b4:	8ff9                	and	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
200133b6:	fd842703          	lw	a4,-40(s0)
200133ba:	00771693          	slli	a3,a4,0x7
200133be:	fec42703          	lw	a4,-20(s0)
200133c2:	9736                	add	a4,a4,a3
200133c4:	fd442683          	lw	a3,-44(s0)
200133c8:	8695                	srai	a3,a3,0x5
200133ca:	068a                	slli	a3,a3,0x2
200133cc:	96ba                	add	a3,a3,a4
200133ce:	6709                	lui	a4,0x2
200133d0:	9736                	add	a4,a4,a3
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
200133d2:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
200133d4:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:103
}
200133d6:	853e                	mv	a0,a5
200133d8:	50b2                	lw	ra,44(sp)
200133da:	5422                	lw	s0,40(sp)
200133dc:	6145                	addi	sp,sp,48
200133de:	8082                	ret

200133e0 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
200133e0:	1101                	addi	sp,sp,-32
200133e2:	ce06                	sw	ra,28(sp)
200133e4:	cc22                	sw	s0,24(sp)
200133e6:	1000                	addi	s0,sp,32
200133e8:	fea42623          	sw	a0,-20(s0)
200133ec:	feb42423          	sw	a1,-24(s0)
200133f0:	12c00513          	li	a0,300
200133f4:	68f010ef          	jal	ra,20015282 <metal_shutdown>

200133f8 <__metal_plic0_handler>:
__metal_plic0_handler():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
200133f8:	7179                	addi	sp,sp,-48
200133fa:	d606                	sw	ra,44(sp)
200133fc:	d422                	sw	s0,40(sp)
200133fe:	1800                	addi	s0,sp,48
20013400:	fca42e23          	sw	a0,-36(s0)
20013404:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20013408:	fd842783          	lw	a5,-40(s0)
2001340c:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20013410:	b8cfe0ef          	jal	ra,2001179c <__metal_myhart_id>
20013414:	87aa                	mv	a5,a0
20013416:	853e                	mv	a0,a5
20013418:	3b85                	jal	20013188 <__metal_driver_sifive_plic0_context_ids>
2001341a:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
2001341e:	fe842583          	lw	a1,-24(s0)
20013422:	fec42503          	lw	a0,-20(s0)
20013426:	3341                	jal	200131a6 <__metal_plic0_claim_interrupt>
20013428:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
2001342c:	fec42503          	lw	a0,-20(s0)
20013430:	3975                	jal	200130ec <__metal_driver_sifive_plic0_num_interrupts>
20013432:	87aa                	mv	a5,a0
20013434:	fef42023          	sw	a5,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20013438:	fe442703          	lw	a4,-28(s0)
2001343c:	fe042783          	lw	a5,-32(s0)
20013440:	04f77263          	bgeu	a4,a5,20013484 <__metal_plic0_handler+0x8c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20013444:	fec42703          	lw	a4,-20(s0)
20013448:	fe442783          	lw	a5,-28(s0)
2001344c:	078a                	slli	a5,a5,0x2
2001344e:	97ba                	add	a5,a5,a4
20013450:	479c                	lw	a5,8(a5)
20013452:	cb8d                	beqz	a5,20013484 <__metal_plic0_handler+0x8c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20013454:	fec42703          	lw	a4,-20(s0)
20013458:	fe442783          	lw	a5,-28(s0)
2001345c:	078a                	slli	a5,a5,0x2
2001345e:	97ba                	add	a5,a5,a4
20013460:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20013464:	fe442603          	lw	a2,-28(s0)
20013468:	fec42683          	lw	a3,-20(s0)
2001346c:	fe442703          	lw	a4,-28(s0)
20013470:	87ba                	mv	a5,a4
20013472:	0786                	slli	a5,a5,0x1
20013474:	97ba                	add	a5,a5,a4
20013476:	078e                	slli	a5,a5,0x3
20013478:	97b6                	add	a5,a5,a3
2001347a:	0f07a783          	lw	a5,240(a5)
2001347e:	85be                	mv	a1,a5
20013480:	8532                	mv	a0,a2
20013482:	9802                	jalr	a6
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20013484:	fe442603          	lw	a2,-28(s0)
20013488:	fe842583          	lw	a1,-24(s0)
2001348c:	fec42503          	lw	a0,-20(s0)
20013490:	3b89                	jal	200131e2 <__metal_plic0_complete_interrupt>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:121
}
20013492:	0001                	nop
20013494:	50b2                	lw	ra,44(sp)
20013496:	5422                	lw	s0,40(sp)
20013498:	6145                	addi	sp,sp,48
2001349a:	8082                	ret

2001349c <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
2001349c:	7139                	addi	sp,sp,-64
2001349e:	de06                	sw	ra,60(sp)
200134a0:	dc22                	sw	s0,56(sp)
200134a2:	0080                	addi	s0,sp,64
200134a4:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200134a8:	fcc42783          	lw	a5,-52(s0)
200134ac:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
200134b0:	fe442783          	lw	a5,-28(s0)
200134b4:	43dc                	lw	a5,4(a5)
200134b6:	12079663          	bnez	a5,200135e2 <__metal_driver_riscv_plic0_init+0x146>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200134ba:	fe042623          	sw	zero,-20(s0)
200134be:	aa11                	j	200135d2 <__metal_driver_riscv_plic0_init+0x136>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
200134c0:	fcc42503          	lw	a0,-52(s0)
200134c4:	3125                	jal	200130ec <__metal_driver_sifive_plic0_num_interrupts>
200134c6:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
200134ca:	fec42583          	lw	a1,-20(s0)
200134ce:	fcc42503          	lw	a0,-52(s0)
200134d2:	31b5                	jal	2001313e <__metal_driver_sifive_plic0_interrupt_parents>
200134d4:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
200134d8:	fec42583          	lw	a1,-20(s0)
200134dc:	fcc42503          	lw	a0,-52(s0)
200134e0:	3159                	jal	20013166 <__metal_driver_sifive_plic0_interrupt_lines>
200134e2:	fca42c23          	sw	a0,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
200134e6:	fdc42783          	lw	a5,-36(s0)
200134ea:	439c                	lw	a5,0(a5)
200134ec:	439c                	lw	a5,0(a5)
200134ee:	fdc42503          	lw	a0,-36(s0)
200134f2:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
200134f4:	fe042423          	sw	zero,-24(s0)
200134f8:	a885                	j	20013568 <__metal_driver_riscv_plic0_init+0xcc>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
200134fa:	4681                	li	a3,0
200134fc:	fe842603          	lw	a2,-24(s0)
20013500:	fec42583          	lw	a1,-20(s0)
20013504:	fe442503          	lw	a0,-28(s0)
20013508:	3d1d                	jal	2001333e <__metal_plic0_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
2001350a:	fe842703          	lw	a4,-24(s0)
2001350e:	fe042783          	lw	a5,-32(s0)
20013512:	04f75663          	bge	a4,a5,2001355e <__metal_driver_riscv_plic0_init+0xc2>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20013516:	4601                	li	a2,0
20013518:	fe842583          	lw	a1,-24(s0)
2001351c:	fcc42503          	lw	a0,-52(s0)
20013520:	3361                	jal	200132a8 <__metal_driver_riscv_plic0_set_priority>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20013522:	fe442703          	lw	a4,-28(s0)
20013526:	fe842783          	lw	a5,-24(s0)
2001352a:	078a                	slli	a5,a5,0x2
2001352c:	97ba                	add	a5,a5,a4
2001352e:	0007a423          	sw	zero,8(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20013532:	fe442683          	lw	a3,-28(s0)
20013536:	fe842703          	lw	a4,-24(s0)
2001353a:	87ba                	mv	a5,a4
2001353c:	0786                	slli	a5,a5,0x1
2001353e:	97ba                	add	a5,a5,a4
20013540:	078e                	slli	a5,a5,0x3
20013542:	97b6                	add	a5,a5,a3
20013544:	0e07a623          	sw	zero,236(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20013548:	fe442683          	lw	a3,-28(s0)
2001354c:	fe842703          	lw	a4,-24(s0)
20013550:	87ba                	mv	a5,a4
20013552:	0786                	slli	a5,a5,0x1
20013554:	97ba                	add	a5,a5,a4
20013556:	078e                	slli	a5,a5,0x3
20013558:	97b6                	add	a5,a5,a3
2001355a:	0e07a823          	sw	zero,240(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2001355e:	fe842783          	lw	a5,-24(s0)
20013562:	0785                	addi	a5,a5,1
20013564:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20013568:	fe842703          	lw	a4,-24(s0)
2001356c:	3ff00793          	li	a5,1023
20013570:	f8e7d5e3          	bge	a5,a4,200134fa <__metal_driver_riscv_plic0_init+0x5e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20013574:	4601                	li	a2,0
20013576:	fec42583          	lw	a1,-20(s0)
2001357a:	fcc42503          	lw	a0,-52(s0)
2001357e:	316d                	jal	20013228 <__metal_plic0_set_threshold>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20013580:	fdc42783          	lw	a5,-36(s0)
20013584:	439c                	lw	a5,0(a5)
20013586:	4fdc                	lw	a5,28(a5)
20013588:	fe442683          	lw	a3,-28(s0)
2001358c:	4601                	li	a2,0
2001358e:	fd842583          	lw	a1,-40(s0)
20013592:	fdc42503          	lw	a0,-36(s0)
20013596:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20013598:	fdc42783          	lw	a5,-36(s0)
2001359c:	439c                	lw	a5,0(a5)
2001359e:	4fd8                	lw	a4,28(a5)
200135a0:	fe442683          	lw	a3,-28(s0)
200135a4:	200137b7          	lui	a5,0x20013
200135a8:	3f878613          	addi	a2,a5,1016 # 200133f8 <__metal_plic0_handler>
200135ac:	fd842583          	lw	a1,-40(s0)
200135b0:	fdc42503          	lw	a0,-36(s0)
200135b4:	9702                	jalr	a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
200135b6:	fdc42783          	lw	a5,-36(s0)
200135ba:	439c                	lw	a5,0(a5)
200135bc:	53dc                	lw	a5,36(a5)
200135be:	fd842583          	lw	a1,-40(s0)
200135c2:	fdc42503          	lw	a0,-36(s0)
200135c6:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
200135c8:	fec42783          	lw	a5,-20(s0)
200135cc:	0785                	addi	a5,a5,1
200135ce:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
200135d2:	fec42783          	lw	a5,-20(s0)
200135d6:	eef055e3          	blez	a5,200134c0 <__metal_driver_riscv_plic0_init+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
200135da:	fe442783          	lw	a5,-28(s0)
200135de:	4705                	li	a4,1
200135e0:	c3d8                	sw	a4,4(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
200135e2:	0001                	nop
200135e4:	50f2                	lw	ra,60(sp)
200135e6:	5462                	lw	s0,56(sp)
200135e8:	6121                	addi	sp,sp,64
200135ea:	8082                	ret

200135ec <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
200135ec:	7179                	addi	sp,sp,-48
200135ee:	d606                	sw	ra,44(sp)
200135f0:	d422                	sw	s0,40(sp)
200135f2:	1800                	addi	s0,sp,48
200135f4:	fca42e23          	sw	a0,-36(s0)
200135f8:	fcb42c23          	sw	a1,-40(s0)
200135fc:	fcc42a23          	sw	a2,-44(s0)
20013600:	fcd42823          	sw	a3,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20013604:	fdc42783          	lw	a5,-36(s0)
20013608:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001360c:	fdc42503          	lw	a0,-36(s0)
20013610:	3cf1                	jal	200130ec <__metal_driver_sifive_plic0_num_interrupts>
20013612:	872a                	mv	a4,a0
20013614:	fd842783          	lw	a5,-40(s0)
20013618:	00e7c463          	blt	a5,a4,20013620 <__metal_driver_riscv_plic0_register+0x34>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
2001361c:	57fd                	li	a5,-1
2001361e:	a041                	j	2001369e <__metal_driver_riscv_plic0_register+0xb2>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20013620:	fd442783          	lw	a5,-44(s0)
20013624:	cf95                	beqz	a5,20013660 <__metal_driver_riscv_plic0_register+0x74>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20013626:	4609                	li	a2,2
20013628:	fd842583          	lw	a1,-40(s0)
2001362c:	fdc42503          	lw	a0,-36(s0)
20013630:	39a5                	jal	200132a8 <__metal_driver_riscv_plic0_set_priority>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20013632:	fec42703          	lw	a4,-20(s0)
20013636:	fd842783          	lw	a5,-40(s0)
2001363a:	078a                	slli	a5,a5,0x2
2001363c:	97ba                	add	a5,a5,a4
2001363e:	fd442703          	lw	a4,-44(s0)
20013642:	c798                	sw	a4,8(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20013644:	fec42683          	lw	a3,-20(s0)
20013648:	fd842703          	lw	a4,-40(s0)
2001364c:	87ba                	mv	a5,a4
2001364e:	0786                	slli	a5,a5,0x1
20013650:	97ba                	add	a5,a5,a4
20013652:	078e                	slli	a5,a5,0x3
20013654:	97b6                	add	a5,a5,a3
20013656:	fd042703          	lw	a4,-48(s0)
2001365a:	0ee7a823          	sw	a4,240(a5)
2001365e:	a83d                	j	2001369c <__metal_driver_riscv_plic0_register+0xb0>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20013660:	4605                	li	a2,1
20013662:	fd842583          	lw	a1,-40(s0)
20013666:	fdc42503          	lw	a0,-36(s0)
2001366a:	393d                	jal	200132a8 <__metal_driver_riscv_plic0_set_priority>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
2001366c:	fec42703          	lw	a4,-20(s0)
20013670:	fd842783          	lw	a5,-40(s0)
20013674:	078a                	slli	a5,a5,0x2
20013676:	97ba                	add	a5,a5,a4
20013678:	20013737          	lui	a4,0x20013
2001367c:	3e070713          	addi	a4,a4,992 # 200133e0 <__metal_plic0_default_handler>
20013680:	c798                	sw	a4,8(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20013682:	fec42683          	lw	a3,-20(s0)
20013686:	fd842703          	lw	a4,-40(s0)
2001368a:	87ba                	mv	a5,a4
2001368c:	0786                	slli	a5,a5,0x1
2001368e:	97ba                	add	a5,a5,a4
20013690:	078e                	slli	a5,a5,0x3
20013692:	97b6                	add	a5,a5,a3
20013694:	fd042703          	lw	a4,-48(s0)
20013698:	0ee7a623          	sw	a4,236(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
2001369c:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:185
}
2001369e:	853e                	mv	a0,a5
200136a0:	50b2                	lw	ra,44(sp)
200136a2:	5422                	lw	s0,40(sp)
200136a4:	6145                	addi	sp,sp,48
200136a6:	8082                	ret

200136a8 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
200136a8:	7179                	addi	sp,sp,-48
200136aa:	d606                	sw	ra,44(sp)
200136ac:	d422                	sw	s0,40(sp)
200136ae:	1800                	addi	s0,sp,48
200136b0:	fca42e23          	sw	a0,-36(s0)
200136b4:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200136b8:	fdc42783          	lw	a5,-36(s0)
200136bc:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200136c0:	fdc42503          	lw	a0,-36(s0)
200136c4:	a29ff0ef          	jal	ra,200130ec <__metal_driver_sifive_plic0_num_interrupts>
200136c8:	872a                	mv	a4,a0
200136ca:	fd842783          	lw	a5,-40(s0)
200136ce:	00e7c463          	blt	a5,a4,200136d6 <__metal_driver_riscv_plic0_enable+0x2e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
200136d2:	57fd                	li	a5,-1
200136d4:	a821                	j	200136ec <__metal_driver_riscv_plic0_enable+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
200136d6:	8c6fe0ef          	jal	ra,2001179c <__metal_myhart_id>
200136da:	87aa                	mv	a5,a0
200136dc:	4685                	li	a3,1
200136de:	fd842603          	lw	a2,-40(s0)
200136e2:	85be                	mv	a1,a5
200136e4:	fec42503          	lw	a0,-20(s0)
200136e8:	3999                	jal	2001333e <__metal_plic0_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
200136ea:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:197
}
200136ec:	853e                	mv	a0,a5
200136ee:	50b2                	lw	ra,44(sp)
200136f0:	5422                	lw	s0,40(sp)
200136f2:	6145                	addi	sp,sp,48
200136f4:	8082                	ret

200136f6 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
200136f6:	7179                	addi	sp,sp,-48
200136f8:	d606                	sw	ra,44(sp)
200136fa:	d422                	sw	s0,40(sp)
200136fc:	1800                	addi	s0,sp,48
200136fe:	fca42e23          	sw	a0,-36(s0)
20013702:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20013706:	fdc42783          	lw	a5,-36(s0)
2001370a:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001370e:	fdc42503          	lw	a0,-36(s0)
20013712:	9dbff0ef          	jal	ra,200130ec <__metal_driver_sifive_plic0_num_interrupts>
20013716:	872a                	mv	a4,a0
20013718:	fd842783          	lw	a5,-40(s0)
2001371c:	00e7c463          	blt	a5,a4,20013724 <__metal_driver_riscv_plic0_disable+0x2e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20013720:	57fd                	li	a5,-1
20013722:	a821                	j	2001373a <__metal_driver_riscv_plic0_disable+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20013724:	878fe0ef          	jal	ra,2001179c <__metal_myhart_id>
20013728:	87aa                	mv	a5,a0
2001372a:	4681                	li	a3,0
2001372c:	fd842603          	lw	a2,-40(s0)
20013730:	85be                	mv	a1,a5
20013732:	fec42503          	lw	a0,-20(s0)
20013736:	3121                	jal	2001333e <__metal_plic0_enable>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20013738:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:208
}
2001373a:	853e                	mv	a0,a5
2001373c:	50b2                	lw	ra,44(sp)
2001373e:	5422                	lw	s0,40(sp)
20013740:	6145                	addi	sp,sp,48
20013742:	8082                	ret

20013744 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20013744:	1101                	addi	sp,sp,-32
20013746:	ce06                	sw	ra,28(sp)
20013748:	cc22                	sw	s0,24(sp)
2001374a:	1000                	addi	s0,sp,32
2001374c:	fea42623          	sw	a0,-20(s0)
20013750:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20013754:	848fe0ef          	jal	ra,2001179c <__metal_myhart_id>
20013758:	87aa                	mv	a5,a0
2001375a:	fe842603          	lw	a2,-24(s0)
2001375e:	85be                	mv	a1,a5
20013760:	fec42503          	lw	a0,-20(s0)
20013764:	34d1                	jal	20013228 <__metal_plic0_set_threshold>
20013766:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20013768:	853e                	mv	a0,a5
2001376a:	40f2                	lw	ra,28(sp)
2001376c:	4462                	lw	s0,24(sp)
2001376e:	6105                	addi	sp,sp,32
20013770:	8082                	ret

20013772 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20013772:	1101                	addi	sp,sp,-32
20013774:	ce06                	sw	ra,28(sp)
20013776:	cc22                	sw	s0,24(sp)
20013778:	1000                	addi	s0,sp,32
2001377a:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2001377e:	81efe0ef          	jal	ra,2001179c <__metal_myhart_id>
20013782:	87aa                	mv	a5,a0
20013784:	85be                	mv	a1,a5
20013786:	fec42503          	lw	a0,-20(s0)
2001378a:	34d5                	jal	2001326e <__metal_plic0_get_threshold>
2001378c:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:219
}
2001378e:	853e                	mv	a0,a5
20013790:	40f2                	lw	ra,28(sp)
20013792:	4462                	lw	s0,24(sp)
20013794:	6105                	addi	sp,sp,32
20013796:	8082                	ret

20013798 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20013798:	7179                	addi	sp,sp,-48
2001379a:	d606                	sw	ra,44(sp)
2001379c:	d422                	sw	s0,40(sp)
2001379e:	1800                	addi	s0,sp,48
200137a0:	fca42e23          	sw	a0,-36(s0)
200137a4:	fcb42c23          	sw	a1,-40(s0)
200137a8:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
200137ac:	fe042223          	sw	zero,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200137b0:	fdc42783          	lw	a5,-36(s0)
200137b4:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200137b8:	fdc42503          	lw	a0,-36(s0)
200137bc:	931ff0ef          	jal	ra,200130ec <__metal_driver_sifive_plic0_num_interrupts>
200137c0:	872a                	mv	a4,a0
200137c2:	fd442783          	lw	a5,-44(s0)
200137c6:	00e7c863          	blt	a5,a4,200137d6 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
200137ca:	57fd                	li	a5,-1
200137cc:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
200137d0:	fe442783          	lw	a5,-28(s0)
200137d4:	a891                	j	20013828 <__metal_driver_riscv_plic0_affinity_enable+0x90>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
200137d6:	fe042623          	sw	zero,-20(s0)
200137da:	a091                	j	2001381e <__metal_driver_riscv_plic0_affinity_enable+0x86>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
200137dc:	fec42783          	lw	a5,-20(s0)
200137e0:	c78d                	beqz	a5,2001380a <__metal_driver_riscv_plic0_affinity_enable+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
200137e2:	4685                	li	a3,1
200137e4:	fd442603          	lw	a2,-44(s0)
200137e8:	fec42583          	lw	a1,-20(s0)
200137ec:	fe842503          	lw	a0,-24(s0)
200137f0:	36b9                	jal	2001333e <__metal_plic0_enable>
200137f2:	87aa                	mv	a5,a0
200137f4:	0017f713          	andi	a4,a5,1
200137f8:	fec42783          	lw	a5,-20(s0)
200137fc:	00f71733          	sll	a4,a4,a5
20013800:	fe442783          	lw	a5,-28(s0)
20013804:	8fd9                	or	a5,a5,a4
20013806:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2001380a:	fec42783          	lw	a5,-20(s0)
2001380e:	0785                	addi	a5,a5,1
20013810:	fef42623          	sw	a5,-20(s0)
20013814:	fd842783          	lw	a5,-40(s0)
20013818:	8385                	srli	a5,a5,0x1
2001381a:	fcf42c23          	sw	a5,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
2001381e:	fd842783          	lw	a5,-40(s0)
20013822:	ffcd                	bnez	a5,200137dc <__metal_driver_riscv_plic0_affinity_enable+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20013824:	fe442783          	lw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20013828:	853e                	mv	a0,a5
2001382a:	50b2                	lw	ra,44(sp)
2001382c:	5422                	lw	s0,40(sp)
2001382e:	6145                	addi	sp,sp,48
20013830:	8082                	ret

20013832 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20013832:	7179                	addi	sp,sp,-48
20013834:	d606                	sw	ra,44(sp)
20013836:	d422                	sw	s0,40(sp)
20013838:	1800                	addi	s0,sp,48
2001383a:	fca42e23          	sw	a0,-36(s0)
2001383e:	fcb42c23          	sw	a1,-40(s0)
20013842:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20013846:	fe042223          	sw	zero,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2001384a:	fdc42783          	lw	a5,-36(s0)
2001384e:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20013852:	fdc42503          	lw	a0,-36(s0)
20013856:	897ff0ef          	jal	ra,200130ec <__metal_driver_sifive_plic0_num_interrupts>
2001385a:	872a                	mv	a4,a0
2001385c:	fd442783          	lw	a5,-44(s0)
20013860:	00e7c863          	blt	a5,a4,20013870 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20013864:	57fd                	li	a5,-1
20013866:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2001386a:	fe442783          	lw	a5,-28(s0)
2001386e:	a899                	j	200138c4 <__metal_driver_riscv_plic0_affinity_disable+0x92>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20013870:	fe042623          	sw	zero,-20(s0)
20013874:	a099                	j	200138ba <__metal_driver_riscv_plic0_affinity_disable+0x88>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20013876:	fec42783          	lw	a5,-20(s0)
2001387a:	c795                	beqz	a5,200138a6 <__metal_driver_riscv_plic0_affinity_disable+0x74>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
2001387c:	4681                	li	a3,0
2001387e:	fd442603          	lw	a2,-44(s0)
20013882:	fec42583          	lw	a1,-20(s0)
20013886:	fe842503          	lw	a0,-24(s0)
2001388a:	ab5ff0ef          	jal	ra,2001333e <__metal_plic0_enable>
2001388e:	87aa                	mv	a5,a0
20013890:	0017f713          	andi	a4,a5,1
20013894:	fec42783          	lw	a5,-20(s0)
20013898:	00f71733          	sll	a4,a4,a5
2001389c:	fe442783          	lw	a5,-28(s0)
200138a0:	8fd9                	or	a5,a5,a4
200138a2:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200138a6:	fec42783          	lw	a5,-20(s0)
200138aa:	0785                	addi	a5,a5,1
200138ac:	fef42623          	sw	a5,-20(s0)
200138b0:	fd842783          	lw	a5,-40(s0)
200138b4:	8385                	srli	a5,a5,0x1
200138b6:	fcf42c23          	sw	a5,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
200138ba:	fd842783          	lw	a5,-40(s0)
200138be:	ffc5                	bnez	a5,20013876 <__metal_driver_riscv_plic0_affinity_disable+0x44>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
200138c0:	fe442783          	lw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
200138c4:	853e                	mv	a0,a5
200138c6:	50b2                	lw	ra,44(sp)
200138c8:	5422                	lw	s0,40(sp)
200138ca:	6145                	addi	sp,sp,48
200138cc:	8082                	ret

200138ce <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
200138ce:	7179                	addi	sp,sp,-48
200138d0:	d606                	sw	ra,44(sp)
200138d2:	d422                	sw	s0,40(sp)
200138d4:	1800                	addi	s0,sp,48
200138d6:	fca42e23          	sw	a0,-36(s0)
200138da:	fcb42c23          	sw	a1,-40(s0)
200138de:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
200138e2:	fe042423          	sw	zero,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
200138e6:	fe042623          	sw	zero,-20(s0)
200138ea:	a091                	j	2001392e <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
200138ec:	fec42783          	lw	a5,-20(s0)
200138f0:	c78d                	beqz	a5,2001391a <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
200138f2:	fd442603          	lw	a2,-44(s0)
200138f6:	fec42583          	lw	a1,-20(s0)
200138fa:	fdc42503          	lw	a0,-36(s0)
200138fe:	92bff0ef          	jal	ra,20013228 <__metal_plic0_set_threshold>
20013902:	87aa                	mv	a5,a0
20013904:	0017f713          	andi	a4,a5,1
20013908:	fec42783          	lw	a5,-20(s0)
2001390c:	00f71733          	sll	a4,a4,a5
20013910:	fe842783          	lw	a5,-24(s0)
20013914:	8fd9                	or	a5,a5,a4
20013916:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2001391a:	fec42783          	lw	a5,-20(s0)
2001391e:	0785                	addi	a5,a5,1
20013920:	fef42623          	sw	a5,-20(s0)
20013924:	fd842783          	lw	a5,-40(s0)
20013928:	8385                	srli	a5,a5,0x1
2001392a:	fcf42c23          	sw	a5,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
2001392e:	fd842783          	lw	a5,-40(s0)
20013932:	ffcd                	bnez	a5,200138ec <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20013934:	fe842783          	lw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:281
}
20013938:	853e                	mv	a0,a5
2001393a:	50b2                	lw	ra,44(sp)
2001393c:	5422                	lw	s0,40(sp)
2001393e:	6145                	addi	sp,sp,48
20013940:	8082                	ret

20013942 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20013942:	1101                	addi	sp,sp,-32
20013944:	ce06                	sw	ra,28(sp)
20013946:	cc22                	sw	s0,24(sp)
20013948:	1000                	addi	s0,sp,32
2001394a:	fea42623          	sw	a0,-20(s0)
2001394e:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20013952:	fe842583          	lw	a1,-24(s0)
20013956:	fec42503          	lw	a0,-20(s0)
2001395a:	915ff0ef          	jal	ra,2001326e <__metal_plic0_get_threshold>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
2001395e:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/riscv_plic0.c:287
}
20013960:	853e                	mv	a0,a5
20013962:	40f2                	lw	ra,28(sp)
20013964:	4462                	lw	s0,24(sp)
20013966:	6105                	addi	sp,sp,32
20013968:	8082                	ret

2001396a <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2001396a:	1101                	addi	sp,sp,-32
2001396c:	ce22                	sw	s0,28(sp)
2001396e:	1000                	addi	s0,sp,32
20013970:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20013974:	800007b7          	lui	a5,0x80000
20013978:	01878793          	addi	a5,a5,24 # 80000018 <__global_pointer$+0xffffeda8>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1244
}
2001397c:	853e                	mv	a0,a5
2001397e:	4472                	lw	s0,28(sp)
20013980:	6105                	addi	sp,sp,32
20013982:	8082                	ret

20013984 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20013984:	1101                	addi	sp,sp,-32
20013986:	ce22                	sw	s0,28(sp)
20013988:	1000                	addi	s0,sp,32
2001398a:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2001398e:	82418793          	addi	a5,gp,-2012 # 80000a94 <__metal_dt_prci_10008000>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1249
}
20013992:	853e                	mv	a0,a5
20013994:	4472                	lw	s0,28(sp)
20013996:	6105                	addi	sp,sp,32
20013998:	8082                	ret

2001399a <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2001399a:	1101                	addi	sp,sp,-32
2001399c:	ce22                	sw	s0,28(sp)
2001399e:	1000                	addi	s0,sp,32
200139a0:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
200139a4:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1259
}
200139a6:	853e                	mv	a0,a5
200139a8:	4472                	lw	s0,28(sp)
200139aa:	6105                	addi	sp,sp,32
200139ac:	8082                	ret

200139ae <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
200139ae:	1141                	addi	sp,sp,-16
200139b0:	c622                	sw	s0,12(sp)
200139b2:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
200139b4:	83818793          	addi	a5,gp,-1992 # 80000aa8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1376
}
200139b8:	853e                	mv	a0,a5
200139ba:	4432                	lw	s0,12(sp)
200139bc:	0141                	addi	sp,sp,16
200139be:	8082                	ret

200139c0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
200139c0:	7139                	addi	sp,sp,-64
200139c2:	de06                	sw	ra,60(sp)
200139c4:	dc22                	sw	s0,56(sp)
200139c6:	0080                	addi	s0,sp,64
200139c8:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
200139cc:	fcc42503          	lw	a0,-52(s0)
200139d0:	3f69                	jal	2001396a <__metal_driver_sifive_fe310_g000_hfrosc_ref>
200139d2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
200139d6:	fcc42503          	lw	a0,-52(s0)
200139da:	37c1                	jal	2001399a <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
200139dc:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
200139e0:	fcc42503          	lw	a0,-52(s0)
200139e4:	3745                	jal	20013984 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
200139e6:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
200139ea:	37d1                	jal	200139ae <__metal_driver_sifive_fe310_g000_prci_vtable>
200139ec:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
200139f0:	fe042783          	lw	a5,-32(s0)
200139f4:	439c                	lw	a5,0(a5)
200139f6:	fe842583          	lw	a1,-24(s0)
200139fa:	fe442503          	lw	a0,-28(s0)
200139fe:	9782                	jalr	a5
20013a00:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20013a04:	fdc42703          	lw	a4,-36(s0)
20013a08:	400007b7          	lui	a5,0x40000
20013a0c:	8ff9                	and	a5,a5,a4
20013a0e:	e399                	bnez	a5,20013a14 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20013a10:	57fd                	li	a5,-1
20013a12:	a025                	j	20013a3a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20013a14:	fdc42783          	lw	a5,-36(s0)
20013a18:	0007c463          	bltz	a5,20013a20 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20013a1c:	57fd                	li	a5,-1
20013a1e:	a831                	j	20013a3a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20013a20:	fec42503          	lw	a0,-20(s0)
20013a24:	538010ef          	jal	ra,20014f5c <metal_clock_get_rate_hz>
20013a28:	87aa                	mv	a5,a0
20013a2a:	873e                	mv	a4,a5
20013a2c:	fdc42783          	lw	a5,-36(s0)
20013a30:	03f7f793          	andi	a5,a5,63
20013a34:	0785                	addi	a5,a5,1
20013a36:	02f757b3          	divu	a5,a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20013a3a:	853e                	mv	a0,a5
20013a3c:	50f2                	lw	ra,60(sp)
20013a3e:	5462                	lw	s0,56(sp)
20013a40:	6121                	addi	sp,sp,64
20013a42:	8082                	ret

20013a44 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20013a44:	1101                	addi	sp,sp,-32
20013a46:	ce06                	sw	ra,28(sp)
20013a48:	cc22                	sw	s0,24(sp)
20013a4a:	1000                	addi	s0,sp,32
20013a4c:	fea42623          	sw	a0,-20(s0)
20013a50:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20013a54:	fec42503          	lw	a0,-20(s0)
20013a58:	37a5                	jal	200139c0 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20013a5a:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20013a5c:	853e                	mv	a0,a5
20013a5e:	40f2                	lw	ra,28(sp)
20013a60:	4462                	lw	s0,24(sp)
20013a62:	6105                	addi	sp,sp,32
20013a64:	8082                	ret

20013a66 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1265
{
20013a66:	1101                	addi	sp,sp,-32
20013a68:	ce22                	sw	s0,28(sp)
20013a6a:	1000                	addi	s0,sp,32
20013a6c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20013a70:	800007b7          	lui	a5,0x80000
20013a74:	00c78793          	addi	a5,a5,12 # 8000000c <__global_pointer$+0xffffed9c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1267
}
20013a78:	853e                	mv	a0,a5
20013a7a:	4472                	lw	s0,28(sp)
20013a7c:	6105                	addi	sp,sp,32
20013a7e:	8082                	ret

20013a80 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1270
{
20013a80:	1101                	addi	sp,sp,-32
20013a82:	ce22                	sw	s0,28(sp)
20013a84:	1000                	addi	s0,sp,32
20013a86:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013a8a:	82418793          	addi	a5,gp,-2012 # 80000a94 <__metal_dt_prci_10008000>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1272
}
20013a8e:	853e                	mv	a0,a5
20013a90:	4472                	lw	s0,28(sp)
20013a92:	6105                	addi	sp,sp,32
20013a94:	8082                	ret

20013a96 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1275
{
20013a96:	1101                	addi	sp,sp,-32
20013a98:	ce22                	sw	s0,28(sp)
20013a9a:	1000                	addi	s0,sp,32
20013a9c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20013aa0:	4791                	li	a5,4
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1277
}
20013aa2:	853e                	mv	a0,a5
20013aa4:	4472                	lw	s0,28(sp)
20013aa6:	6105                	addi	sp,sp,32
20013aa8:	8082                	ret

20013aaa <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1374
{
20013aaa:	1141                	addi	sp,sp,-16
20013aac:	c622                	sw	s0,12(sp)
20013aae:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20013ab0:	83818793          	addi	a5,gp,-1992 # 80000aa8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1376
}
20013ab4:	853e                	mv	a0,a5
20013ab6:	4432                	lw	s0,12(sp)
20013ab8:	0141                	addi	sp,sp,16
20013aba:	8082                	ret

20013abc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20013abc:	7139                	addi	sp,sp,-64
20013abe:	de06                	sw	ra,60(sp)
20013ac0:	dc22                	sw	s0,56(sp)
20013ac2:	0080                	addi	s0,sp,64
20013ac4:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20013ac8:	fcc42503          	lw	a0,-52(s0)
20013acc:	3f69                	jal	20013a66 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20013ace:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20013ad2:	fcc42503          	lw	a0,-52(s0)
20013ad6:	37c1                	jal	20013a96 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20013ad8:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20013adc:	fcc42503          	lw	a0,-52(s0)
20013ae0:	3745                	jal	20013a80 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20013ae2:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013ae6:	37d1                	jal	20013aaa <__metal_driver_sifive_fe310_g000_prci_vtable>
20013ae8:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20013aec:	fe042783          	lw	a5,-32(s0)
20013af0:	439c                	lw	a5,0(a5)
20013af2:	fe842583          	lw	a1,-24(s0)
20013af6:	fe442503          	lw	a0,-28(s0)
20013afa:	9782                	jalr	a5
20013afc:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20013b00:	fdc42703          	lw	a4,-36(s0)
20013b04:	400007b7          	lui	a5,0x40000
20013b08:	8ff9                	and	a5,a5,a4
20013b0a:	e399                	bnez	a5,20013b10 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20013b0c:	57fd                	li	a5,-1
20013b0e:	a821                	j	20013b26 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20013b10:	fdc42783          	lw	a5,-36(s0)
20013b14:	0007c463          	bltz	a5,20013b1c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20013b18:	57fd                	li	a5,-1
20013b1a:	a031                	j	20013b26 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20013b1c:	fec42503          	lw	a0,-20(s0)
20013b20:	43c010ef          	jal	ra,20014f5c <metal_clock_get_rate_hz>
20013b24:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20013b26:	853e                	mv	a0,a5
20013b28:	50f2                	lw	ra,60(sp)
20013b2a:	5462                	lw	s0,56(sp)
20013b2c:	6121                	addi	sp,sp,64
20013b2e:	8082                	ret

20013b30 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20013b30:	1101                	addi	sp,sp,-32
20013b32:	ce06                	sw	ra,28(sp)
20013b34:	cc22                	sw	s0,24(sp)
20013b36:	1000                	addi	s0,sp,32
20013b38:	fea42623          	sw	a0,-20(s0)
20013b3c:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20013b40:	fec42503          	lw	a0,-20(s0)
20013b44:	3fa5                	jal	20013abc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20013b46:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20013b48:	853e                	mv	a0,a5
20013b4a:	40f2                	lw	ra,28(sp)
20013b4c:	4462                	lw	s0,24(sp)
20013b4e:	6105                	addi	sp,sp,32
20013b50:	8082                	ret

20013b52 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1326
{
20013b52:	1101                	addi	sp,sp,-32
20013b54:	ce22                	sw	s0,28(sp)
20013b56:	1000                	addi	s0,sp,32
20013b58:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20013b5c:	800017b7          	lui	a5,0x80001
20013b60:	9e878793          	addi	a5,a5,-1560 # 800009e8 <__global_pointer$+0xfffff778>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1328
}
20013b64:	853e                	mv	a0,a5
20013b66:	4472                	lw	s0,28(sp)
20013b68:	6105                	addi	sp,sp,32
20013b6a:	8082                	ret

20013b6c <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1331
{
20013b6c:	1101                	addi	sp,sp,-32
20013b6e:	ce22                	sw	s0,28(sp)
20013b70:	1000                	addi	s0,sp,32
20013b72:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20013b76:	800017b7          	lui	a5,0x80001
20013b7a:	9f478793          	addi	a5,a5,-1548 # 800009f4 <__global_pointer$+0xfffff784>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1333
}
20013b7e:	853e                	mv	a0,a5
20013b80:	4472                	lw	s0,28(sp)
20013b82:	6105                	addi	sp,sp,32
20013b84:	8082                	ret

20013b86 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1336
{
20013b86:	1101                	addi	sp,sp,-32
20013b88:	ce22                	sw	s0,28(sp)
20013b8a:	1000                	addi	s0,sp,32
20013b8c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013b90:	82418793          	addi	a5,gp,-2012 # 80000a94 <__metal_dt_prci_10008000>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1338
}
20013b94:	853e                	mv	a0,a5
20013b96:	4472                	lw	s0,28(sp)
20013b98:	6105                	addi	sp,sp,32
20013b9a:	8082                	ret

20013b9c <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1341
{
20013b9c:	1101                	addi	sp,sp,-32
20013b9e:	ce22                	sw	s0,28(sp)
20013ba0:	1000                	addi	s0,sp,32
20013ba2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20013ba6:	47b1                	li	a5,12
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1343
}
20013ba8:	853e                	mv	a0,a5
20013baa:	4472                	lw	s0,28(sp)
20013bac:	6105                	addi	sp,sp,32
20013bae:	8082                	ret

20013bb0 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1346
{
20013bb0:	1141                	addi	sp,sp,-16
20013bb2:	c622                	sw	s0,12(sp)
20013bb4:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20013bb6:	82418793          	addi	a5,gp,-2012 # 80000a94 <__metal_dt_prci_10008000>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1348
}
20013bba:	853e                	mv	a0,a5
20013bbc:	4432                	lw	s0,12(sp)
20013bbe:	0141                	addi	sp,sp,16
20013bc0:	8082                	ret

20013bc2 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1351
{
20013bc2:	1141                	addi	sp,sp,-16
20013bc4:	c622                	sw	s0,12(sp)
20013bc6:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20013bc8:	47a1                	li	a5,8
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1353
}
20013bca:	853e                	mv	a0,a5
20013bcc:	4432                	lw	s0,12(sp)
20013bce:	0141                	addi	sp,sp,16
20013bd0:	8082                	ret

20013bd2 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1356
{
20013bd2:	1141                	addi	sp,sp,-16
20013bd4:	c622                	sw	s0,12(sp)
20013bd6:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1357
		return 16000000;
20013bd8:	00f427b7          	lui	a5,0xf42
20013bdc:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1358
}
20013be0:	853e                	mv	a0,a5
20013be2:	4432                	lw	s0,12(sp)
20013be4:	0141                	addi	sp,sp,16
20013be6:	8082                	ret

20013be8 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1364
{
20013be8:	1141                	addi	sp,sp,-16
20013bea:	c622                	sw	s0,12(sp)
20013bec:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20013bee:	100087b7          	lui	a5,0x10008
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1366
}
20013bf2:	853e                	mv	a0,a5
20013bf4:	4432                	lw	s0,12(sp)
20013bf6:	0141                	addi	sp,sp,16
20013bf8:	8082                	ret

20013bfa <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1374
{
20013bfa:	1141                	addi	sp,sp,-16
20013bfc:	c622                	sw	s0,12(sp)
20013bfe:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20013c00:	83818793          	addi	a5,gp,-1992 # 80000aa8 <__metal_driver_vtable_sifive_fe310_g000_prci>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1376
}
20013c04:	853e                	mv	a0,a5
20013c06:	4432                	lw	s0,12(sp)
20013c08:	0141                	addi	sp,sp,16
20013c0a:	8082                	ret

20013c0c <get_pll_config_freq>:
get_pll_config_freq():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20013c0c:	1101                	addi	sp,sp,-32
20013c0e:	ce22                	sw	s0,28(sp)
20013c10:	1000                	addi	s0,sp,32
20013c12:	fea42623          	sw	a0,-20(s0)
20013c16:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20013c1a:	fe842783          	lw	a5,-24(s0)
20013c1e:	479c                	lw	a5,8(a5)
20013c20:	fec42703          	lw	a4,-20(s0)
20013c24:	00f76963          	bltu	a4,a5,20013c36 <get_pll_config_freq+0x2a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20013c28:	fe842783          	lw	a5,-24(s0)
20013c2c:	47dc                	lw	a5,12(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20013c2e:	fec42703          	lw	a4,-20(s0)
20013c32:	00e7f463          	bgeu	a5,a4,20013c3a <get_pll_config_freq+0x2e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20013c36:	57fd                	li	a5,-1
20013c38:	a829                	j	20013c52 <get_pll_config_freq+0x46>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20013c3a:	fe842783          	lw	a5,-24(s0)
20013c3e:	4398                	lw	a4,0(a5)
20013c40:	fec42783          	lw	a5,-20(s0)
20013c44:	02f70733          	mul	a4,a4,a5
20013c48:	fe842783          	lw	a5,-24(s0)
20013c4c:	43dc                	lw	a5,4(a5)
20013c4e:	02f757b3          	divu	a5,a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20013c52:	853e                	mv	a0,a5
20013c54:	4472                	lw	s0,28(sp)
20013c56:	6105                	addi	sp,sp,32
20013c58:	8082                	ret

20013c5a <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20013c5a:	7139                	addi	sp,sp,-64
20013c5c:	de06                	sw	ra,60(sp)
20013c5e:	dc22                	sw	s0,56(sp)
20013c60:	0080                	addi	s0,sp,64
20013c62:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20013c66:	fcc42783          	lw	a5,-52(s0)
20013c6a:	853e                	mv	a0,a5
20013c6c:	3701                	jal	20013b6c <__metal_driver_sifive_fe310_g000_pll_pllref>
20013c6e:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20013c72:	3785                	jal	20013bd2 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20013c74:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20013c78:	37a9                	jal	20013bc2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013c7a:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20013c7e:	37ad                	jal	20013be8 <__metal_driver_sifive_fe310_g000_prci_base>
20013c80:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20013c84:	fe042703          	lw	a4,-32(s0)
20013c88:	fe442783          	lw	a5,-28(s0)
20013c8c:	97ba                	add	a5,a5,a4
20013c8e:	fcf42e23          	sw	a5,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20013c92:	fcc42783          	lw	a5,-52(s0)
20013c96:	43dc                	lw	a5,4(a5)
20013c98:	853e                	mv	a0,a5
20013c9a:	282010ef          	jal	ra,20014f1c <_metal_clock_call_all_callbacks>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20013c9e:	fdc42783          	lw	a5,-36(s0)
20013ca2:	4398                	lw	a4,0(a5)
20013ca4:	67c1                	lui	a5,0x10
20013ca6:	8ff9                	and	a5,a5,a4
20013ca8:	cb91                	beqz	a5,20013cbc <__metal_driver_sifive_fe310_g000_pll_init+0x62>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20013caa:	fdc42783          	lw	a5,-36(s0)
20013cae:	4398                	lw	a4,0(a5)
20013cb0:	77c1                	lui	a5,0xffff0
20013cb2:	17fd                	addi	a5,a5,-1
20013cb4:	8f7d                	and	a4,a4,a5
20013cb6:	fdc42783          	lw	a5,-36(s0)
20013cba:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20013cbc:	fec42783          	lw	a5,-20(s0)
20013cc0:	cb91                	beqz	a5,20013cd4 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20013cc2:	fdc42783          	lw	a5,-36(s0)
20013cc6:	4398                	lw	a4,0(a5)
20013cc8:	000207b7          	lui	a5,0x20
20013ccc:	8f5d                	or	a4,a4,a5
20013cce:	fdc42783          	lw	a5,-36(s0)
20013cd2:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20013cd4:	fcc42783          	lw	a5,-52(s0)
20013cd8:	439c                	lw	a5,0(a5)
20013cda:	43d8                	lw	a4,4(a5)
20013cdc:	fcc42783          	lw	a5,-52(s0)
20013ce0:	fe842583          	lw	a1,-24(s0)
20013ce4:	853e                	mv	a0,a5
20013ce6:	9702                	jalr	a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20013ce8:	fcc42783          	lw	a5,-52(s0)
20013cec:	479c                	lw	a5,8(a5)
20013cee:	853e                	mv	a0,a5
20013cf0:	22c010ef          	jal	ra,20014f1c <_metal_clock_call_all_callbacks>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20013cf4:	0001                	nop
20013cf6:	50f2                	lw	ra,60(sp)
20013cf8:	5462                	lw	s0,56(sp)
20013cfa:	6121                	addi	sp,sp,64
20013cfc:	8082                	ret

20013cfe <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20013cfe:	711d                	addi	sp,sp,-96
20013d00:	ce86                	sw	ra,92(sp)
20013d02:	cca2                	sw	s0,88(sp)
20013d04:	1080                	addi	s0,sp,96
20013d06:	faa42623          	sw	a0,-84(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20013d0a:	fac42503          	lw	a0,-84(s0)
20013d0e:	3db9                	jal	20013b6c <__metal_driver_sifive_fe310_g000_pll_pllref>
20013d10:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20013d14:	fac42503          	lw	a0,-84(s0)
20013d18:	3d2d                	jal	20013b52 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20013d1a:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20013d1e:	fac42503          	lw	a0,-84(s0)
20013d22:	3545                	jal	20013bc2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20013d24:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20013d28:	fac42503          	lw	a0,-84(s0)
20013d2c:	3551                	jal	20013bb0 <__metal_driver_sifive_fe310_g000_pll_config_base>
20013d2e:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20013d32:	fac42503          	lw	a0,-84(s0)
20013d36:	359d                	jal	20013b9c <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20013d38:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20013d3c:	fac42503          	lw	a0,-84(s0)
20013d40:	3599                	jal	20013b86 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20013d42:	fca42c23          	sw	a0,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20013d46:	3d55                	jal	20013bfa <__metal_driver_sifive_fe310_g000_prci_vtable>
20013d48:	fca42a23          	sw	a0,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20013d4c:	fd442783          	lw	a5,-44(s0)
20013d50:	439c                	lw	a5,0(a5)
20013d52:	fe442583          	lw	a1,-28(s0)
20013d56:	fe042503          	lw	a0,-32(s0)
20013d5a:	9782                	jalr	a5
20013d5c:	fca42823          	sw	a0,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20013d60:	fd442783          	lw	a5,-44(s0)
20013d64:	439c                	lw	a5,0(a5)
20013d66:	fdc42583          	lw	a1,-36(s0)
20013d6a:	fd842503          	lw	a0,-40(s0)
20013d6e:	9782                	jalr	a5
20013d70:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20013d74:	fd042703          	lw	a4,-48(s0)
20013d78:	67c1                	lui	a5,0x10
20013d7a:	8f7d                	and	a4,a4,a5
20013d7c:	67c1                	lui	a5,0x10
20013d7e:	00f77863          	bgeu	a4,a5,20013d8e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20013d82:	fe842503          	lw	a0,-24(s0)
20013d86:	1d6010ef          	jal	ra,20014f5c <metal_clock_get_rate_hz>
20013d8a:	87aa                	mv	a5,a0
20013d8c:	a8e1                	j	20013e64 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20013d8e:	fd042703          	lw	a4,-48(s0)
20013d92:	000207b7          	lui	a5,0x20
20013d96:	8f7d                	and	a4,a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20013d98:	000207b7          	lui	a5,0x20
20013d9c:	00f76563          	bltu	a4,a5,20013da6 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20013da0:	fec42783          	lw	a5,-20(s0)
20013da4:	a019                	j	20013daa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20013da6:	fe842783          	lw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20013daa:	853e                	mv	a0,a5
20013dac:	1b0010ef          	jal	ra,20014f5c <metal_clock_get_rate_hz>
20013db0:	fca42423          	sw	a0,-56(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20013db4:	fd042703          	lw	a4,-48(s0)
20013db8:	000407b7          	lui	a5,0x40
20013dbc:	8f7d                	and	a4,a4,a5
20013dbe:	000407b7          	lui	a5,0x40
20013dc2:	00f76563          	bltu	a4,a5,20013dcc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20013dc6:	fc842783          	lw	a5,-56(s0)
20013dca:	a869                	j	20013e64 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20013dcc:	fd042783          	lw	a5,-48(s0)
20013dd0:	8b9d                	andi	a5,a5,7
20013dd2:	0785                	addi	a5,a5,1
20013dd4:	fcf42223          	sw	a5,-60(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20013dd8:	fd042783          	lw	a5,-48(s0)
20013ddc:	3f07f793          	andi	a5,a5,1008
20013de0:	8391                	srli	a5,a5,0x4
20013de2:	0785                	addi	a5,a5,1
20013de4:	0786                	slli	a5,a5,0x1
20013de6:	fcf42023          	sw	a5,-64(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20013dea:	fd042703          	lw	a4,-48(s0)
20013dee:	6785                	lui	a5,0x1
20013df0:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013df4:	8f7d                	and	a4,a4,a5
20013df6:	3ff00793          	li	a5,1023
20013dfa:	00e7e463          	bltu	a5,a4,20013e02 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20013dfe:	57fd                	li	a5,-1
20013e00:	a095                	j	20013e64 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20013e02:	fd042703          	lw	a4,-48(s0)
20013e06:	6785                	lui	a5,0x1
20013e08:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013e0c:	8ff9                	and	a5,a5,a4
20013e0e:	83a9                	srli	a5,a5,0xa
20013e10:	4705                	li	a4,1
20013e12:	00f717b3          	sll	a5,a4,a5
20013e16:	faf42e23          	sw	a5,-68(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20013e1a:	fc842703          	lw	a4,-56(s0)
20013e1e:	fc442783          	lw	a5,-60(s0)
20013e22:	02f74733          	div	a4,a4,a5
20013e26:	fc042783          	lw	a5,-64(s0)
20013e2a:	02f70733          	mul	a4,a4,a5
20013e2e:	fbc42783          	lw	a5,-68(s0)
20013e32:	02f747b3          	div	a5,a4,a5
20013e36:	faf42c23          	sw	a5,-72(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20013e3a:	fcc42783          	lw	a5,-52(s0)
20013e3e:	1007f713          	andi	a4,a5,256
20013e42:	0ff00793          	li	a5,255
20013e46:	00e7f563          	bgeu	a5,a4,20013e50 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20013e4a:	fb842783          	lw	a5,-72(s0)
20013e4e:	a819                	j	20013e64 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20013e50:	fb842703          	lw	a4,-72(s0)
20013e54:	fcc42783          	lw	a5,-52(s0)
20013e58:	03f7f793          	andi	a5,a5,63
20013e5c:	0785                	addi	a5,a5,1
20013e5e:	0786                	slli	a5,a5,0x1
20013e60:	02f757b3          	divu	a5,a4,a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20013e64:	853e                	mv	a0,a5
20013e66:	40f6                	lw	ra,92(sp)
20013e68:	4466                	lw	s0,88(sp)
20013e6a:	6125                	addi	sp,sp,96
20013e6c:	8082                	ret

20013e6e <find_closest_config>:
find_closest_config():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20013e6e:	7139                	addi	sp,sp,-64
20013e70:	de06                	sw	ra,60(sp)
20013e72:	dc22                	sw	s0,56(sp)
20013e74:	0080                	addi	s0,sp,64
20013e76:	fca42623          	sw	a0,-52(s0)
20013e7a:	fcb42423          	sw	a1,-56(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20013e7e:	57fd                	li	a5,-1
20013e80:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20013e84:	800007b7          	lui	a5,0x80000
20013e88:	fff7c793          	not	a5,a5
20013e8c:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20013e90:	04300793          	li	a5,67
20013e94:	fef42223          	sw	a5,-28(s0)
20013e98:	a0ad                	j	20013f02 <find_closest_config+0x94>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20013e9a:	fcc42683          	lw	a3,-52(s0)
20013e9e:	fe442783          	lw	a5,-28(s0)
20013ea2:	00579713          	slli	a4,a5,0x5
20013ea6:	200107b7          	lui	a5,0x20010
20013eaa:	55878793          	addi	a5,a5,1368 # 20010558 <pll_configs>
20013eae:	97ba                	add	a5,a5,a4
20013eb0:	85be                	mv	a1,a5
20013eb2:	8536                	mv	a0,a3
20013eb4:	3ba1                	jal	20013c0c <get_pll_config_freq>
20013eb6:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20013eba:	fe042703          	lw	a4,-32(s0)
20013ebe:	57fd                	li	a5,-1
20013ec0:	02f70c63          	beq	a4,a5,20013ef8 <find_closest_config+0x8a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20013ec4:	fe042703          	lw	a4,-32(s0)
20013ec8:	fc842783          	lw	a5,-56(s0)
20013ecc:	8f1d                	sub	a4,a4,a5
20013ece:	41f75793          	srai	a5,a4,0x1f
20013ed2:	8f3d                	xor	a4,a4,a5
20013ed4:	40f707b3          	sub	a5,a4,a5
20013ed8:	fcf42e23          	sw	a5,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20013edc:	fdc42703          	lw	a4,-36(s0)
20013ee0:	fe842783          	lw	a5,-24(s0)
20013ee4:	00f75a63          	bge	a4,a5,20013ef8 <find_closest_config+0x8a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20013ee8:	fe442783          	lw	a5,-28(s0)
20013eec:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20013ef0:	fdc42783          	lw	a5,-36(s0)
20013ef4:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20013ef8:	fe442783          	lw	a5,-28(s0)
20013efc:	17fd                	addi	a5,a5,-1
20013efe:	fef42223          	sw	a5,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20013f02:	fe442783          	lw	a5,-28(s0)
20013f06:	f807dae3          	bgez	a5,20013e9a <find_closest_config+0x2c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20013f0a:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20013f0e:	853e                	mv	a0,a5
20013f10:	50f2                	lw	ra,60(sp)
20013f12:	5462                	lw	s0,56(sp)
20013f14:	6121                	addi	sp,sp,64
20013f16:	8082                	ret

20013f18 <configure_pll>:
configure_pll():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20013f18:	7179                	addi	sp,sp,-48
20013f1a:	d606                	sw	ra,44(sp)
20013f1c:	d422                	sw	s0,40(sp)
20013f1e:	1800                	addi	s0,sp,48
20013f20:	fca42e23          	sw	a0,-36(s0)
20013f24:	fcb42c23          	sw	a1,-40(s0)
20013f28:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20013f2c:	fdc42783          	lw	a5,-36(s0)
20013f30:	439c                	lw	a5,0(a5)
20013f32:	ff87f713          	andi	a4,a5,-8
20013f36:	fdc42783          	lw	a5,-36(s0)
20013f3a:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20013f3c:	fdc42783          	lw	a5,-36(s0)
20013f40:	4398                	lw	a4,0(a5)
20013f42:	fd442783          	lw	a5,-44(s0)
20013f46:	4b9c                	lw	a5,16(a5)
20013f48:	8b9d                	andi	a5,a5,7
20013f4a:	8f5d                	or	a4,a4,a5
20013f4c:	fdc42783          	lw	a5,-36(s0)
20013f50:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20013f52:	fdc42783          	lw	a5,-36(s0)
20013f56:	439c                	lw	a5,0(a5)
20013f58:	c0f7f713          	andi	a4,a5,-1009
20013f5c:	fdc42783          	lw	a5,-36(s0)
20013f60:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20013f62:	fdc42783          	lw	a5,-36(s0)
20013f66:	4398                	lw	a4,0(a5)
20013f68:	fd442783          	lw	a5,-44(s0)
20013f6c:	4bdc                	lw	a5,20(a5)
20013f6e:	0792                	slli	a5,a5,0x4
20013f70:	3f07f793          	andi	a5,a5,1008
20013f74:	8f5d                	or	a4,a4,a5
20013f76:	fdc42783          	lw	a5,-36(s0)
20013f7a:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20013f7c:	fdc42783          	lw	a5,-36(s0)
20013f80:	4398                	lw	a4,0(a5)
20013f82:	77fd                	lui	a5,0xfffff
20013f84:	3ff78793          	addi	a5,a5,1023 # fffff3ff <__global_pointer$+0x7fffe18f>
20013f88:	8f7d                	and	a4,a4,a5
20013f8a:	fdc42783          	lw	a5,-36(s0)
20013f8e:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20013f90:	fdc42783          	lw	a5,-36(s0)
20013f94:	4398                	lw	a4,0(a5)
20013f96:	fd442783          	lw	a5,-44(s0)
20013f9a:	4f9c                	lw	a5,24(a5)
20013f9c:	00a79693          	slli	a3,a5,0xa
20013fa0:	6785                	lui	a5,0x1
20013fa2:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20013fa6:	8ff5                	and	a5,a5,a3
20013fa8:	8f5d                	or	a4,a4,a5
20013faa:	fdc42783          	lw	a5,-36(s0)
20013fae:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20013fb0:	fd442783          	lw	a5,-44(s0)
20013fb4:	4fdc                	lw	a5,28(a5)
20013fb6:	0207db63          	bgez	a5,20013fec <configure_pll+0xd4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20013fba:	fd842783          	lw	a5,-40(s0)
20013fbe:	439c                	lw	a5,0(a5)
20013fc0:	1007e713          	ori	a4,a5,256
20013fc4:	fd842783          	lw	a5,-40(s0)
20013fc8:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20013fca:	fd842783          	lw	a5,-40(s0)
20013fce:	439c                	lw	a5,0(a5)
20013fd0:	fc07f713          	andi	a4,a5,-64
20013fd4:	fd842783          	lw	a5,-40(s0)
20013fd8:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20013fda:	fd842783          	lw	a5,-40(s0)
20013fde:	439c                	lw	a5,0(a5)
20013fe0:	0017e713          	ori	a4,a5,1
20013fe4:	fd842783          	lw	a5,-40(s0)
20013fe8:	c398                	sw	a4,0(a5)
20013fea:	a82d                	j	20014024 <configure_pll+0x10c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20013fec:	fd842783          	lw	a5,-40(s0)
20013ff0:	439c                	lw	a5,0(a5)
20013ff2:	eff7f713          	andi	a4,a5,-257
20013ff6:	fd842783          	lw	a5,-40(s0)
20013ffa:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20013ffc:	fd842783          	lw	a5,-40(s0)
20014000:	439c                	lw	a5,0(a5)
20014002:	fc07f713          	andi	a4,a5,-64
20014006:	fd842783          	lw	a5,-40(s0)
2001400a:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2001400c:	fd842783          	lw	a5,-40(s0)
20014010:	4398                	lw	a4,0(a5)
20014012:	fd442783          	lw	a5,-44(s0)
20014016:	4fdc                	lw	a5,28(a5)
20014018:	03f7f793          	andi	a5,a5,63
2001401c:	8f5d                	or	a4,a4,a5
2001401e:	fd842783          	lw	a5,-40(s0)
20014022:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20014024:	fdc42783          	lw	a5,-36(s0)
20014028:	4398                	lw	a4,0(a5)
2001402a:	fffc07b7          	lui	a5,0xfffc0
2001402e:	17fd                	addi	a5,a5,-1
20014030:	8f7d                	and	a4,a4,a5
20014032:	fdc42783          	lw	a5,-36(s0)
20014036:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20014038:	fe040793          	addi	a5,s0,-32
2001403c:	863e                	mv	a2,a5
2001403e:	4585                	li	a1,1
20014040:	800017b7          	lui	a5,0x80001
20014044:	a7478513          	addi	a0,a5,-1420 # 80000a74 <__global_pointer$+0xfffff804>
20014048:	cdefd0ef          	jal	ra,20011526 <__metal_driver_riscv_clint0_command_request>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001404c:	fe042683          	lw	a3,-32(s0)
20014050:	fe442703          	lw	a4,-28(s0)
20014054:	4591                	li	a1,4
20014056:	4601                	li	a2,0
20014058:	00b687b3          	add	a5,a3,a1
2001405c:	853e                	mv	a0,a5
2001405e:	00d53533          	sltu	a0,a0,a3
20014062:	00c70833          	add	a6,a4,a2
20014066:	01050733          	add	a4,a0,a6
2001406a:	883a                	mv	a6,a4
2001406c:	fef42423          	sw	a5,-24(s0)
20014070:	ff042623          	sw	a6,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20014074:	a819                	j	2001408a <configure_pll+0x172>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20014076:	fe040793          	addi	a5,s0,-32
2001407a:	863e                	mv	a2,a5
2001407c:	4585                	li	a1,1
2001407e:	800017b7          	lui	a5,0x80001
20014082:	a7478513          	addi	a0,a5,-1420 # 80000a74 <__global_pointer$+0xfffff804>
20014086:	ca0fd0ef          	jal	ra,20011526 <__metal_driver_riscv_clint0_command_request>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2001408a:	fe042783          	lw	a5,-32(s0)
2001408e:	fe442803          	lw	a6,-28(s0)
20014092:	fec42703          	lw	a4,-20(s0)
20014096:	86c2                	mv	a3,a6
20014098:	00d76b63          	bltu	a4,a3,200140ae <configure_pll+0x196>
2001409c:	fec42703          	lw	a4,-20(s0)
200140a0:	86c2                	mv	a3,a6
200140a2:	fcd71ae3          	bne	a4,a3,20014076 <configure_pll+0x15e>
200140a6:	fe842703          	lw	a4,-24(s0)
200140aa:	fcf776e3          	bgeu	a4,a5,20014076 <configure_pll+0x15e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
200140ae:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
200140b0:	fdc42783          	lw	a5,-36(s0)
200140b4:	439c                	lw	a5,0(a5)
200140b6:	fe07dde3          	bgez	a5,200140b0 <configure_pll+0x198>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
200140ba:	0001                	nop
200140bc:	50b2                	lw	ra,44(sp)
200140be:	5422                	lw	s0,40(sp)
200140c0:	6145                	addi	sp,sp,48
200140c2:	8082                	ret

200140c4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
200140c4:	715d                	addi	sp,sp,-80
200140c6:	c686                	sw	ra,76(sp)
200140c8:	c4a2                	sw	s0,72(sp)
200140ca:	0880                	addi	s0,sp,80
200140cc:	faa42e23          	sw	a0,-68(s0)
200140d0:	fab42c23          	sw	a1,-72(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200140d4:	fbc42503          	lw	a0,-68(s0)
200140d8:	a95ff0ef          	jal	ra,20013b6c <__metal_driver_sifive_fe310_g000_pll_pllref>
200140dc:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200140e0:	fbc42503          	lw	a0,-68(s0)
200140e4:	a6fff0ef          	jal	ra,20013b52 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200140e8:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200140ec:	fbc42503          	lw	a0,-68(s0)
200140f0:	ad3ff0ef          	jal	ra,20013bc2 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200140f4:	fea42223          	sw	a0,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200140f8:	fbc42503          	lw	a0,-68(s0)
200140fc:	aa1ff0ef          	jal	ra,20013b9c <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20014100:	fea42023          	sw	a0,-32(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20014104:	ae5ff0ef          	jal	ra,20013be8 <__metal_driver_sifive_fe310_g000_prci_base>
20014108:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2001410c:	fdc42703          	lw	a4,-36(s0)
20014110:	fe442783          	lw	a5,-28(s0)
20014114:	97ba                	add	a5,a5,a4
20014116:	fcf42c23          	sw	a5,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
2001411a:	fdc42703          	lw	a4,-36(s0)
2001411e:	fe042783          	lw	a5,-32(s0)
20014122:	97ba                	add	a5,a5,a4
20014124:	fcf42a23          	sw	a5,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20014128:	fd842783          	lw	a5,-40(s0)
2001412c:	4398                	lw	a4,0(a5)
2001412e:	67c1                	lui	a5,0x10
20014130:	8ff9                	and	a5,a5,a4
20014132:	cb91                	beqz	a5,20014146 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20014134:	fd842783          	lw	a5,-40(s0)
20014138:	4398                	lw	a4,0(a5)
2001413a:	77c1                	lui	a5,0xffff0
2001413c:	17fd                	addi	a5,a5,-1
2001413e:	8f7d                	and	a4,a4,a5
20014140:	fd842783          	lw	a5,-40(s0)
20014144:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20014146:	fd842783          	lw	a5,-40(s0)
2001414a:	4398                	lw	a4,0(a5)
2001414c:	000207b7          	lui	a5,0x20
20014150:	8ff9                	and	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20014152:	c781                	beqz	a5,2001415a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20014154:	fec42783          	lw	a5,-20(s0)
20014158:	a019                	j	2001415e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
2001415a:	fe842783          	lw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
2001415e:	853e                	mv	a0,a5
20014160:	5fd000ef          	jal	ra,20014f5c <metal_clock_get_rate_hz>
20014164:	fca42823          	sw	a0,-48(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20014168:	fd042703          	lw	a4,-48(s0)
2001416c:	87ba                	mv	a5,a4
2001416e:	0786                	slli	a5,a5,0x1
20014170:	97ba                	add	a5,a5,a4
20014172:	41f7d713          	srai	a4,a5,0x1f
20014176:	8b0d                	andi	a4,a4,3
20014178:	97ba                	add	a5,a5,a4
2001417a:	8789                	srai	a5,a5,0x2
2001417c:	873e                	mv	a4,a5
2001417e:	fb842783          	lw	a5,-72(s0)
20014182:	02e7cb63          	blt	a5,a4,200141b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20014186:	fd042703          	lw	a4,-48(s0)
2001418a:	87ba                	mv	a5,a4
2001418c:	078a                	slli	a5,a5,0x2
2001418e:	97ba                	add	a5,a5,a4
20014190:	41f7d713          	srai	a4,a5,0x1f
20014194:	8b0d                	andi	a4,a4,3
20014196:	97ba                	add	a5,a5,a4
20014198:	8789                	srai	a5,a5,0x2
2001419a:	873e                	mv	a4,a5
2001419c:	fb842783          	lw	a5,-72(s0)
200141a0:	00f74c63          	blt	a4,a5,200141b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200141a4:	fd842783          	lw	a5,-40(s0)
200141a8:	4398                	lw	a4,0(a5)
200141aa:	000407b7          	lui	a5,0x40
200141ae:	8f5d                	or	a4,a4,a5
200141b0:	fd842783          	lw	a5,-40(s0)
200141b4:	c398                	sw	a4,0(a5)
200141b6:	a0b1                	j	20014202 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x13e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
200141b8:	fb842583          	lw	a1,-72(s0)
200141bc:	fd042503          	lw	a0,-48(s0)
200141c0:	317d                	jal	20013e6e <find_closest_config>
200141c2:	fca42623          	sw	a0,-52(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
200141c6:	fcc42703          	lw	a4,-52(s0)
200141ca:	57fd                	li	a5,-1
200141cc:	02f70263          	beq	a4,a5,200141f0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x12c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200141d0:	fcc42783          	lw	a5,-52(s0)
200141d4:	00579713          	slli	a4,a5,0x5
200141d8:	200107b7          	lui	a5,0x20010
200141dc:	55878793          	addi	a5,a5,1368 # 20010558 <pll_configs>
200141e0:	97ba                	add	a5,a5,a4
200141e2:	863e                	mv	a2,a5
200141e4:	fd442583          	lw	a1,-44(s0)
200141e8:	fd842503          	lw	a0,-40(s0)
200141ec:	3335                	jal	20013f18 <configure_pll>
200141ee:	a811                	j	20014202 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x13e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200141f0:	fd842783          	lw	a5,-40(s0)
200141f4:	4398                	lw	a4,0(a5)
200141f6:	000407b7          	lui	a5,0x40
200141fa:	8f5d                	or	a4,a4,a5
200141fc:	fd842783          	lw	a5,-40(s0)
20014200:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20014202:	fd842783          	lw	a5,-40(s0)
20014206:	4398                	lw	a4,0(a5)
20014208:	67c1                	lui	a5,0x10
2001420a:	8f5d                	or	a4,a4,a5
2001420c:	fd842783          	lw	a5,-40(s0)
20014210:	c398                	sw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20014212:	fbc42503          	lw	a0,-68(s0)
20014216:	ae9ff0ef          	jal	ra,20013cfe <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
2001421a:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2001421c:	853e                	mv	a0,a5
2001421e:	40b6                	lw	ra,76(sp)
20014220:	4426                	lw	s0,72(sp)
20014222:	6161                	addi	sp,sp,80
20014224:	8082                	ret

20014226 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1364
{
20014226:	1141                	addi	sp,sp,-16
20014228:	c622                	sw	s0,12(sp)
2001422a:	0800                	addi	s0,sp,16
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2001422c:	100087b7          	lui	a5,0x10008
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:1366
}
20014230:	853e                	mv	a0,a5
20014232:	4432                	lw	s0,12(sp)
20014234:	0141                	addi	sp,sp,16
20014236:	8082                	ret

20014238 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20014238:	7179                	addi	sp,sp,-48
2001423a:	d606                	sw	ra,44(sp)
2001423c:	d422                	sw	s0,40(sp)
2001423e:	1800                	addi	s0,sp,48
20014240:	fca42e23          	sw	a0,-36(s0)
20014244:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20014248:	3ff9                	jal	20014226 <__metal_driver_sifive_fe310_g000_prci_base>
2001424a:	87aa                	mv	a5,a0
2001424c:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20014250:	fd842703          	lw	a4,-40(s0)
20014254:	fec42783          	lw	a5,-20(s0)
20014258:	97ba                	add	a5,a5,a4
2001425a:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2001425c:	853e                	mv	a0,a5
2001425e:	50b2                	lw	ra,44(sp)
20014260:	5422                	lw	s0,40(sp)
20014262:	6145                	addi	sp,sp,48
20014264:	8082                	ret

20014266 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20014266:	7179                	addi	sp,sp,-48
20014268:	d606                	sw	ra,44(sp)
2001426a:	d422                	sw	s0,40(sp)
2001426c:	1800                	addi	s0,sp,48
2001426e:	fca42e23          	sw	a0,-36(s0)
20014272:	fcb42c23          	sw	a1,-40(s0)
20014276:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2001427a:	3775                	jal	20014226 <__metal_driver_sifive_fe310_g000_prci_base>
2001427c:	87aa                	mv	a5,a0
2001427e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20014282:	fd842703          	lw	a4,-40(s0)
20014286:	fec42783          	lw	a5,-20(s0)
2001428a:	97ba                	add	a5,a5,a4
2001428c:	873e                	mv	a4,a5
2001428e:	fd442783          	lw	a5,-44(s0)
20014292:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20014294:	853e                	mv	a0,a5
20014296:	50b2                	lw	ra,44(sp)
20014298:	5422                	lw	s0,40(sp)
2001429a:	6145                	addi	sp,sp,48
2001429c:	8082                	ret

2001429e <__metal_driver_sifive_gpio_led_gpio>:
__metal_driver_sifive_gpio_led_gpio():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:579
{
2001429e:	1101                	addi	sp,sp,-32
200142a0:	ce22                	sw	s0,28(sp)
200142a2:	1000                	addi	s0,sp,32
200142a4:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:580
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
200142a8:	fec42703          	lw	a4,-20(s0)
200142ac:	81818793          	addi	a5,gp,-2024 # 80000a88 <__metal_dt_led_0>
200142b0:	00f71563          	bne	a4,a5,200142ba <__metal_driver_sifive_gpio_led_gpio+0x1c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:581
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
200142b4:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200142b8:	a025                	j	200142e0 <__metal_driver_sifive_gpio_led_gpio+0x42>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:583
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
200142ba:	fec42703          	lw	a4,-20(s0)
200142be:	81c18793          	addi	a5,gp,-2020 # 80000a8c <__metal_dt_led_1>
200142c2:	00f71563          	bne	a4,a5,200142cc <__metal_driver_sifive_gpio_led_gpio+0x2e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:584
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
200142c6:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200142ca:	a819                	j	200142e0 <__metal_driver_sifive_gpio_led_gpio+0x42>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:586
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
200142cc:	fec42703          	lw	a4,-20(s0)
200142d0:	82018793          	addi	a5,gp,-2016 # 80000a90 <__metal_dt_led_2>
200142d4:	00f71563          	bne	a4,a5,200142de <__metal_driver_sifive_gpio_led_gpio+0x40>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:587
		return (struct metal_gpio *)&__metal_dt_gpio_10012000;
200142d8:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200142dc:	a011                	j	200142e0 <__metal_driver_sifive_gpio_led_gpio+0x42>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:590
		return NULL;
200142de:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:592
}
200142e0:	853e                	mv	a0,a5
200142e2:	4472                	lw	s0,28(sp)
200142e4:	6105                	addi	sp,sp,32
200142e6:	8082                	ret

200142e8 <__metal_driver_sifive_gpio_led_pin>:
__metal_driver_sifive_gpio_led_pin():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:595
{
200142e8:	1101                	addi	sp,sp,-32
200142ea:	ce22                	sw	s0,28(sp)
200142ec:	1000                	addi	s0,sp,32
200142ee:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:596
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
200142f2:	fec42703          	lw	a4,-20(s0)
200142f6:	81818793          	addi	a5,gp,-2024 # 80000a88 <__metal_dt_led_0>
200142fa:	00f71463          	bne	a4,a5,20014302 <__metal_driver_sifive_gpio_led_pin+0x1a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:597
		return 22;
200142fe:	47d9                	li	a5,22
20014300:	a015                	j	20014324 <__metal_driver_sifive_gpio_led_pin+0x3c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:599
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
20014302:	fec42703          	lw	a4,-20(s0)
20014306:	81c18793          	addi	a5,gp,-2020 # 80000a8c <__metal_dt_led_1>
2001430a:	00f71463          	bne	a4,a5,20014312 <__metal_driver_sifive_gpio_led_pin+0x2a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:600
		return 19;
2001430e:	47cd                	li	a5,19
20014310:	a811                	j	20014324 <__metal_driver_sifive_gpio_led_pin+0x3c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:602
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20014312:	fec42703          	lw	a4,-20(s0)
20014316:	82018793          	addi	a5,gp,-2016 # 80000a90 <__metal_dt_led_2>
2001431a:	00f71463          	bne	a4,a5,20014322 <__metal_driver_sifive_gpio_led_pin+0x3a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:603
		return 21;
2001431e:	47d5                	li	a5,21
20014320:	a011                	j	20014324 <__metal_driver_sifive_gpio_led_pin+0x3c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:606
		return 0;
20014322:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:608
}
20014324:	853e                	mv	a0,a5
20014326:	4472                	lw	s0,28(sp)
20014328:	6105                	addi	sp,sp,32
2001432a:	8082                	ret

2001432c <__metal_driver_sifive_gpio_led_label>:
__metal_driver_sifive_gpio_led_label():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:611
{
2001432c:	1101                	addi	sp,sp,-32
2001432e:	ce22                	sw	s0,28(sp)
20014330:	1000                	addi	s0,sp,32
20014332:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:612
	if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_0) {
20014336:	fec42703          	lw	a4,-20(s0)
2001433a:	81818793          	addi	a5,gp,-2024 # 80000a88 <__metal_dt_led_0>
2001433e:	00f71763          	bne	a4,a5,2001434c <__metal_driver_sifive_gpio_led_label+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:613
		return "LD0red";
20014342:	200117b7          	lui	a5,0x20011
20014346:	de478793          	addi	a5,a5,-540 # 20010de4 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2001434a:	a81d                	j	20014380 <__metal_driver_sifive_gpio_led_label+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:615
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_1) {
2001434c:	fec42703          	lw	a4,-20(s0)
20014350:	81c18793          	addi	a5,gp,-2020 # 80000a8c <__metal_dt_led_1>
20014354:	00f71763          	bne	a4,a5,20014362 <__metal_driver_sifive_gpio_led_label+0x36>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:616
		return "LD0green";
20014358:	200117b7          	lui	a5,0x20011
2001435c:	dec78793          	addi	a5,a5,-532 # 20010dec <__metal_driver_vtable_sifive_fe310_g000_pll+0x14>
20014360:	a005                	j	20014380 <__metal_driver_sifive_gpio_led_label+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:618
	else if ((uintptr_t)led == (uintptr_t)&__metal_dt_led_2) {
20014362:	fec42703          	lw	a4,-20(s0)
20014366:	82018793          	addi	a5,gp,-2016 # 80000a90 <__metal_dt_led_2>
2001436a:	00f71763          	bne	a4,a5,20014378 <__metal_driver_sifive_gpio_led_label+0x4c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:619
		return "LD0blue";
2001436e:	200117b7          	lui	a5,0x20011
20014372:	df878793          	addi	a5,a5,-520 # 20010df8 <__metal_driver_vtable_sifive_fe310_g000_pll+0x20>
20014376:	a029                	j	20014380 <__metal_driver_sifive_gpio_led_label+0x54>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:622
		return "";
20014378:	200117b7          	lui	a5,0x20011
2001437c:	e0078793          	addi	a5,a5,-512 # 20010e00 <__metal_driver_vtable_sifive_fe310_g000_pll+0x28>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:624
}
20014380:	853e                	mv	a0,a5
20014382:	4472                	lw	s0,28(sp)
20014384:	6105                	addi	sp,sp,32
20014386:	8082                	ret

20014388 <__metal_driver_led_exist>:
__metal_driver_led_exist():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:13
#include <metal/drivers/sifive_gpio-leds.h>
#include <metal/gpio.h>
#include <metal/machine.h>
#include <string.h>

int __metal_driver_led_exist(struct metal_led *led, char *label) {
20014388:	1101                	addi	sp,sp,-32
2001438a:	ce06                	sw	ra,28(sp)
2001438c:	cc22                	sw	s0,24(sp)
2001438e:	1000                	addi	s0,sp,32
20014390:	fea42623          	sw	a0,-20(s0)
20014394:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:14
    if (strcmp(__metal_driver_sifive_gpio_led_label(led), label) == 0) {
20014398:	fec42503          	lw	a0,-20(s0)
2001439c:	3f41                	jal	2001432c <__metal_driver_sifive_gpio_led_label>
2001439e:	87aa                	mv	a5,a0
200143a0:	fe842583          	lw	a1,-24(s0)
200143a4:	853e                	mv	a0,a5
200143a6:	17c010ef          	jal	ra,20015522 <strcmp>
200143aa:	87aa                	mv	a5,a0
200143ac:	e399                	bnez	a5,200143b2 <__metal_driver_led_exist+0x2a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:15
        return 1;
200143ae:	4785                	li	a5,1
200143b0:	a011                	j	200143b4 <__metal_driver_led_exist+0x2c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:17
    }
    return 0;
200143b2:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:18
}
200143b4:	853e                	mv	a0,a5
200143b6:	40f2                	lw	ra,28(sp)
200143b8:	4462                	lw	s0,24(sp)
200143ba:	6105                	addi	sp,sp,32
200143bc:	8082                	ret

200143be <__metal_driver_led_enable>:
__metal_driver_led_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:20

void __metal_driver_led_enable(struct metal_led *led) {
200143be:	7179                	addi	sp,sp,-48
200143c0:	d606                	sw	ra,44(sp)
200143c2:	d422                	sw	s0,40(sp)
200143c4:	1800                	addi	s0,sp,48
200143c6:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:24
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
200143ca:	fdc42503          	lw	a0,-36(s0)
200143ce:	3f29                	jal	200142e8 <__metal_driver_sifive_gpio_led_pin>
200143d0:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:25
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
200143d4:	fdc42503          	lw	a0,-36(s0)
200143d8:	35d9                	jal	2001429e <__metal_driver_sifive_gpio_led_gpio>
200143da:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:27

    if (gpio != NULL) {
200143de:	fe842783          	lw	a5,-24(s0)
200143e2:	cf89                	beqz	a5,200143fc <__metal_driver_led_enable+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:29
        /* Configure LED as output */
        metal_gpio_disable_input((struct metal_gpio *)gpio, pin);
200143e4:	fec42583          	lw	a1,-20(s0)
200143e8:	fe842503          	lw	a0,-24(s0)
200143ec:	44d000ef          	jal	ra,20015038 <metal_gpio_disable_input>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:30
        metal_gpio_enable_output((struct metal_gpio *)gpio, pin);
200143f0:	fec42583          	lw	a1,-20(s0)
200143f4:	fe842503          	lw	a0,-24(s0)
200143f8:	481000ef          	jal	ra,20015078 <metal_gpio_enable_output>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:32
    }
}
200143fc:	0001                	nop
200143fe:	50b2                	lw	ra,44(sp)
20014400:	5422                	lw	s0,40(sp)
20014402:	6145                	addi	sp,sp,48
20014404:	8082                	ret

20014406 <__metal_driver_led_on>:
__metal_driver_led_on():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:34

void __metal_driver_led_on(struct metal_led *led) {
20014406:	7179                	addi	sp,sp,-48
20014408:	d606                	sw	ra,44(sp)
2001440a:	d422                	sw	s0,40(sp)
2001440c:	1800                	addi	s0,sp,48
2001440e:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:38
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20014412:	fdc42503          	lw	a0,-36(s0)
20014416:	3dc9                	jal	200142e8 <__metal_driver_sifive_gpio_led_pin>
20014418:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:39
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
2001441c:	fdc42503          	lw	a0,-36(s0)
20014420:	3dbd                	jal	2001429e <__metal_driver_sifive_gpio_led_gpio>
20014422:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:41

    if (gpio != NULL) {
20014426:	fe842783          	lw	a5,-24(s0)
2001442a:	cb81                	beqz	a5,2001443a <__metal_driver_led_on+0x34>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:42
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 1);
2001442c:	4605                	li	a2,1
2001442e:	fec42583          	lw	a1,-20(s0)
20014432:	fe842503          	lw	a0,-24(s0)
20014436:	483000ef          	jal	ra,200150b8 <metal_gpio_set_pin>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:44
    }
}
2001443a:	0001                	nop
2001443c:	50b2                	lw	ra,44(sp)
2001443e:	5422                	lw	s0,40(sp)
20014440:	6145                	addi	sp,sp,48
20014442:	8082                	ret

20014444 <__metal_driver_led_off>:
__metal_driver_led_off():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:46

void __metal_driver_led_off(struct metal_led *led) {
20014444:	7179                	addi	sp,sp,-48
20014446:	d606                	sw	ra,44(sp)
20014448:	d422                	sw	s0,40(sp)
2001444a:	1800                	addi	s0,sp,48
2001444c:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:50
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
20014450:	fdc42503          	lw	a0,-36(s0)
20014454:	3d51                	jal	200142e8 <__metal_driver_sifive_gpio_led_pin>
20014456:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:51
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
2001445a:	fdc42503          	lw	a0,-36(s0)
2001445e:	3581                	jal	2001429e <__metal_driver_sifive_gpio_led_gpio>
20014460:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:53

    if (gpio != NULL) {
20014464:	fe842783          	lw	a5,-24(s0)
20014468:	cb81                	beqz	a5,20014478 <__metal_driver_led_off+0x34>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:54
        metal_gpio_set_pin((struct metal_gpio *)gpio, pin, 0);
2001446a:	4601                	li	a2,0
2001446c:	fec42583          	lw	a1,-20(s0)
20014470:	fe842503          	lw	a0,-24(s0)
20014474:	445000ef          	jal	ra,200150b8 <metal_gpio_set_pin>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:56
    }
}
20014478:	0001                	nop
2001447a:	50b2                	lw	ra,44(sp)
2001447c:	5422                	lw	s0,40(sp)
2001447e:	6145                	addi	sp,sp,48
20014480:	8082                	ret

20014482 <__metal_driver_led_toggle>:
__metal_driver_led_toggle():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:58

void __metal_driver_led_toggle(struct metal_led *led) {
20014482:	7179                	addi	sp,sp,-48
20014484:	d606                	sw	ra,44(sp)
20014486:	d422                	sw	s0,40(sp)
20014488:	1800                	addi	s0,sp,48
2001448a:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:62
    int pin;
    struct metal_gpio *gpio;

    pin = __metal_driver_sifive_gpio_led_pin(led);
2001448e:	fdc42503          	lw	a0,-36(s0)
20014492:	3d99                	jal	200142e8 <__metal_driver_sifive_gpio_led_pin>
20014494:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:63
    gpio = __metal_driver_sifive_gpio_led_gpio(led);
20014498:	fdc42503          	lw	a0,-36(s0)
2001449c:	3509                	jal	2001429e <__metal_driver_sifive_gpio_led_gpio>
2001449e:	fea42423          	sw	a0,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:65

    if (gpio != NULL) {
200144a2:	fe842783          	lw	a5,-24(s0)
200144a6:	c799                	beqz	a5,200144b4 <__metal_driver_led_toggle+0x32>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:66
        metal_gpio_toggle_pin((struct metal_gpio *)gpio, pin);
200144a8:	fec42583          	lw	a1,-20(s0)
200144ac:	fe842503          	lw	a0,-24(s0)
200144b0:	471000ef          	jal	ra,20015120 <metal_gpio_toggle_pin>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio-leds.c:68
    }
}
200144b4:	0001                	nop
200144b6:	50b2                	lw	ra,44(sp)
200144b8:	5422                	lw	s0,40(sp)
200144ba:	6145                	addi	sp,sp,48
200144bc:	8082                	ret

200144be <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:430
{
200144be:	1101                	addi	sp,sp,-32
200144c0:	ce22                	sw	s0,28(sp)
200144c2:	1000                	addi	s0,sp,32
200144c4:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200144c8:	fec42703          	lw	a4,-20(s0)
200144cc:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200144d0:	00f71563          	bne	a4,a5,200144da <__metal_driver_sifive_gpio0_base+0x1c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
200144d4:	100127b7          	lui	a5,0x10012
200144d8:	a011                	j	200144dc <__metal_driver_sifive_gpio0_base+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:435
		return 0;
200144da:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:437
}
200144dc:	853e                	mv	a0,a5
200144de:	4472                	lw	s0,28(sp)
200144e0:	6105                	addi	sp,sp,32
200144e2:	8082                	ret

200144e4 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:460
{
200144e4:	1101                	addi	sp,sp,-32
200144e6:	ce22                	sw	s0,28(sp)
200144e8:	1000                	addi	s0,sp,32
200144ea:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200144ee:	fec42703          	lw	a4,-20(s0)
200144f2:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200144f6:	00f71763          	bne	a4,a5,20014504 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
200144fa:	800007b7          	lui	a5,0x80000
200144fe:	41078793          	addi	a5,a5,1040 # 80000410 <__global_pointer$+0xfffff1a0>
20014502:	a011                	j	20014506 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:465
		return 0;
20014504:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:467
}
20014506:	853e                	mv	a0,a5
20014508:	4472                	lw	s0,28(sp)
2001450a:	6105                	addi	sp,sp,32
2001450c:	8082                	ret

2001450e <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:470
{
2001450e:	1101                	addi	sp,sp,-32
20014510:	ce22                	sw	s0,28(sp)
20014512:	1000                	addi	s0,sp,32
20014514:	fea42623          	sw	a0,-20(s0)
20014518:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2001451c:	fec42703          	lw	a4,-20(s0)
20014520:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014524:	00f71763          	bne	a4,a5,20014532 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:471 (discriminator 1)
20014528:	fe842783          	lw	a5,-24(s0)
2001452c:	e399                	bnez	a5,20014532 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:472
		return 8;
2001452e:	47a1                	li	a5,8
20014530:	ae15                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20014532:	fec42703          	lw	a4,-20(s0)
20014536:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001453a:	00f71963          	bne	a4,a5,2001454c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:474 (discriminator 1)
2001453e:	fe842703          	lw	a4,-24(s0)
20014542:	4785                	li	a5,1
20014544:	00f71463          	bne	a4,a5,2001454c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:475
		return 9;
20014548:	47a5                	li	a5,9
2001454a:	ae29                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2001454c:	fec42703          	lw	a4,-20(s0)
20014550:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014554:	00f71963          	bne	a4,a5,20014566 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:477 (discriminator 1)
20014558:	fe842703          	lw	a4,-24(s0)
2001455c:	4789                	li	a5,2
2001455e:	00f71463          	bne	a4,a5,20014566 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:478
		return 10;
20014562:	47a9                	li	a5,10
20014564:	a601                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20014566:	fec42703          	lw	a4,-20(s0)
2001456a:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001456e:	00f71963          	bne	a4,a5,20014580 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:480 (discriminator 1)
20014572:	fe842703          	lw	a4,-24(s0)
20014576:	478d                	li	a5,3
20014578:	00f71463          	bne	a4,a5,20014580 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:481
		return 11;
2001457c:	47ad                	li	a5,11
2001457e:	a4dd                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20014580:	fec42703          	lw	a4,-20(s0)
20014584:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014588:	00f71963          	bne	a4,a5,2001459a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:483 (discriminator 1)
2001458c:	fe842703          	lw	a4,-24(s0)
20014590:	4791                	li	a5,4
20014592:	00f71463          	bne	a4,a5,2001459a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:484
		return 12;
20014596:	47b1                	li	a5,12
20014598:	a4f1                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2001459a:	fec42703          	lw	a4,-20(s0)
2001459e:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200145a2:	00f71963          	bne	a4,a5,200145b4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:486 (discriminator 1)
200145a6:	fe842703          	lw	a4,-24(s0)
200145aa:	4795                	li	a5,5
200145ac:	00f71463          	bne	a4,a5,200145b4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:487
		return 13;
200145b0:	47b5                	li	a5,13
200145b2:	ac4d                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
200145b4:	fec42703          	lw	a4,-20(s0)
200145b8:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200145bc:	00f71963          	bne	a4,a5,200145ce <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:489 (discriminator 1)
200145c0:	fe842703          	lw	a4,-24(s0)
200145c4:	4799                	li	a5,6
200145c6:	00f71463          	bne	a4,a5,200145ce <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:490
		return 14;
200145ca:	47b9                	li	a5,14
200145cc:	ac61                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
200145ce:	fec42703          	lw	a4,-20(s0)
200145d2:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200145d6:	00f71963          	bne	a4,a5,200145e8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:492 (discriminator 1)
200145da:	fe842703          	lw	a4,-24(s0)
200145de:	479d                	li	a5,7
200145e0:	00f71463          	bne	a4,a5,200145e8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:493
		return 15;
200145e4:	47bd                	li	a5,15
200145e6:	acbd                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
200145e8:	fec42703          	lw	a4,-20(s0)
200145ec:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200145f0:	00f71963          	bne	a4,a5,20014602 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:495 (discriminator 1)
200145f4:	fe842703          	lw	a4,-24(s0)
200145f8:	47a1                	li	a5,8
200145fa:	00f71463          	bne	a4,a5,20014602 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:496
		return 16;
200145fe:	47c1                	li	a5,16
20014600:	a495                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20014602:	fec42703          	lw	a4,-20(s0)
20014606:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001460a:	00f71963          	bne	a4,a5,2001461c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:498 (discriminator 1)
2001460e:	fe842703          	lw	a4,-24(s0)
20014612:	47a5                	li	a5,9
20014614:	00f71463          	bne	a4,a5,2001461c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:499
		return 17;
20014618:	47c5                	li	a5,17
2001461a:	a4a9                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2001461c:	fec42703          	lw	a4,-20(s0)
20014620:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014624:	00f71963          	bne	a4,a5,20014636 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:501 (discriminator 1)
20014628:	fe842703          	lw	a4,-24(s0)
2001462c:	47a9                	li	a5,10
2001462e:	00f71463          	bne	a4,a5,20014636 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:502
		return 18;
20014632:	47c9                	li	a5,18
20014634:	ac05                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20014636:	fec42703          	lw	a4,-20(s0)
2001463a:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001463e:	00f71963          	bne	a4,a5,20014650 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:504 (discriminator 1)
20014642:	fe842703          	lw	a4,-24(s0)
20014646:	47ad                	li	a5,11
20014648:	00f71463          	bne	a4,a5,20014650 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:505
		return 19;
2001464c:	47cd                	li	a5,19
2001464e:	ac19                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20014650:	fec42703          	lw	a4,-20(s0)
20014654:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014658:	00f71963          	bne	a4,a5,2001466a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:507 (discriminator 1)
2001465c:	fe842703          	lw	a4,-24(s0)
20014660:	47b1                	li	a5,12
20014662:	00f71463          	bne	a4,a5,2001466a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:508
		return 20;
20014666:	47d1                	li	a5,20
20014668:	aaf5                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2001466a:	fec42703          	lw	a4,-20(s0)
2001466e:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014672:	00f71963          	bne	a4,a5,20014684 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:510 (discriminator 1)
20014676:	fe842703          	lw	a4,-24(s0)
2001467a:	47b5                	li	a5,13
2001467c:	00f71463          	bne	a4,a5,20014684 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:511
		return 21;
20014680:	47d5                	li	a5,21
20014682:	a2cd                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20014684:	fec42703          	lw	a4,-20(s0)
20014688:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001468c:	00f71963          	bne	a4,a5,2001469e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:513 (discriminator 1)
20014690:	fe842703          	lw	a4,-24(s0)
20014694:	47b9                	li	a5,14
20014696:	00f71463          	bne	a4,a5,2001469e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:514
		return 22;
2001469a:	47d9                	li	a5,22
2001469c:	a2e1                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
2001469e:	fec42703          	lw	a4,-20(s0)
200146a2:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200146a6:	00f71963          	bne	a4,a5,200146b8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:516 (discriminator 1)
200146aa:	fe842703          	lw	a4,-24(s0)
200146ae:	47bd                	li	a5,15
200146b0:	00f71463          	bne	a4,a5,200146b8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:517
		return 23;
200146b4:	47dd                	li	a5,23
200146b6:	a27d                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
200146b8:	fec42703          	lw	a4,-20(s0)
200146bc:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200146c0:	00f71963          	bne	a4,a5,200146d2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:519 (discriminator 1)
200146c4:	fe842703          	lw	a4,-24(s0)
200146c8:	47c1                	li	a5,16
200146ca:	00f71463          	bne	a4,a5,200146d2 <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:520
		return 24;
200146ce:	47e1                	li	a5,24
200146d0:	aa51                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
200146d2:	fec42703          	lw	a4,-20(s0)
200146d6:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200146da:	00f71963          	bne	a4,a5,200146ec <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:522 (discriminator 1)
200146de:	fe842703          	lw	a4,-24(s0)
200146e2:	47c5                	li	a5,17
200146e4:	00f71463          	bne	a4,a5,200146ec <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:523
		return 25;
200146e8:	47e5                	li	a5,25
200146ea:	aaad                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
200146ec:	fec42703          	lw	a4,-20(s0)
200146f0:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200146f4:	00f71963          	bne	a4,a5,20014706 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:525 (discriminator 1)
200146f8:	fe842703          	lw	a4,-24(s0)
200146fc:	47c9                	li	a5,18
200146fe:	00f71463          	bne	a4,a5,20014706 <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:526
		return 26;
20014702:	47e9                	li	a5,26
20014704:	a285                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
20014706:	fec42703          	lw	a4,-20(s0)
2001470a:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001470e:	00f71963          	bne	a4,a5,20014720 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:528 (discriminator 1)
20014712:	fe842703          	lw	a4,-24(s0)
20014716:	47cd                	li	a5,19
20014718:	00f71463          	bne	a4,a5,20014720 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:529
		return 27;
2001471c:	47ed                	li	a5,27
2001471e:	a299                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
20014720:	fec42703          	lw	a4,-20(s0)
20014724:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014728:	00f71963          	bne	a4,a5,2001473a <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:531 (discriminator 1)
2001472c:	fe842703          	lw	a4,-24(s0)
20014730:	47d1                	li	a5,20
20014732:	00f71463          	bne	a4,a5,2001473a <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:532
		return 28;
20014736:	47f1                	li	a5,28
20014738:	a235                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
2001473a:	fec42703          	lw	a4,-20(s0)
2001473e:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014742:	00f71963          	bne	a4,a5,20014754 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:534 (discriminator 1)
20014746:	fe842703          	lw	a4,-24(s0)
2001474a:	47d5                	li	a5,21
2001474c:	00f71463          	bne	a4,a5,20014754 <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:535
		return 29;
20014750:	47f5                	li	a5,29
20014752:	aa09                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
20014754:	fec42703          	lw	a4,-20(s0)
20014758:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001475c:	00f71963          	bne	a4,a5,2001476e <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:537 (discriminator 1)
20014760:	fe842703          	lw	a4,-24(s0)
20014764:	47d9                	li	a5,22
20014766:	00f71463          	bne	a4,a5,2001476e <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:538
		return 30;
2001476a:	47f9                	li	a5,30
2001476c:	a8e5                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
2001476e:	fec42703          	lw	a4,-20(s0)
20014772:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014776:	00f71963          	bne	a4,a5,20014788 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:540 (discriminator 1)
2001477a:	fe842703          	lw	a4,-24(s0)
2001477e:	47dd                	li	a5,23
20014780:	00f71463          	bne	a4,a5,20014788 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:541
		return 31;
20014784:	47fd                	li	a5,31
20014786:	a8f9                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20014788:	fec42703          	lw	a4,-20(s0)
2001478c:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014790:	00f71a63          	bne	a4,a5,200147a4 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:543 (discriminator 1)
20014794:	fe842703          	lw	a4,-24(s0)
20014798:	47e1                	li	a5,24
2001479a:	00f71563          	bne	a4,a5,200147a4 <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:544
		return 32;
2001479e:	02000793          	li	a5,32
200147a2:	a0c9                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
200147a4:	fec42703          	lw	a4,-20(s0)
200147a8:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200147ac:	00f71a63          	bne	a4,a5,200147c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:546 (discriminator 1)
200147b0:	fe842703          	lw	a4,-24(s0)
200147b4:	47e5                	li	a5,25
200147b6:	00f71563          	bne	a4,a5,200147c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:547
		return 33;
200147ba:	02100793          	li	a5,33
200147be:	a05d                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
200147c0:	fec42703          	lw	a4,-20(s0)
200147c4:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200147c8:	00f71a63          	bne	a4,a5,200147dc <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:549 (discriminator 1)
200147cc:	fe842703          	lw	a4,-24(s0)
200147d0:	47e9                	li	a5,26
200147d2:	00f71563          	bne	a4,a5,200147dc <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:550
		return 34;
200147d6:	02200793          	li	a5,34
200147da:	a069                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
200147dc:	fec42703          	lw	a4,-20(s0)
200147e0:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
200147e4:	00f71a63          	bne	a4,a5,200147f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:552 (discriminator 1)
200147e8:	fe842703          	lw	a4,-24(s0)
200147ec:	47ed                	li	a5,27
200147ee:	00f71563          	bne	a4,a5,200147f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:553
		return 35;
200147f2:	02300793          	li	a5,35
200147f6:	a0bd                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
200147f8:	fec42703          	lw	a4,-20(s0)
200147fc:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014800:	00f71a63          	bne	a4,a5,20014814 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:555 (discriminator 1)
20014804:	fe842703          	lw	a4,-24(s0)
20014808:	47f1                	li	a5,28
2001480a:	00f71563          	bne	a4,a5,20014814 <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:556
		return 36;
2001480e:	02400793          	li	a5,36
20014812:	a889                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
20014814:	fec42703          	lw	a4,-20(s0)
20014818:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
2001481c:	00f71963          	bne	a4,a5,2001482e <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:558 (discriminator 1)
20014820:	fe842703          	lw	a4,-24(s0)
20014824:	47f5                	li	a5,29
20014826:	00f71463          	bne	a4,a5,2001482e <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:559
		return 27;
2001482a:	47ed                	li	a5,27
2001482c:	a825                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
2001482e:	fec42703          	lw	a4,-20(s0)
20014832:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014836:	00f71963          	bne	a4,a5,20014848 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:561 (discriminator 1)
2001483a:	fe842703          	lw	a4,-24(s0)
2001483e:	47f9                	li	a5,30
20014840:	00f71463          	bne	a4,a5,20014848 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:562
		return 28;
20014844:	47f1                	li	a5,28
20014846:	a839                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20014848:	fec42703          	lw	a4,-20(s0)
2001484c:	81418793          	addi	a5,gp,-2028 # 80000a84 <__metal_dt_gpio_10012000>
20014850:	00f71963          	bne	a4,a5,20014862 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:564 (discriminator 1)
20014854:	fe842703          	lw	a4,-24(s0)
20014858:	47fd                	li	a5,31
2001485a:	00f71463          	bne	a4,a5,20014862 <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:565
		return 29;
2001485e:	47f5                	li	a5,29
20014860:	a011                	j	20014864 <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:568
		return 0;
20014862:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:570
}
20014864:	853e                	mv	a0,a5
20014866:	4472                	lw	s0,28(sp)
20014868:	6105                	addi	sp,sp,32
2001486a:	8082                	ret

2001486c <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
2001486c:	7179                	addi	sp,sp,-48
2001486e:	d606                	sw	ra,44(sp)
20014870:	d422                	sw	s0,40(sp)
20014872:	1800                	addi	s0,sp,48
20014874:	fca42e23          	sw	a0,-36(s0)
20014878:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001487c:	fdc42503          	lw	a0,-36(s0)
20014880:	c3fff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014884:	87aa                	mv	a5,a0
20014886:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2001488a:	fec42783          	lw	a5,-20(s0)
2001488e:	0791                	addi	a5,a5,4
20014890:	4398                	lw	a4,0(a5)
20014892:	fd842783          	lw	a5,-40(s0)
20014896:	fec42683          	lw	a3,-20(s0)
2001489a:	0691                	addi	a3,a3,4
2001489c:	8fd9                	or	a5,a5,a4
2001489e:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
200148a0:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:20
}
200148a2:	853e                	mv	a0,a5
200148a4:	50b2                	lw	ra,44(sp)
200148a6:	5422                	lw	s0,40(sp)
200148a8:	6145                	addi	sp,sp,48
200148aa:	8082                	ret

200148ac <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
200148ac:	7179                	addi	sp,sp,-48
200148ae:	d606                	sw	ra,44(sp)
200148b0:	d422                	sw	s0,40(sp)
200148b2:	1800                	addi	s0,sp,48
200148b4:	fca42e23          	sw	a0,-36(s0)
200148b8:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200148bc:	fdc42503          	lw	a0,-36(s0)
200148c0:	bffff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
200148c4:	87aa                	mv	a5,a0
200148c6:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
200148ca:	fec42783          	lw	a5,-20(s0)
200148ce:	0791                	addi	a5,a5,4
200148d0:	439c                	lw	a5,0(a5)
200148d2:	fd842703          	lw	a4,-40(s0)
200148d6:	fff74713          	not	a4,a4
200148da:	86ba                	mv	a3,a4
200148dc:	fec42703          	lw	a4,-20(s0)
200148e0:	0711                	addi	a4,a4,4
200148e2:	8ff5                	and	a5,a5,a3
200148e4:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
200148e6:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:30
}
200148e8:	853e                	mv	a0,a5
200148ea:	50b2                	lw	ra,44(sp)
200148ec:	5422                	lw	s0,40(sp)
200148ee:	6145                	addi	sp,sp,48
200148f0:	8082                	ret

200148f2 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
200148f2:	7179                	addi	sp,sp,-48
200148f4:	d606                	sw	ra,44(sp)
200148f6:	d422                	sw	s0,40(sp)
200148f8:	1800                	addi	s0,sp,48
200148fa:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200148fe:	fdc42503          	lw	a0,-36(s0)
20014902:	bbdff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014906:	87aa                	mv	a5,a0
20014908:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
2001490c:	fec42783          	lw	a5,-20(s0)
20014910:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20014912:	853e                	mv	a0,a5
20014914:	50b2                	lw	ra,44(sp)
20014916:	5422                	lw	s0,40(sp)
20014918:	6145                	addi	sp,sp,48
2001491a:	8082                	ret

2001491c <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
2001491c:	7179                	addi	sp,sp,-48
2001491e:	d606                	sw	ra,44(sp)
20014920:	d422                	sw	s0,40(sp)
20014922:	1800                	addi	s0,sp,48
20014924:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014928:	fdc42503          	lw	a0,-36(s0)
2001492c:	b93ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014930:	87aa                	mv	a5,a0
20014932:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20014936:	fec42783          	lw	a5,-20(s0)
2001493a:	07b1                	addi	a5,a5,12
2001493c:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2001493e:	853e                	mv	a0,a5
20014940:	50b2                	lw	ra,44(sp)
20014942:	5422                	lw	s0,40(sp)
20014944:	6145                	addi	sp,sp,48
20014946:	8082                	ret

20014948 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20014948:	7179                	addi	sp,sp,-48
2001494a:	d606                	sw	ra,44(sp)
2001494c:	d422                	sw	s0,40(sp)
2001494e:	1800                	addi	s0,sp,48
20014950:	fca42e23          	sw	a0,-36(s0)
20014954:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014958:	fdc42503          	lw	a0,-36(s0)
2001495c:	b63ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014960:	87aa                	mv	a5,a0
20014962:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20014966:	fec42783          	lw	a5,-20(s0)
2001496a:	07a1                	addi	a5,a5,8
2001496c:	439c                	lw	a5,0(a5)
2001496e:	fd842703          	lw	a4,-40(s0)
20014972:	fff74713          	not	a4,a4
20014976:	86ba                	mv	a3,a4
20014978:	fec42703          	lw	a4,-20(s0)
2001497c:	0721                	addi	a4,a4,8
2001497e:	8ff5                	and	a5,a5,a3
20014980:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20014982:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20014984:	853e                	mv	a0,a5
20014986:	50b2                	lw	ra,44(sp)
20014988:	5422                	lw	s0,40(sp)
2001498a:	6145                	addi	sp,sp,48
2001498c:	8082                	ret

2001498e <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2001498e:	7179                	addi	sp,sp,-48
20014990:	d606                	sw	ra,44(sp)
20014992:	d422                	sw	s0,40(sp)
20014994:	1800                	addi	s0,sp,48
20014996:	fca42e23          	sw	a0,-36(s0)
2001499a:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2001499e:	fdc42503          	lw	a0,-36(s0)
200149a2:	b1dff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
200149a6:	87aa                	mv	a5,a0
200149a8:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
200149ac:	fec42783          	lw	a5,-20(s0)
200149b0:	07a1                	addi	a5,a5,8
200149b2:	4398                	lw	a4,0(a5)
200149b4:	fd842783          	lw	a5,-40(s0)
200149b8:	fec42683          	lw	a3,-20(s0)
200149bc:	06a1                	addi	a3,a3,8
200149be:	8fd9                	or	a5,a5,a4
200149c0:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
200149c2:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:64
}
200149c4:	853e                	mv	a0,a5
200149c6:	50b2                	lw	ra,44(sp)
200149c8:	5422                	lw	s0,40(sp)
200149ca:	6145                	addi	sp,sp,48
200149cc:	8082                	ret

200149ce <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
200149ce:	7179                	addi	sp,sp,-48
200149d0:	d606                	sw	ra,44(sp)
200149d2:	d422                	sw	s0,40(sp)
200149d4:	1800                	addi	s0,sp,48
200149d6:	fca42e23          	sw	a0,-36(s0)
200149da:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200149de:	fdc42503          	lw	a0,-36(s0)
200149e2:	addff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
200149e6:	87aa                	mv	a5,a0
200149e8:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
200149ec:	fec42783          	lw	a5,-20(s0)
200149f0:	07b1                	addi	a5,a5,12
200149f2:	4398                	lw	a4,0(a5)
200149f4:	fd842783          	lw	a5,-40(s0)
200149f8:	fec42683          	lw	a3,-20(s0)
200149fc:	06b1                	addi	a3,a3,12
200149fe:	8fd9                	or	a5,a5,a4
20014a00:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20014a02:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20014a04:	853e                	mv	a0,a5
20014a06:	50b2                	lw	ra,44(sp)
20014a08:	5422                	lw	s0,40(sp)
20014a0a:	6145                	addi	sp,sp,48
20014a0c:	8082                	ret

20014a0e <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20014a0e:	7179                	addi	sp,sp,-48
20014a10:	d606                	sw	ra,44(sp)
20014a12:	d422                	sw	s0,40(sp)
20014a14:	1800                	addi	s0,sp,48
20014a16:	fca42e23          	sw	a0,-36(s0)
20014a1a:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014a1e:	fdc42503          	lw	a0,-36(s0)
20014a22:	a9dff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014a26:	87aa                	mv	a5,a0
20014a28:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20014a2c:	fec42783          	lw	a5,-20(s0)
20014a30:	07b1                	addi	a5,a5,12
20014a32:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20014a34:	fd842703          	lw	a4,-40(s0)
20014a38:	fff74713          	not	a4,a4
20014a3c:	86ba                	mv	a3,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20014a3e:	fec42703          	lw	a4,-20(s0)
20014a42:	0731                	addi	a4,a4,12
20014a44:	8ff5                	and	a5,a5,a3
20014a46:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20014a48:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20014a4a:	853e                	mv	a0,a5
20014a4c:	50b2                	lw	ra,44(sp)
20014a4e:	5422                	lw	s0,40(sp)
20014a50:	6145                	addi	sp,sp,48
20014a52:	8082                	ret

20014a54 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20014a54:	7179                	addi	sp,sp,-48
20014a56:	d606                	sw	ra,44(sp)
20014a58:	d422                	sw	s0,40(sp)
20014a5a:	1800                	addi	s0,sp,48
20014a5c:	fca42e23          	sw	a0,-36(s0)
20014a60:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014a64:	fdc42503          	lw	a0,-36(s0)
20014a68:	a57ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014a6c:	87aa                	mv	a5,a0
20014a6e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20014a72:	fec42783          	lw	a5,-20(s0)
20014a76:	07b1                	addi	a5,a5,12
20014a78:	4398                	lw	a4,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20014a7a:	fd842783          	lw	a5,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20014a7e:	fec42683          	lw	a3,-20(s0)
20014a82:	06b1                	addi	a3,a3,12
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20014a84:	8fb9                	xor	a5,a5,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20014a86:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20014a88:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20014a8a:	853e                	mv	a0,a5
20014a8c:	50b2                	lw	ra,44(sp)
20014a8e:	5422                	lw	s0,40(sp)
20014a90:	6145                	addi	sp,sp,48
20014a92:	8082                	ret

20014a94 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20014a94:	7179                	addi	sp,sp,-48
20014a96:	d606                	sw	ra,44(sp)
20014a98:	d422                	sw	s0,40(sp)
20014a9a:	1800                	addi	s0,sp,48
20014a9c:	fca42e23          	sw	a0,-36(s0)
20014aa0:	fcb42c23          	sw	a1,-40(s0)
20014aa4:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014aa8:	fdc42503          	lw	a0,-36(s0)
20014aac:	a13ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014ab0:	87aa                	mv	a5,a0
20014ab2:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20014ab6:	fec42783          	lw	a5,-20(s0)
20014aba:	03c78793          	addi	a5,a5,60
20014abe:	4398                	lw	a4,0(a5)
20014ac0:	fd842783          	lw	a5,-40(s0)
20014ac4:	fec42683          	lw	a3,-20(s0)
20014ac8:	03c68693          	addi	a3,a3,60
20014acc:	8fd9                	or	a5,a5,a4
20014ace:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20014ad0:	fec42783          	lw	a5,-20(s0)
20014ad4:	03878793          	addi	a5,a5,56
20014ad8:	4398                	lw	a4,0(a5)
20014ada:	fd442783          	lw	a5,-44(s0)
20014ade:	fec42683          	lw	a3,-20(s0)
20014ae2:	03868693          	addi	a3,a3,56
20014ae6:	8fd9                	or	a5,a5,a4
20014ae8:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20014aea:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20014aec:	853e                	mv	a0,a5
20014aee:	50b2                	lw	ra,44(sp)
20014af0:	5422                	lw	s0,40(sp)
20014af2:	6145                	addi	sp,sp,48
20014af4:	8082                	ret

20014af6 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20014af6:	7179                	addi	sp,sp,-48
20014af8:	d606                	sw	ra,44(sp)
20014afa:	d422                	sw	s0,40(sp)
20014afc:	1800                	addi	s0,sp,48
20014afe:	fca42e23          	sw	a0,-36(s0)
20014b02:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014b06:	fdc42503          	lw	a0,-36(s0)
20014b0a:	9b5ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014b0e:	87aa                	mv	a5,a0
20014b10:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20014b14:	fec42783          	lw	a5,-20(s0)
20014b18:	03878793          	addi	a5,a5,56
20014b1c:	439c                	lw	a5,0(a5)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20014b1e:	fd842703          	lw	a4,-40(s0)
20014b22:	fff74713          	not	a4,a4
20014b26:	86ba                	mv	a3,a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20014b28:	fec42703          	lw	a4,-20(s0)
20014b2c:	03870713          	addi	a4,a4,56
20014b30:	8ff5                	and	a5,a5,a3
20014b32:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20014b34:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20014b36:	853e                	mv	a0,a5
20014b38:	50b2                	lw	ra,44(sp)
20014b3a:	5422                	lw	s0,40(sp)
20014b3c:	6145                	addi	sp,sp,48
20014b3e:	8082                	ret

20014b40 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20014b40:	7179                	addi	sp,sp,-48
20014b42:	d606                	sw	ra,44(sp)
20014b44:	d422                	sw	s0,40(sp)
20014b46:	1800                	addi	s0,sp,48
20014b48:	fca42e23          	sw	a0,-36(s0)
20014b4c:	fcb42c23          	sw	a1,-40(s0)
20014b50:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014b54:	fdc42503          	lw	a0,-36(s0)
20014b58:	967ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014b5c:	87aa                	mv	a5,a0
20014b5e:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:124

    switch (intr_type) {
20014b62:	fd442703          	lw	a4,-44(s0)
20014b66:	479d                	li	a5,7
20014b68:	1ce7e963          	bltu	a5,a4,20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
20014b6c:	fd442783          	lw	a5,-44(s0)
20014b70:	00279713          	slli	a4,a5,0x2
20014b74:	200117b7          	lui	a5,0x20011
20014b78:	e1878793          	addi	a5,a5,-488 # 20010e18 <__metal_driver_vtable_sifive_led+0x14>
20014b7c:	97ba                	add	a5,a5,a4
20014b7e:	439c                	lw	a5,0(a5)
20014b80:	8782                	jr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:127
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20014b82:	fec42783          	lw	a5,-20(s0)
20014b86:	07e1                	addi	a5,a5,24
20014b88:	439c                	lw	a5,0(a5)
20014b8a:	fd842703          	lw	a4,-40(s0)
20014b8e:	fff74713          	not	a4,a4
20014b92:	86ba                	mv	a3,a4
20014b94:	fec42703          	lw	a4,-20(s0)
20014b98:	0761                	addi	a4,a4,24
20014b9a:	8ff5                	and	a5,a5,a3
20014b9c:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20014b9e:	fec42783          	lw	a5,-20(s0)
20014ba2:	02078793          	addi	a5,a5,32
20014ba6:	439c                	lw	a5,0(a5)
20014ba8:	fd842703          	lw	a4,-40(s0)
20014bac:	fff74713          	not	a4,a4
20014bb0:	86ba                	mv	a3,a4
20014bb2:	fec42703          	lw	a4,-20(s0)
20014bb6:	02070713          	addi	a4,a4,32
20014bba:	8ff5                	and	a5,a5,a3
20014bbc:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20014bbe:	fec42783          	lw	a5,-20(s0)
20014bc2:	02878793          	addi	a5,a5,40
20014bc6:	439c                	lw	a5,0(a5)
20014bc8:	fd842703          	lw	a4,-40(s0)
20014bcc:	fff74713          	not	a4,a4
20014bd0:	86ba                	mv	a3,a4
20014bd2:	fec42703          	lw	a4,-20(s0)
20014bd6:	02870713          	addi	a4,a4,40
20014bda:	8ff5                	and	a5,a5,a3
20014bdc:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20014bde:	fec42783          	lw	a5,-20(s0)
20014be2:	03078793          	addi	a5,a5,48
20014be6:	439c                	lw	a5,0(a5)
20014be8:	fd842703          	lw	a4,-40(s0)
20014bec:	fff74713          	not	a4,a4
20014bf0:	86ba                	mv	a3,a4
20014bf2:	fec42703          	lw	a4,-20(s0)
20014bf6:	03070713          	addi	a4,a4,48
20014bfa:	8ff5                	and	a5,a5,a3
20014bfc:	c31c                	sw	a5,0(a4)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20014bfe:	aa35                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20014c00:	fec42783          	lw	a5,-20(s0)
20014c04:	07e1                	addi	a5,a5,24
20014c06:	4398                	lw	a4,0(a5)
20014c08:	fd842783          	lw	a5,-40(s0)
20014c0c:	fec42683          	lw	a3,-20(s0)
20014c10:	06e1                	addi	a3,a3,24
20014c12:	8fd9                	or	a5,a5,a4
20014c14:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20014c16:	a215                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20014c18:	fec42783          	lw	a5,-20(s0)
20014c1c:	02078793          	addi	a5,a5,32
20014c20:	4398                	lw	a4,0(a5)
20014c22:	fd842783          	lw	a5,-40(s0)
20014c26:	fec42683          	lw	a3,-20(s0)
20014c2a:	02068693          	addi	a3,a3,32
20014c2e:	8fd9                	or	a5,a5,a4
20014c30:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20014c32:	a221                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20014c34:	fec42783          	lw	a5,-20(s0)
20014c38:	07e1                	addi	a5,a5,24
20014c3a:	4398                	lw	a4,0(a5)
20014c3c:	fd842783          	lw	a5,-40(s0)
20014c40:	fec42683          	lw	a3,-20(s0)
20014c44:	06e1                	addi	a3,a3,24
20014c46:	8fd9                	or	a5,a5,a4
20014c48:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20014c4a:	fec42783          	lw	a5,-20(s0)
20014c4e:	02078793          	addi	a5,a5,32
20014c52:	4398                	lw	a4,0(a5)
20014c54:	fd842783          	lw	a5,-40(s0)
20014c58:	fec42683          	lw	a3,-20(s0)
20014c5c:	02068693          	addi	a3,a3,32
20014c60:	8fd9                	or	a5,a5,a4
20014c62:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20014c64:	a8d9                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20014c66:	fec42783          	lw	a5,-20(s0)
20014c6a:	02878793          	addi	a5,a5,40
20014c6e:	4398                	lw	a4,0(a5)
20014c70:	fd842783          	lw	a5,-40(s0)
20014c74:	fec42683          	lw	a3,-20(s0)
20014c78:	02868693          	addi	a3,a3,40
20014c7c:	8fd9                	or	a5,a5,a4
20014c7e:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20014c80:	a86d                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20014c82:	fec42783          	lw	a5,-20(s0)
20014c86:	03078793          	addi	a5,a5,48
20014c8a:	4398                	lw	a4,0(a5)
20014c8c:	fd842783          	lw	a5,-40(s0)
20014c90:	fec42683          	lw	a3,-20(s0)
20014c94:	03068693          	addi	a3,a3,48
20014c98:	8fd9                	or	a5,a5,a4
20014c9a:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20014c9c:	a879                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20014c9e:	fec42783          	lw	a5,-20(s0)
20014ca2:	02878793          	addi	a5,a5,40
20014ca6:	4398                	lw	a4,0(a5)
20014ca8:	fd842783          	lw	a5,-40(s0)
20014cac:	fec42683          	lw	a3,-20(s0)
20014cb0:	02868693          	addi	a3,a3,40
20014cb4:	8fd9                	or	a5,a5,a4
20014cb6:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20014cb8:	fec42783          	lw	a5,-20(s0)
20014cbc:	03078793          	addi	a5,a5,48
20014cc0:	4398                	lw	a4,0(a5)
20014cc2:	fd842783          	lw	a5,-40(s0)
20014cc6:	fec42683          	lw	a3,-20(s0)
20014cca:	03068693          	addi	a3,a3,48
20014cce:	8fd9                	or	a5,a5,a4
20014cd0:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20014cd2:	a0a5                	j	20014d3a <__metal_driver_sifive_gpio0_config_int+0x1fa>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20014cd4:	fec42783          	lw	a5,-20(s0)
20014cd8:	07e1                	addi	a5,a5,24
20014cda:	4398                	lw	a4,0(a5)
20014cdc:	fd842783          	lw	a5,-40(s0)
20014ce0:	fec42683          	lw	a3,-20(s0)
20014ce4:	06e1                	addi	a3,a3,24
20014ce6:	8fd9                	or	a5,a5,a4
20014ce8:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20014cea:	fec42783          	lw	a5,-20(s0)
20014cee:	02078793          	addi	a5,a5,32
20014cf2:	4398                	lw	a4,0(a5)
20014cf4:	fd842783          	lw	a5,-40(s0)
20014cf8:	fec42683          	lw	a3,-20(s0)
20014cfc:	02068693          	addi	a3,a3,32
20014d00:	8fd9                	or	a5,a5,a4
20014d02:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20014d04:	fec42783          	lw	a5,-20(s0)
20014d08:	02878793          	addi	a5,a5,40
20014d0c:	4398                	lw	a4,0(a5)
20014d0e:	fd842783          	lw	a5,-40(s0)
20014d12:	fec42683          	lw	a3,-20(s0)
20014d16:	02868693          	addi	a3,a3,40
20014d1a:	8fd9                	or	a5,a5,a4
20014d1c:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20014d1e:	fec42783          	lw	a5,-20(s0)
20014d22:	03078793          	addi	a5,a5,48
20014d26:	4398                	lw	a4,0(a5)
20014d28:	fd842783          	lw	a5,-40(s0)
20014d2c:	fec42683          	lw	a3,-20(s0)
20014d30:	03068693          	addi	a3,a3,48
20014d34:	8fd9                	or	a5,a5,a4
20014d36:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20014d38:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20014d3a:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20014d3c:	853e                	mv	a0,a5
20014d3e:	50b2                	lw	ra,44(sp)
20014d40:	5422                	lw	s0,40(sp)
20014d42:	6145                	addi	sp,sp,48
20014d44:	8082                	ret

20014d46 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20014d46:	7179                	addi	sp,sp,-48
20014d48:	d606                	sw	ra,44(sp)
20014d4a:	d422                	sw	s0,40(sp)
20014d4c:	1800                	addi	s0,sp,48
20014d4e:	fca42e23          	sw	a0,-36(s0)
20014d52:	fcb42c23          	sw	a1,-40(s0)
20014d56:	fcc42a23          	sw	a2,-44(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20014d5a:	fdc42503          	lw	a0,-36(s0)
20014d5e:	f60ff0ef          	jal	ra,200144be <__metal_driver_sifive_gpio0_base>
20014d62:	87aa                	mv	a5,a0
20014d64:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:181

    switch (intr_type) {
20014d68:	fd442703          	lw	a4,-44(s0)
20014d6c:	479d                	li	a5,7
20014d6e:	14e7ea63          	bltu	a5,a4,20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20014d72:	fd442783          	lw	a5,-44(s0)
20014d76:	00279713          	slli	a4,a5,0x2
20014d7a:	200117b7          	lui	a5,0x20011
20014d7e:	e3878793          	addi	a5,a5,-456 # 20010e38 <__metal_driver_vtable_sifive_led+0x34>
20014d82:	97ba                	add	a5,a5,a4
20014d84:	439c                	lw	a5,0(a5)
20014d86:	8782                	jr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:184
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20014d88:	fec42783          	lw	a5,-20(s0)
20014d8c:	07f1                	addi	a5,a5,28
20014d8e:	4398                	lw	a4,0(a5)
20014d90:	fd842783          	lw	a5,-40(s0)
20014d94:	fec42683          	lw	a3,-20(s0)
20014d98:	06f1                	addi	a3,a3,28
20014d9a:	8fd9                	or	a5,a5,a4
20014d9c:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20014d9e:	a215                	j	20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20014da0:	fec42783          	lw	a5,-20(s0)
20014da4:	02478793          	addi	a5,a5,36
20014da8:	4398                	lw	a4,0(a5)
20014daa:	fd842783          	lw	a5,-40(s0)
20014dae:	fec42683          	lw	a3,-20(s0)
20014db2:	02468693          	addi	a3,a3,36
20014db6:	8fd9                	or	a5,a5,a4
20014db8:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20014dba:	a221                	j	20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20014dbc:	fec42783          	lw	a5,-20(s0)
20014dc0:	07f1                	addi	a5,a5,28
20014dc2:	4398                	lw	a4,0(a5)
20014dc4:	fd842783          	lw	a5,-40(s0)
20014dc8:	fec42683          	lw	a3,-20(s0)
20014dcc:	06f1                	addi	a3,a3,28
20014dce:	8fd9                	or	a5,a5,a4
20014dd0:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20014dd2:	fec42783          	lw	a5,-20(s0)
20014dd6:	02478793          	addi	a5,a5,36
20014dda:	4398                	lw	a4,0(a5)
20014ddc:	fd842783          	lw	a5,-40(s0)
20014de0:	fec42683          	lw	a3,-20(s0)
20014de4:	02468693          	addi	a3,a3,36
20014de8:	8fd9                	or	a5,a5,a4
20014dea:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20014dec:	a8d9                	j	20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20014dee:	fec42783          	lw	a5,-20(s0)
20014df2:	02c78793          	addi	a5,a5,44
20014df6:	4398                	lw	a4,0(a5)
20014df8:	fd842783          	lw	a5,-40(s0)
20014dfc:	fec42683          	lw	a3,-20(s0)
20014e00:	02c68693          	addi	a3,a3,44
20014e04:	8fd9                	or	a5,a5,a4
20014e06:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20014e08:	a86d                	j	20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20014e0a:	fec42783          	lw	a5,-20(s0)
20014e0e:	03478793          	addi	a5,a5,52
20014e12:	4398                	lw	a4,0(a5)
20014e14:	fd842783          	lw	a5,-40(s0)
20014e18:	fec42683          	lw	a3,-20(s0)
20014e1c:	03468693          	addi	a3,a3,52
20014e20:	8fd9                	or	a5,a5,a4
20014e22:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20014e24:	a879                	j	20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20014e26:	fec42783          	lw	a5,-20(s0)
20014e2a:	02c78793          	addi	a5,a5,44
20014e2e:	4398                	lw	a4,0(a5)
20014e30:	fd842783          	lw	a5,-40(s0)
20014e34:	fec42683          	lw	a3,-20(s0)
20014e38:	02c68693          	addi	a3,a3,44
20014e3c:	8fd9                	or	a5,a5,a4
20014e3e:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20014e40:	fec42783          	lw	a5,-20(s0)
20014e44:	03478793          	addi	a5,a5,52
20014e48:	4398                	lw	a4,0(a5)
20014e4a:	fd842783          	lw	a5,-40(s0)
20014e4e:	fec42683          	lw	a3,-20(s0)
20014e52:	03468693          	addi	a3,a3,52
20014e56:	8fd9                	or	a5,a5,a4
20014e58:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20014e5a:	a0a5                	j	20014ec2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20014e5c:	fec42783          	lw	a5,-20(s0)
20014e60:	07f1                	addi	a5,a5,28
20014e62:	4398                	lw	a4,0(a5)
20014e64:	fd842783          	lw	a5,-40(s0)
20014e68:	fec42683          	lw	a3,-20(s0)
20014e6c:	06f1                	addi	a3,a3,28
20014e6e:	8fd9                	or	a5,a5,a4
20014e70:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20014e72:	fec42783          	lw	a5,-20(s0)
20014e76:	02478793          	addi	a5,a5,36
20014e7a:	4398                	lw	a4,0(a5)
20014e7c:	fd842783          	lw	a5,-40(s0)
20014e80:	fec42683          	lw	a3,-20(s0)
20014e84:	02468693          	addi	a3,a3,36
20014e88:	8fd9                	or	a5,a5,a4
20014e8a:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20014e8c:	fec42783          	lw	a5,-20(s0)
20014e90:	02c78793          	addi	a5,a5,44
20014e94:	4398                	lw	a4,0(a5)
20014e96:	fd842783          	lw	a5,-40(s0)
20014e9a:	fec42683          	lw	a3,-20(s0)
20014e9e:	02c68693          	addi	a3,a3,44
20014ea2:	8fd9                	or	a5,a5,a4
20014ea4:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20014ea6:	fec42783          	lw	a5,-20(s0)
20014eaa:	03478793          	addi	a5,a5,52
20014eae:	4398                	lw	a4,0(a5)
20014eb0:	fd842783          	lw	a5,-40(s0)
20014eb4:	fec42683          	lw	a3,-20(s0)
20014eb8:	03468693          	addi	a3,a3,52
20014ebc:	8fd9                	or	a5,a5,a4
20014ebe:	c29c                	sw	a5,0(a3)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20014ec0:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20014ec2:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20014ec4:	853e                	mv	a0,a5
20014ec6:	50b2                	lw	ra,44(sp)
20014ec8:	5422                	lw	s0,40(sp)
20014eca:	6145                	addi	sp,sp,48
20014ecc:	8082                	ret

20014ece <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20014ece:	1101                	addi	sp,sp,-32
20014ed0:	ce06                	sw	ra,28(sp)
20014ed2:	cc22                	sw	s0,24(sp)
20014ed4:	1000                	addi	s0,sp,32
20014ed6:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20014eda:	fec42503          	lw	a0,-20(s0)
20014ede:	e06ff0ef          	jal	ra,200144e4 <__metal_driver_sifive_gpio0_interrupt_parent>
20014ee2:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20014ee4:	853e                	mv	a0,a5
20014ee6:	40f2                	lw	ra,28(sp)
20014ee8:	4462                	lw	s0,24(sp)
20014eea:	6105                	addi	sp,sp,32
20014eec:	8082                	ret

20014eee <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20014eee:	7179                	addi	sp,sp,-48
20014ef0:	d606                	sw	ra,44(sp)
20014ef2:	d422                	sw	s0,40(sp)
20014ef4:	1800                	addi	s0,sp,48
20014ef6:	fca42e23          	sw	a0,-36(s0)
20014efa:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20014efe:	fd842583          	lw	a1,-40(s0)
20014f02:	fdc42503          	lw	a0,-36(s0)
20014f06:	e08ff0ef          	jal	ra,2001450e <__metal_driver_sifive_gpio0_interrupt_lines>
20014f0a:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20014f0e:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20014f12:	853e                	mv	a0,a5
20014f14:	50b2                	lw	ra,44(sp)
20014f16:	5422                	lw	s0,40(sp)
20014f18:	6145                	addi	sp,sp,48
20014f1a:	8082                	ret

20014f1c <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20014f1c:	7179                	addi	sp,sp,-48
20014f1e:	d606                	sw	ra,44(sp)
20014f20:	d422                	sw	s0,40(sp)
20014f22:	1800                	addi	s0,sp,48
20014f24:	fca42e23          	sw	a0,-36(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20014f28:	fdc42783          	lw	a5,-36(s0)
20014f2c:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
20014f30:	a831                	j	20014f4c <_metal_clock_call_all_callbacks+0x30>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20014f32:	fec42783          	lw	a5,-20(s0)
20014f36:	4398                	lw	a4,0(a5)
20014f38:	fec42783          	lw	a5,-20(s0)
20014f3c:	43dc                	lw	a5,4(a5)
20014f3e:	853e                	mv	a0,a5
20014f40:	9702                	jalr	a4
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:54
        current = current->_next;
20014f42:	fec42783          	lw	a5,-20(s0)
20014f46:	479c                	lw	a5,8(a5)
20014f48:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:52
    while (current) {
20014f4c:	fec42783          	lw	a5,-20(s0)
20014f50:	f3ed                	bnez	a5,20014f32 <_metal_clock_call_all_callbacks+0x16>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:56
    }
}
20014f52:	0001                	nop
20014f54:	50b2                	lw	ra,44(sp)
20014f56:	5422                	lw	s0,40(sp)
20014f58:	6145                	addi	sp,sp,48
20014f5a:	8082                	ret

20014f5c <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20014f5c:	1101                	addi	sp,sp,-32
20014f5e:	ce06                	sw	ra,28(sp)
20014f60:	cc22                	sw	s0,24(sp)
20014f62:	1000                	addi	s0,sp,32
20014f64:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20014f68:	fec42783          	lw	a5,-20(s0)
20014f6c:	439c                	lw	a5,0(a5)
20014f6e:	439c                	lw	a5,0(a5)
20014f70:	fec42503          	lw	a0,-20(s0)
20014f74:	9782                	jalr	a5
20014f76:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:112
}
20014f78:	853e                	mv	a0,a5
20014f7a:	40f2                	lw	ra,28(sp)
20014f7c:	4462                	lw	s0,24(sp)
20014f7e:	6105                	addi	sp,sp,32
20014f80:	8082                	ret

20014f82 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20014f82:	7179                	addi	sp,sp,-48
20014f84:	d606                	sw	ra,44(sp)
20014f86:	d422                	sw	s0,40(sp)
20014f88:	1800                	addi	s0,sp,48
20014f8a:	fca42e23          	sw	a0,-36(s0)
20014f8e:	fcb42c23          	sw	a1,-40(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20014f92:	fdc42783          	lw	a5,-36(s0)
20014f96:	43dc                	lw	a5,4(a5)
20014f98:	853e                	mv	a0,a5
20014f9a:	3749                	jal	20014f1c <_metal_clock_call_all_callbacks>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20014f9c:	fdc42783          	lw	a5,-36(s0)
20014fa0:	439c                	lw	a5,0(a5)
20014fa2:	43dc                	lw	a5,4(a5)
20014fa4:	fd842583          	lw	a1,-40(s0)
20014fa8:	fdc42503          	lw	a0,-36(s0)
20014fac:	9782                	jalr	a5
20014fae:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20014fb2:	fdc42783          	lw	a5,-36(s0)
20014fb6:	479c                	lw	a5,8(a5)
20014fb8:	853e                	mv	a0,a5
20014fba:	378d                	jal	20014f1c <_metal_clock_call_all_callbacks>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:135

    return out;
20014fbc:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/clock.h:136
}
20014fc0:	853e                	mv	a0,a5
20014fc2:	50b2                	lw	ra,44(sp)
20014fc4:	5422                	lw	s0,40(sp)
20014fc6:	6145                	addi	sp,sp,48
20014fc8:	8082                	ret

20014fca <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20014fca:	1101                	addi	sp,sp,-32
20014fcc:	ce06                	sw	ra,28(sp)
20014fce:	cc22                	sw	s0,24(sp)
20014fd0:	1000                	addi	s0,sp,32
20014fd2:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20014fd6:	fec42783          	lw	a5,-20(s0)
20014fda:	439c                	lw	a5,0(a5)
20014fdc:	57dc                	lw	a5,44(a5)
20014fde:	fec42503          	lw	a0,-20(s0)
20014fe2:	9782                	jalr	a5
20014fe4:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/cpu.h:226
}
20014fe6:	853e                	mv	a0,a5
20014fe8:	40f2                	lw	ra,28(sp)
20014fea:	4462                	lw	s0,24(sp)
20014fec:	6105                	addi	sp,sp,32
20014fee:	8082                	ret

20014ff0 <metal_cpu_get>:
metal_cpu_get():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20014ff0:	1101                	addi	sp,sp,-32
20014ff2:	ce22                	sw	s0,28(sp)
20014ff4:	1000                	addi	s0,sp,32
20014ff6:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20014ffa:	fec42783          	lw	a5,-20(s0)
20014ffe:	eb99                	bnez	a5,20015014 <metal_cpu_get+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20015000:	800017b7          	lui	a5,0x80001
20015004:	fec42703          	lw	a4,-20(s0)
20015008:	070a                	slli	a4,a4,0x2
2001500a:	a7078793          	addi	a5,a5,-1424 # 80000a70 <__global_pointer$+0xfffff800>
2001500e:	97ba                	add	a5,a5,a4
20015010:	439c                	lw	a5,0(a5)
20015012:	a011                	j	20015016 <metal_cpu_get+0x26>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:11
    }
    return NULL;
20015014:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:12
}
20015016:	853e                	mv	a0,a5
20015018:	4472                	lw	s0,28(sp)
2001501a:	6105                	addi	sp,sp,32
2001501c:	8082                	ret

2001501e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2001501e:	1101                	addi	sp,sp,-32
20015020:	ce22                	sw	s0,28(sp)
20015022:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20015024:	f14027f3          	csrr	a5,mhartid
20015028:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:18
    return mhartid;
2001502c:	fec42783          	lw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/cpu.c:20
#endif
}
20015030:	853e                	mv	a0,a5
20015032:	4472                	lw	s0,28(sp)
20015034:	6105                	addi	sp,sp,32
20015036:	8082                	ret

20015038 <metal_gpio_disable_input>:
metal_gpio_disable_input():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:79
 * @brief Disable input on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the input is successfully disabled
 */
__inline__ int metal_gpio_disable_input(struct metal_gpio *gpio, int pin) {
20015038:	1101                	addi	sp,sp,-32
2001503a:	ce06                	sw	ra,28(sp)
2001503c:	cc22                	sw	s0,24(sp)
2001503e:	1000                	addi	s0,sp,32
20015040:	fea42623          	sw	a0,-20(s0)
20015044:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:80
    if (!gpio) {
20015048:	fec42783          	lw	a5,-20(s0)
2001504c:	e399                	bnez	a5,20015052 <metal_gpio_disable_input+0x1a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:81
        return 1;
2001504e:	4785                	li	a5,1
20015050:	a839                	j	2001506e <metal_gpio_disable_input+0x36>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:84
    }

    return gpio->vtable->disable_input(gpio, (1 << pin));
20015052:	fec42783          	lw	a5,-20(s0)
20015056:	439c                	lw	a5,0(a5)
20015058:	4394                	lw	a3,0(a5)
2001505a:	fe842783          	lw	a5,-24(s0)
2001505e:	4705                	li	a4,1
20015060:	00f717b3          	sll	a5,a4,a5
20015064:	85be                	mv	a1,a5
20015066:	fec42503          	lw	a0,-20(s0)
2001506a:	9682                	jalr	a3
2001506c:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:85
}
2001506e:	853e                	mv	a0,a5
20015070:	40f2                	lw	ra,28(sp)
20015072:	4462                	lw	s0,24(sp)
20015074:	6105                	addi	sp,sp,32
20015076:	8082                	ret

20015078 <metal_gpio_enable_output>:
metal_gpio_enable_output():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:93
 * @brief Enable output on a pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the output is successfully enabled
 */
__inline__ int metal_gpio_enable_output(struct metal_gpio *gpio, int pin) {
20015078:	1101                	addi	sp,sp,-32
2001507a:	ce06                	sw	ra,28(sp)
2001507c:	cc22                	sw	s0,24(sp)
2001507e:	1000                	addi	s0,sp,32
20015080:	fea42623          	sw	a0,-20(s0)
20015084:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:94
    if (!gpio) {
20015088:	fec42783          	lw	a5,-20(s0)
2001508c:	e399                	bnez	a5,20015092 <metal_gpio_enable_output+0x1a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:95
        return 1;
2001508e:	4785                	li	a5,1
20015090:	a839                	j	200150ae <metal_gpio_enable_output+0x36>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:98
    }

    return gpio->vtable->enable_output(gpio, (1 << pin));
20015092:	fec42783          	lw	a5,-20(s0)
20015096:	439c                	lw	a5,0(a5)
20015098:	4bd4                	lw	a3,20(a5)
2001509a:	fe842783          	lw	a5,-24(s0)
2001509e:	4705                	li	a4,1
200150a0:	00f717b3          	sll	a5,a4,a5
200150a4:	85be                	mv	a1,a5
200150a6:	fec42503          	lw	a0,-20(s0)
200150aa:	9682                	jalr	a3
200150ac:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:99
}
200150ae:	853e                	mv	a0,a5
200150b0:	40f2                	lw	ra,28(sp)
200150b2:	4462                	lw	s0,24(sp)
200150b4:	6105                	addi	sp,sp,32
200150b6:	8082                	ret

200150b8 <metal_gpio_set_pin>:
metal_gpio_set_pin():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:122
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @param value The value to set the pin to
 * @return 0 if the output is successfully set
 */
__inline__ int metal_gpio_set_pin(struct metal_gpio *gpio, int pin, int value) {
200150b8:	1101                	addi	sp,sp,-32
200150ba:	ce06                	sw	ra,28(sp)
200150bc:	cc22                	sw	s0,24(sp)
200150be:	1000                	addi	s0,sp,32
200150c0:	fea42623          	sw	a0,-20(s0)
200150c4:	feb42423          	sw	a1,-24(s0)
200150c8:	fec42223          	sw	a2,-28(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:123
    if (!gpio) {
200150cc:	fec42783          	lw	a5,-20(s0)
200150d0:	e399                	bnez	a5,200150d6 <metal_gpio_set_pin+0x1e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:124
        return 1;
200150d2:	4785                	li	a5,1
200150d4:	a089                	j	20015116 <metal_gpio_set_pin+0x5e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:127
    }

    if (value == 0) {
200150d6:	fe442783          	lw	a5,-28(s0)
200150da:	e385                	bnez	a5,200150fa <metal_gpio_set_pin+0x42>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:128
        return gpio->vtable->output_clear(gpio, (1 << pin));
200150dc:	fec42783          	lw	a5,-20(s0)
200150e0:	439c                	lw	a5,0(a5)
200150e2:	4fd4                	lw	a3,28(a5)
200150e4:	fe842783          	lw	a5,-24(s0)
200150e8:	4705                	li	a4,1
200150ea:	00f717b3          	sll	a5,a4,a5
200150ee:	85be                	mv	a1,a5
200150f0:	fec42503          	lw	a0,-20(s0)
200150f4:	9682                	jalr	a3
200150f6:	87aa                	mv	a5,a0
200150f8:	a839                	j	20015116 <metal_gpio_set_pin+0x5e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:130
    } else {
        return gpio->vtable->output_set(gpio, (1 << pin));
200150fa:	fec42783          	lw	a5,-20(s0)
200150fe:	439c                	lw	a5,0(a5)
20015100:	4f94                	lw	a3,24(a5)
20015102:	fe842783          	lw	a5,-24(s0)
20015106:	4705                	li	a4,1
20015108:	00f717b3          	sll	a5,a4,a5
2001510c:	85be                	mv	a1,a5
2001510e:	fec42503          	lw	a0,-20(s0)
20015112:	9682                	jalr	a3
20015114:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:132
    }
}
20015116:	853e                	mv	a0,a5
20015118:	40f2                	lw	ra,28(sp)
2001511a:	4462                	lw	s0,24(sp)
2001511c:	6105                	addi	sp,sp,32
2001511e:	8082                	ret

20015120 <metal_gpio_toggle_pin>:
metal_gpio_toggle_pin():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:194
 * @brief Toggles the value of the GPIO pin
 * @param gpio The handle for the GPIO interface
 * @param pin The pin number indexed from 0
 * @return 0 if the pin is successfully toggled
 */
__inline__ int metal_gpio_toggle_pin(struct metal_gpio *gpio, int pin) {
20015120:	1101                	addi	sp,sp,-32
20015122:	ce06                	sw	ra,28(sp)
20015124:	cc22                	sw	s0,24(sp)
20015126:	1000                	addi	s0,sp,32
20015128:	fea42623          	sw	a0,-20(s0)
2001512c:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:195
    if (!gpio) {
20015130:	fec42783          	lw	a5,-20(s0)
20015134:	e399                	bnez	a5,2001513a <metal_gpio_toggle_pin+0x1a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:196
        return 1;
20015136:	4785                	li	a5,1
20015138:	a839                	j	20015156 <metal_gpio_toggle_pin+0x36>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:199
    }

    return gpio->vtable->output_toggle(gpio, (1 << pin));
2001513a:	fec42783          	lw	a5,-20(s0)
2001513e:	439c                	lw	a5,0(a5)
20015140:	5394                	lw	a3,32(a5)
20015142:	fe842783          	lw	a5,-24(s0)
20015146:	4705                	li	a4,1
20015148:	00f717b3          	sll	a5,a4,a5
2001514c:	85be                	mv	a1,a5
2001514e:	fec42503          	lw	a0,-20(s0)
20015152:	9682                	jalr	a3
20015154:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/gpio.h:200
}
20015156:	853e                	mv	a0,a5
20015158:	40f2                	lw	ra,28(sp)
2001515a:	4462                	lw	s0,24(sp)
2001515c:	6105                	addi	sp,sp,32
2001515e:	8082                	ret

20015160 <metal_interrupt_init>:
metal_interrupt_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/interrupt.h:130
 * before any interrupts are registered or enabled with the handler. It
 * is invalid to initialize an interrupt controller more than once.
 *
 * @param controller The handle for the interrupt controller
 */
__inline__ void metal_interrupt_init(struct metal_interrupt *controller) {
20015160:	1101                	addi	sp,sp,-32
20015162:	ce06                	sw	ra,28(sp)
20015164:	cc22                	sw	s0,24(sp)
20015166:	1000                	addi	s0,sp,32
20015168:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/interrupt.h:131
    controller->vtable->interrupt_init(controller);
2001516c:	fec42783          	lw	a5,-20(s0)
20015170:	439c                	lw	a5,0(a5)
20015172:	439c                	lw	a5,0(a5)
20015174:	fec42503          	lw	a0,-20(s0)
20015178:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/interrupt.h:132
}
2001517a:	0001                	nop
2001517c:	40f2                	lw	ra,28(sp)
2001517e:	4462                	lw	s0,24(sp)
20015180:	6105                	addi	sp,sp,32
20015182:	8082                	ret

20015184 <metal_led_enable>:
metal_led_enable():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:49

/*!
 * @brief Enable an LED
 * @param led The handle for the LED
 */
__inline__ void metal_led_enable(struct metal_led *led) {
20015184:	1101                	addi	sp,sp,-32
20015186:	ce06                	sw	ra,28(sp)
20015188:	cc22                	sw	s0,24(sp)
2001518a:	1000                	addi	s0,sp,32
2001518c:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:50
    led->vtable->led_enable(led);
20015190:	fec42783          	lw	a5,-20(s0)
20015194:	439c                	lw	a5,0(a5)
20015196:	43dc                	lw	a5,4(a5)
20015198:	fec42503          	lw	a0,-20(s0)
2001519c:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:51
}
2001519e:	0001                	nop
200151a0:	40f2                	lw	ra,28(sp)
200151a2:	4462                	lw	s0,24(sp)
200151a4:	6105                	addi	sp,sp,32
200151a6:	8082                	ret

200151a8 <metal_led_on>:
metal_led_on():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:57

/*!
 * @brief Turn an LED on
 * @param led The handle for the LED
 */
__inline__ void metal_led_on(struct metal_led *led) {
200151a8:	1101                	addi	sp,sp,-32
200151aa:	ce06                	sw	ra,28(sp)
200151ac:	cc22                	sw	s0,24(sp)
200151ae:	1000                	addi	s0,sp,32
200151b0:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:58
    led->vtable->led_on(led);
200151b4:	fec42783          	lw	a5,-20(s0)
200151b8:	439c                	lw	a5,0(a5)
200151ba:	479c                	lw	a5,8(a5)
200151bc:	fec42503          	lw	a0,-20(s0)
200151c0:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:59
}
200151c2:	0001                	nop
200151c4:	40f2                	lw	ra,28(sp)
200151c6:	4462                	lw	s0,24(sp)
200151c8:	6105                	addi	sp,sp,32
200151ca:	8082                	ret

200151cc <metal_led_off>:
metal_led_off():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:65

/*!
 * @brief Turn an LED off
 * @param led The handle for the LED
 */
__inline__ void metal_led_off(struct metal_led *led) {
200151cc:	1101                	addi	sp,sp,-32
200151ce:	ce06                	sw	ra,28(sp)
200151d0:	cc22                	sw	s0,24(sp)
200151d2:	1000                	addi	s0,sp,32
200151d4:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:66
    led->vtable->led_off(led);
200151d8:	fec42783          	lw	a5,-20(s0)
200151dc:	439c                	lw	a5,0(a5)
200151de:	47dc                	lw	a5,12(a5)
200151e0:	fec42503          	lw	a0,-20(s0)
200151e4:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/metal/led.h:67
}
200151e6:	0001                	nop
200151e8:	40f2                	lw	ra,28(sp)
200151ea:	4462                	lw	s0,24(sp)
200151ec:	6105                	addi	sp,sp,32
200151ee:	8082                	ret

200151f0 <metal_led_get_rgb>:
metal_led_get_rgb():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:8

#include <metal/led.h>
#include <metal/machine.h>
#include <string.h>

struct metal_led *metal_led_get_rgb(char *label, char *color) {
200151f0:	7175                	addi	sp,sp,-144
200151f2:	c706                	sw	ra,140(sp)
200151f4:	c522                	sw	s0,136(sp)
200151f6:	0900                	addi	s0,sp,144
200151f8:	f6a42e23          	sw	a0,-132(s0)
200151fc:	f6b42c23          	sw	a1,-136(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:13
    int i;
    struct metal_led *led;
    char led_label[100];

    if ((__METAL_DT_MAX_LEDS == 0) || (label == NULL) || (color == NULL)) {
20015200:	f7c42783          	lw	a5,-132(s0)
20015204:	c781                	beqz	a5,2001520c <metal_led_get_rgb+0x1c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:13 (discriminator 1)
20015206:	f7842783          	lw	a5,-136(s0)
2001520a:	e399                	bnez	a5,20015210 <metal_led_get_rgb+0x20>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:14
        return NULL;
2001520c:	4781                	li	a5,0
2001520e:	a0ad                	j	20015278 <metal_led_get_rgb+0x88>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:17
    }

    strcpy(led_label, label);
20015210:	f8440793          	addi	a5,s0,-124
20015214:	f7c42583          	lw	a1,-132(s0)
20015218:	853e                	mv	a0,a5
2001521a:	2605                	jal	2001553a <strcpy>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:18
    strcat(led_label, color);
2001521c:	f8440793          	addi	a5,s0,-124
20015220:	f7842583          	lw	a1,-136(s0)
20015224:	853e                	mv	a0,a5
20015226:	2cf1                	jal	20015502 <strcat>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:19
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
20015228:	fe042623          	sw	zero,-20(s0)
2001522c:	a081                	j	2001526c <metal_led_get_rgb+0x7c>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:20
        led = (struct metal_led *)__metal_led_table[i];
2001522e:	800007b7          	lui	a5,0x80000
20015232:	00078713          	mv	a4,a5
20015236:	fec42783          	lw	a5,-20(s0)
2001523a:	078a                	slli	a5,a5,0x2
2001523c:	97ba                	add	a5,a5,a4
2001523e:	439c                	lw	a5,0(a5)
20015240:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:21
        if (led->vtable->led_exist(led, led_label)) {
20015244:	fe842783          	lw	a5,-24(s0)
20015248:	439c                	lw	a5,0(a5)
2001524a:	4398                	lw	a4,0(a5)
2001524c:	f8440793          	addi	a5,s0,-124
20015250:	85be                	mv	a1,a5
20015252:	fe842503          	lw	a0,-24(s0)
20015256:	9702                	jalr	a4
20015258:	87aa                	mv	a5,a0
2001525a:	c781                	beqz	a5,20015262 <metal_led_get_rgb+0x72>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:22
            return led;
2001525c:	fe842783          	lw	a5,-24(s0)
20015260:	a821                	j	20015278 <metal_led_get_rgb+0x88>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:19 (discriminator 2)
    for (i = 0; i < __METAL_DT_MAX_LEDS; i++) {
20015262:	fec42783          	lw	a5,-20(s0)
20015266:	0785                	addi	a5,a5,1
20015268:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:19 (discriminator 1)
2001526c:	fec42703          	lw	a4,-20(s0)
20015270:	4789                	li	a5,2
20015272:	fae7dee3          	bge	a5,a4,2001522e <metal_led_get_rgb+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:25
        }
    }
    return NULL;
20015276:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/led.c:26 (discriminator 1)
}
20015278:	853e                	mv	a0,a5
2001527a:	40ba                	lw	ra,140(sp)
2001527c:	442a                	lw	s0,136(sp)
2001527e:	6149                	addi	sp,sp,144
20015280:	8082                	ret

20015282 <metal_shutdown>:
metal_shutdown():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
20015282:	1101                	addi	sp,sp,-32
20015284:	ce22                	sw	s0,28(sp)
20015286:	1000                	addi	s0,sp,32
20015288:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
2001528c:	0001                	nop
2001528e:	bffd                	j	2001528c <metal_shutdown+0xa>
	...

20015300 <__metal_vector_table>:
IRQ_0():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20015300:	e0afc06f          	j	2001190a <metal_interrupt_vector_handler>

20015304 <IRQ_1>:
IRQ_1():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20015304:	e06fc06f          	j	2001190a <metal_interrupt_vector_handler>

20015308 <IRQ_2>:
IRQ_2():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20015308:	e02fc06f          	j	2001190a <metal_interrupt_vector_handler>

2001530c <IRQ_3>:
IRQ_3():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001530c:	e2cfc06f          	j	20011938 <metal_software_interrupt_vector_handler>

20015310 <IRQ_4>:
IRQ_4():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20015310:	dfafc06f          	j	2001190a <metal_interrupt_vector_handler>

20015314 <IRQ_5>:
IRQ_5():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20015314:	df6fc06f          	j	2001190a <metal_interrupt_vector_handler>

20015318 <IRQ_6>:
IRQ_6():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20015318:	df2fc06f          	j	2001190a <metal_interrupt_vector_handler>

2001531c <IRQ_7>:
IRQ_7():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001531c:	f16fc06f          	j	20011a32 <metal_timer_interrupt_vector_handler>

20015320 <IRQ_8>:
IRQ_8():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20015320:	deafc06f          	j	2001190a <metal_interrupt_vector_handler>

20015324 <IRQ_9>:
IRQ_9():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20015324:	de6fc06f          	j	2001190a <metal_interrupt_vector_handler>

20015328 <IRQ_10>:
IRQ_10():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20015328:	de2fc06f          	j	2001190a <metal_interrupt_vector_handler>

2001532c <IRQ_11>:
IRQ_11():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2001532c:	ddefc06f          	j	2001190a <metal_interrupt_vector_handler>

20015330 <IRQ_12>:
IRQ_12():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20015330:	ddafc06f          	j	2001190a <metal_interrupt_vector_handler>

20015334 <IRQ_13>:
IRQ_13():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20015334:	dd6fc06f          	j	2001190a <metal_interrupt_vector_handler>

20015338 <IRQ_14>:
IRQ_14():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20015338:	dd2fc06f          	j	2001190a <metal_interrupt_vector_handler>

2001533c <IRQ_15>:
IRQ_15():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2001533c:	dcefc06f          	j	2001190a <metal_interrupt_vector_handler>

20015340 <IRQ_LC0>:
IRQ_LC0():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20015340:	a37fc06f          	j	20011d76 <metal_lc0_interrupt_vector_handler>

20015344 <IRQ_LC1>:
IRQ_LC1():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20015344:	ac7fc06f          	j	20011e0a <metal_lc1_interrupt_vector_handler>

20015348 <IRQ_LC2>:
IRQ_LC2():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20015348:	b59fc06f          	j	20011ea0 <metal_lc2_interrupt_vector_handler>

2001534c <IRQ_LC3>:
IRQ_LC3():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2001534c:	bebfc06f          	j	20011f36 <metal_lc3_interrupt_vector_handler>

20015350 <IRQ_LC4>:
IRQ_LC4():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20015350:	c7dfc06f          	j	20011fcc <metal_lc4_interrupt_vector_handler>

20015354 <IRQ_LC5>:
IRQ_LC5():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20015354:	d0ffc06f          	j	20012062 <metal_lc5_interrupt_vector_handler>

20015358 <IRQ_LC6>:
IRQ_LC6():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20015358:	da1fc06f          	j	200120f8 <metal_lc6_interrupt_vector_handler>

2001535c <IRQ_LC7>:
IRQ_LC7():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2001535c:	e33fc06f          	j	2001218e <metal_lc7_interrupt_vector_handler>

20015360 <IRQ_LC8>:
IRQ_LC8():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20015360:	ec5fc06f          	j	20012224 <metal_lc8_interrupt_vector_handler>

20015364 <IRQ_LC9>:
IRQ_LC9():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20015364:	f57fc06f          	j	200122ba <metal_lc9_interrupt_vector_handler>

20015368 <IRQ_LC10>:
IRQ_LC10():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20015368:	fe9fc06f          	j	20012350 <metal_lc10_interrupt_vector_handler>

2001536c <IRQ_LC11>:
IRQ_LC11():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2001536c:	87afd06f          	j	200123e6 <metal_lc11_interrupt_vector_handler>

20015370 <IRQ_LC12>:
IRQ_LC12():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20015370:	90cfd06f          	j	2001247c <metal_lc12_interrupt_vector_handler>

20015374 <IRQ_LC13>:
IRQ_LC13():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20015374:	99efd06f          	j	20012512 <metal_lc13_interrupt_vector_handler>

20015378 <IRQ_LC14>:
IRQ_LC14():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20015378:	a30fd06f          	j	200125a8 <metal_lc14_interrupt_vector_handler>

2001537c <IRQ_LC15>:
IRQ_LC15():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2001537c:	ac2fd06f          	j	2001263e <metal_lc15_interrupt_vector_handler>

20015380 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:208
{
20015380:	1101                	addi	sp,sp,-32
20015382:	ce22                	sw	s0,28(sp)
20015384:	1000                	addi	s0,sp,32
20015386:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001538a:	fec42703          	lw	a4,-20(s0)
2001538e:	800007b7          	lui	a5,0x80000
20015392:	00c78793          	addi	a5,a5,12 # 8000000c <__global_pointer$+0xffffed9c>
20015396:	00f71763          	bne	a4,a5,200153a4 <__metal_driver_fixed_clock_rate+0x24>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001539a:	00f427b7          	lui	a5,0xf42
2001539e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200153a2:	a099                	j	200153e8 <__metal_driver_fixed_clock_rate+0x68>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
200153a4:	fec42703          	lw	a4,-20(s0)
200153a8:	800007b7          	lui	a5,0x80000
200153ac:	01878793          	addi	a5,a5,24 # 80000018 <__global_pointer$+0xffffeda8>
200153b0:	00f71763          	bne	a4,a5,200153be <__metal_driver_fixed_clock_rate+0x3e>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
200153b4:	044aa7b7          	lui	a5,0x44aa
200153b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
200153bc:	a035                	j	200153e8 <__metal_driver_fixed_clock_rate+0x68>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
200153be:	fec42703          	lw	a4,-20(s0)
200153c2:	800007b7          	lui	a5,0x80000
200153c6:	02478793          	addi	a5,a5,36 # 80000024 <__global_pointer$+0xffffedb4>
200153ca:	00f71463          	bne	a4,a5,200153d2 <__metal_driver_fixed_clock_rate+0x52>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200153ce:	67a1                	lui	a5,0x8
200153d0:	a821                	j	200153e8 <__metal_driver_fixed_clock_rate+0x68>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
200153d2:	fec42703          	lw	a4,-20(s0)
200153d6:	800007b7          	lui	a5,0x80000
200153da:	03078793          	addi	a5,a5,48 # 80000030 <__global_pointer$+0xffffedc0>
200153de:	00f71463          	bne	a4,a5,200153e6 <__metal_driver_fixed_clock_rate+0x66>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
200153e2:	67a1                	lui	a5,0x8
200153e4:	a011                	j	200153e8 <__metal_driver_fixed_clock_rate+0x68>
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:222
		return 0;
200153e6:	4781                	li	a5,0
/mnt/usb2/e_sdk/freedom-e-sdk/bsp/sifive-hifive1-revb/build/debug/./metal/machine.h:224
}
200153e8:	853e                	mv	a0,a5
200153ea:	4472                	lw	s0,28(sp)
200153ec:	6105                	addi	sp,sp,32
200153ee:	8082                	ret

200153f0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
200153f0:	1101                	addi	sp,sp,-32
200153f2:	ce06                	sw	ra,28(sp)
200153f4:	cc22                	sw	s0,24(sp)
200153f6:	1000                	addi	s0,sp,32
200153f8:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
200153fc:	fec42503          	lw	a0,-20(s0)
20015400:	3741                	jal	20015380 <__metal_driver_fixed_clock_rate>
20015402:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:14
}
20015404:	853e                	mv	a0,a5
20015406:	40f2                	lw	ra,28(sp)
20015408:	4462                	lw	s0,24(sp)
2001540a:	6105                	addi	sp,sp,32
2001540c:	8082                	ret

2001540e <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
2001540e:	1101                	addi	sp,sp,-32
20015410:	ce06                	sw	ra,28(sp)
20015412:	cc22                	sw	s0,24(sp)
20015414:	1000                	addi	s0,sp,32
20015416:	fea42623          	sw	a0,-20(s0)
2001541a:	feb42423          	sw	a1,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
2001541e:	fec42503          	lw	a0,-20(s0)
20015422:	37f9                	jal	200153f0 <__metal_driver_fixed_clock_get_rate_hz>
20015424:	87aa                	mv	a5,a0
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/drivers/fixed-clock.c:19
}
20015426:	853e                	mv	a0,a5
20015428:	40f2                	lw	ra,28(sp)
2001542a:	4462                	lw	s0,24(sp)
2001542c:	6105                	addi	sp,sp,32
2001542e:	8082                	ret

20015430 <atexit>:
atexit():
20015430:	85aa                	mv	a1,a0
20015432:	4681                	li	a3,0
20015434:	4601                	li	a2,0
20015436:	4501                	li	a0,0
20015438:	aa11                	j	2001554c <__register_exitproc>

2001543a <exit>:
exit():
2001543a:	1141                	addi	sp,sp,-16
2001543c:	c422                	sw	s0,8(sp)
2001543e:	c606                	sw	ra,12(sp)
20015440:	00000797          	auipc	a5,0x0
20015444:	19478793          	addi	a5,a5,404 # 200155d4 <__call_exitprocs>
20015448:	842a                	mv	s0,a0
2001544a:	c399                	beqz	a5,20015450 <exit+0x16>
2001544c:	4581                	li	a1,0
2001544e:	2259                	jal	200155d4 <__call_exitprocs>
20015450:	84818793          	addi	a5,gp,-1976 # 80000ab8 <_global_impure_ptr>
20015454:	4388                	lw	a0,0(a5)
20015456:	551c                	lw	a5,40(a0)
20015458:	c391                	beqz	a5,2001545c <exit+0x22>
2001545a:	9782                	jalr	a5
2001545c:	8522                	mv	a0,s0
2001545e:	2e99                	jal	200157b4 <_exit>

20015460 <__libc_fini_array>:
__libc_fini_array():
20015460:	1141                	addi	sp,sp,-16
20015462:	ffffb797          	auipc	a5,0xffffb
20015466:	e8e78793          	addi	a5,a5,-370 # 200102f0 <__fini_array_end>
2001546a:	c422                	sw	s0,8(sp)
2001546c:	ffffb417          	auipc	s0,0xffffb
20015470:	e8440413          	addi	s0,s0,-380 # 200102f0 <__fini_array_end>
20015474:	8c1d                	sub	s0,s0,a5
20015476:	c226                	sw	s1,4(sp)
20015478:	c606                	sw	ra,12(sp)
2001547a:	8409                	srai	s0,s0,0x2
2001547c:	84be                	mv	s1,a5
2001547e:	e411                	bnez	s0,2001548a <__libc_fini_array+0x2a>
20015480:	40b2                	lw	ra,12(sp)
20015482:	4422                	lw	s0,8(sp)
20015484:	4492                	lw	s1,4(sp)
20015486:	0141                	addi	sp,sp,16
20015488:	8082                	ret
2001548a:	147d                	addi	s0,s0,-1
2001548c:	00241793          	slli	a5,s0,0x2
20015490:	97a6                	add	a5,a5,s1
20015492:	439c                	lw	a5,0(a5)
20015494:	9782                	jalr	a5
20015496:	b7e5                	j	2001547e <__libc_fini_array+0x1e>

20015498 <__libc_init_array>:
__libc_init_array():
20015498:	1141                	addi	sp,sp,-16
2001549a:	ffffb797          	auipc	a5,0xffffb
2001549e:	e4e78793          	addi	a5,a5,-434 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200154a2:	c422                	sw	s0,8(sp)
200154a4:	ffffb417          	auipc	s0,0xffffb
200154a8:	e4440413          	addi	s0,s0,-444 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200154ac:	8c1d                	sub	s0,s0,a5
200154ae:	c226                	sw	s1,4(sp)
200154b0:	c04a                	sw	s2,0(sp)
200154b2:	c606                	sw	ra,12(sp)
200154b4:	8409                	srai	s0,s0,0x2
200154b6:	4481                	li	s1,0
200154b8:	893e                	mv	s2,a5
200154ba:	02849663          	bne	s1,s0,200154e6 <__libc_init_array+0x4e>
200154be:	ffffb797          	auipc	a5,0xffffb
200154c2:	e2a78793          	addi	a5,a5,-470 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200154c6:	ffffb417          	auipc	s0,0xffffb
200154ca:	e2240413          	addi	s0,s0,-478 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200154ce:	8c1d                	sub	s0,s0,a5
200154d0:	8409                	srai	s0,s0,0x2
200154d2:	4481                	li	s1,0
200154d4:	893e                	mv	s2,a5
200154d6:	00849f63          	bne	s1,s0,200154f4 <__libc_init_array+0x5c>
200154da:	40b2                	lw	ra,12(sp)
200154dc:	4422                	lw	s0,8(sp)
200154de:	4492                	lw	s1,4(sp)
200154e0:	4902                	lw	s2,0(sp)
200154e2:	0141                	addi	sp,sp,16
200154e4:	8082                	ret
200154e6:	00249793          	slli	a5,s1,0x2
200154ea:	97ca                	add	a5,a5,s2
200154ec:	439c                	lw	a5,0(a5)
200154ee:	0485                	addi	s1,s1,1
200154f0:	9782                	jalr	a5
200154f2:	b7e1                	j	200154ba <__libc_init_array+0x22>
200154f4:	00249793          	slli	a5,s1,0x2
200154f8:	97ca                	add	a5,a5,s2
200154fa:	439c                	lw	a5,0(a5)
200154fc:	0485                	addi	s1,s1,1
200154fe:	9782                	jalr	a5
20015500:	bfd9                	j	200154d6 <__libc_init_array+0x3e>

20015502 <strcat>:
strcat():
20015502:	87aa                	mv	a5,a0
20015504:	0007c703          	lbu	a4,0(a5)
20015508:	00178693          	addi	a3,a5,1
2001550c:	eb09                	bnez	a4,2001551e <strcat+0x1c>
2001550e:	0585                	addi	a1,a1,1
20015510:	fff5c703          	lbu	a4,-1(a1)
20015514:	0785                	addi	a5,a5,1
20015516:	fee78fa3          	sb	a4,-1(a5)
2001551a:	fb75                	bnez	a4,2001550e <strcat+0xc>
2001551c:	8082                	ret
2001551e:	87b6                	mv	a5,a3
20015520:	b7d5                	j	20015504 <strcat+0x2>

20015522 <strcmp>:
strcmp():
20015522:	00054603          	lbu	a2,0(a0)
20015526:	0005c683          	lbu	a3,0(a1)
2001552a:	0505                	addi	a0,a0,1
2001552c:	0585                	addi	a1,a1,1
2001552e:	00d61363          	bne	a2,a3,20015534 <strcmp+0x12>
20015532:	fa65                	bnez	a2,20015522 <strcmp>
20015534:	40d60533          	sub	a0,a2,a3
20015538:	8082                	ret

2001553a <strcpy>:
strcpy():
2001553a:	87aa                	mv	a5,a0
2001553c:	0005c703          	lbu	a4,0(a1)
20015540:	0785                	addi	a5,a5,1
20015542:	0585                	addi	a1,a1,1
20015544:	fee78fa3          	sb	a4,-1(a5)
20015548:	fb75                	bnez	a4,2001553c <strcpy+0x2>
2001554a:	8082                	ret

2001554c <__register_exitproc>:
__register_exitproc():
2001554c:	5ffeb797          	auipc	a5,0x5ffeb
20015550:	57478793          	addi	a5,a5,1396 # 80000ac0 <__tls_base>
20015554:	439c                	lw	a5,0(a5)
20015556:	8e2a                	mv	t3,a0
20015558:	e39d                	bnez	a5,2001557e <__register_exitproc+0x32>
2001555a:	5ffeb717          	auipc	a4,0x5ffeb
2001555e:	57270713          	addi	a4,a4,1394 # 80000acc <_global_atexit0>
20015562:	5ffeb797          	auipc	a5,0x5ffeb
20015566:	54e7af23          	sw	a4,1374(a5) # 80000ac0 <__tls_base>
2001556a:	dffeb517          	auipc	a0,0xdffeb
2001556e:	a9650513          	addi	a0,a0,-1386 # 0 <__metal_boot_hart>
20015572:	87ba                	mv	a5,a4
20015574:	c509                	beqz	a0,2001557e <__register_exitproc+0x32>
20015576:	411c                	lw	a5,0(a0)
20015578:	8ef1a223          	sw	a5,-1820(gp) # 80000b54 <_global_atexit0+0x88>
2001557c:	87ba                	mv	a5,a4
2001557e:	43d8                	lw	a4,4(a5)
20015580:	487d                	li	a6,31
20015582:	557d                	li	a0,-1
20015584:	04e84763          	blt	a6,a4,200155d2 <__register_exitproc+0x86>
20015588:	020e0e63          	beqz	t3,200155c4 <__register_exitproc+0x78>
2001558c:	0887a803          	lw	a6,136(a5)
20015590:	04080163          	beqz	a6,200155d2 <__register_exitproc+0x86>
20015594:	00271893          	slli	a7,a4,0x2
20015598:	98c2                	add	a7,a7,a6
2001559a:	00c8a023          	sw	a2,0(a7)
2001559e:	10082303          	lw	t1,256(a6)
200155a2:	4605                	li	a2,1
200155a4:	00e61633          	sll	a2,a2,a4
200155a8:	00c36333          	or	t1,t1,a2
200155ac:	10682023          	sw	t1,256(a6)
200155b0:	08d8a023          	sw	a3,128(a7)
200155b4:	4689                	li	a3,2
200155b6:	00de1763          	bne	t3,a3,200155c4 <__register_exitproc+0x78>
200155ba:	10482683          	lw	a3,260(a6)
200155be:	8e55                	or	a2,a2,a3
200155c0:	10c82223          	sw	a2,260(a6)
200155c4:	00170693          	addi	a3,a4,1
200155c8:	070a                	slli	a4,a4,0x2
200155ca:	c3d4                	sw	a3,4(a5)
200155cc:	97ba                	add	a5,a5,a4
200155ce:	c78c                	sw	a1,8(a5)
200155d0:	4501                	li	a0,0
200155d2:	8082                	ret

200155d4 <__call_exitprocs>:
__call_exitprocs():
200155d4:	7179                	addi	sp,sp,-48
200155d6:	cc52                	sw	s4,24(sp)
200155d8:	ca56                	sw	s5,20(sp)
200155da:	c85a                	sw	s6,16(sp)
200155dc:	c65e                	sw	s7,12(sp)
200155de:	d606                	sw	ra,44(sp)
200155e0:	d422                	sw	s0,40(sp)
200155e2:	d226                	sw	s1,36(sp)
200155e4:	d04a                	sw	s2,32(sp)
200155e6:	ce4e                	sw	s3,28(sp)
200155e8:	c462                	sw	s8,8(sp)
200155ea:	8b2a                	mv	s6,a0
200155ec:	8a2e                	mv	s4,a1
200155ee:	5ffeba97          	auipc	s5,0x5ffeb
200155f2:	4d2a8a93          	addi	s5,s5,1234 # 80000ac0 <__tls_base>
200155f6:	4b85                	li	s7,1
200155f8:	000aa403          	lw	s0,0(s5)
200155fc:	c811                	beqz	s0,20015610 <__call_exitprocs+0x3c>
200155fe:	4044                	lw	s1,4(s0)
20015600:	08842983          	lw	s3,136(s0)
20015604:	fff48913          	addi	s2,s1,-1
20015608:	048a                	slli	s1,s1,0x2
2001560a:	94a2                	add	s1,s1,s0
2001560c:	00095e63          	bgez	s2,20015628 <__call_exitprocs+0x54>
20015610:	50b2                	lw	ra,44(sp)
20015612:	5422                	lw	s0,40(sp)
20015614:	5492                	lw	s1,36(sp)
20015616:	5902                	lw	s2,32(sp)
20015618:	49f2                	lw	s3,28(sp)
2001561a:	4a62                	lw	s4,24(sp)
2001561c:	4ad2                	lw	s5,20(sp)
2001561e:	4b42                	lw	s6,16(sp)
20015620:	4bb2                	lw	s7,12(sp)
20015622:	4c22                	lw	s8,8(sp)
20015624:	6145                	addi	sp,sp,48
20015626:	8082                	ret
20015628:	000a0e63          	beqz	s4,20015644 <__call_exitprocs+0x70>
2001562c:	00099563          	bnez	s3,20015636 <__call_exitprocs+0x62>
20015630:	197d                	addi	s2,s2,-1
20015632:	14f1                	addi	s1,s1,-4
20015634:	bfe1                	j	2001560c <__call_exitprocs+0x38>
20015636:	00291793          	slli	a5,s2,0x2
2001563a:	97ce                	add	a5,a5,s3
2001563c:	0807a783          	lw	a5,128(a5)
20015640:	ff4798e3          	bne	a5,s4,20015630 <__call_exitprocs+0x5c>
20015644:	4058                	lw	a4,4(s0)
20015646:	40dc                	lw	a5,4(s1)
20015648:	177d                	addi	a4,a4,-1
2001564a:	03271863          	bne	a4,s2,2001567a <__call_exitprocs+0xa6>
2001564e:	01242223          	sw	s2,4(s0)
20015652:	dff9                	beqz	a5,20015630 <__call_exitprocs+0x5c>
20015654:	00442c03          	lw	s8,4(s0)
20015658:	00098863          	beqz	s3,20015668 <__call_exitprocs+0x94>
2001565c:	1009a683          	lw	a3,256(s3)
20015660:	012b9733          	sll	a4,s7,s2
20015664:	8ef9                	and	a3,a3,a4
20015666:	ee89                	bnez	a3,20015680 <__call_exitprocs+0xac>
20015668:	9782                	jalr	a5
2001566a:	4058                	lw	a4,4(s0)
2001566c:	000aa783          	lw	a5,0(s5)
20015670:	f98714e3          	bne	a4,s8,200155f8 <__call_exitprocs+0x24>
20015674:	faf40ee3          	beq	s0,a5,20015630 <__call_exitprocs+0x5c>
20015678:	b741                	j	200155f8 <__call_exitprocs+0x24>
2001567a:	0004a223          	sw	zero,4(s1)
2001567e:	bfd1                	j	20015652 <__call_exitprocs+0x7e>
20015680:	00291693          	slli	a3,s2,0x2
20015684:	96ce                	add	a3,a3,s3
20015686:	428c                	lw	a1,0(a3)
20015688:	1049a683          	lw	a3,260(s3)
2001568c:	8f75                	and	a4,a4,a3
2001568e:	e701                	bnez	a4,20015696 <__call_exitprocs+0xc2>
20015690:	855a                	mv	a0,s6
20015692:	9782                	jalr	a5
20015694:	bfd9                	j	2001566a <__call_exitprocs+0x96>
20015696:	852e                	mv	a0,a1
20015698:	9782                	jalr	a5
2001569a:	bfc1                	j	2001566a <__call_exitprocs+0x96>

2001569c <metal_init>:
metal_init():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2001569c:	1101                	addi	sp,sp,-32
2001569e:	ce06                	sw	ra,28(sp)
200156a0:	cc22                	sw	s0,24(sp)
200156a2:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
200156a4:	800017b7          	lui	a5,0x80001
200156a8:	ac47a783          	lw	a5,-1340(a5) # 80000ac4 <__global_pointer$+0xfffff854>
200156ac:	efa9                	bnez	a5,20015706 <metal_init+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
200156ae:	800017b7          	lui	a5,0x80001
200156b2:	4705                	li	a4,1
200156b4:	ace7a223          	sw	a4,-1340(a5) # 80000ac4 <__global_pointer$+0xfffff854>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
200156b8:	200107b7          	lui	a5,0x20010
200156bc:	2f078713          	addi	a4,a5,752 # 200102f0 <__fini_array_end>
200156c0:	200107b7          	lui	a5,0x20010
200156c4:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200156c8:	04e7f163          	bgeu	a5,a4,2001570a <metal_init+0x6e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
200156cc:	200107b7          	lui	a5,0x20010
200156d0:	2e878793          	addi	a5,a5,744 # 200102e8 <_metal_sifive_fe310_g000_pll_init_ptr>
200156d4:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
200156d8:	a831                	j	200156f4 <metal_init+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
200156da:	fec42783          	lw	a5,-20(s0)
200156de:	439c                	lw	a5,0(a5)
200156e0:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:33

        func();
200156e4:	fe842783          	lw	a5,-24(s0)
200156e8:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:35

        funcptr += 1;
200156ea:	fec42783          	lw	a5,-20(s0)
200156ee:	0791                	addi	a5,a5,4
200156f0:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
200156f4:	fec42703          	lw	a4,-20(s0)
200156f8:	200107b7          	lui	a5,0x20010
200156fc:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20015700:	fcf71de3          	bne	a4,a5,200156da <metal_init+0x3e>
20015704:	a021                	j	2001570c <metal_init+0x70>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:21
        return;
20015706:	0001                	nop
20015708:	a011                	j	2001570c <metal_init+0x70>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:26
        return;
2001570a:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:37
    }
}
2001570c:	40f2                	lw	ra,28(sp)
2001570e:	4462                	lw	s0,24(sp)
20015710:	6105                	addi	sp,sp,32
20015712:	8082                	ret

20015714 <metal_fini>:
metal_fini():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:39

void metal_fini(void) {
20015714:	1101                	addi	sp,sp,-32
20015716:	ce06                	sw	ra,28(sp)
20015718:	cc22                	sw	s0,24(sp)
2001571a:	1000                	addi	s0,sp,32
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2001571c:	800017b7          	lui	a5,0x80001
20015720:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <__global_pointer$+0xfffff858>
20015724:	efa9                	bnez	a5,2001577e <metal_fini+0x6a>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20015726:	800017b7          	lui	a5,0x80001
2001572a:	4705                	li	a4,1
2001572c:	ace7a423          	sw	a4,-1336(a5) # 80000ac8 <__global_pointer$+0xfffff858>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20015730:	200107b7          	lui	a5,0x20010
20015734:	2f078713          	addi	a4,a5,752 # 200102f0 <__fini_array_end>
20015738:	200107b7          	lui	a5,0x20010
2001573c:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20015740:	04e7f163          	bgeu	a5,a4,20015782 <metal_fini+0x6e>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20015744:	200107b7          	lui	a5,0x20010
20015748:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
2001574c:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20015750:	a831                	j	2001576c <metal_fini+0x58>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20015752:	fec42783          	lw	a5,-20(s0)
20015756:	439c                	lw	a5,0(a5)
20015758:	fef42423          	sw	a5,-24(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:55

        func();
2001575c:	fe842783          	lw	a5,-24(s0)
20015760:	9782                	jalr	a5
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:57

        funcptr += 1;
20015762:	fec42783          	lw	a5,-20(s0)
20015766:	0791                	addi	a5,a5,4
20015768:	fef42623          	sw	a5,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001576c:	fec42703          	lw	a4,-20(s0)
20015770:	200107b7          	lui	a5,0x20010
20015774:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20015778:	fcf71de3          	bne	a4,a5,20015752 <metal_fini+0x3e>
2001577c:	a021                	j	20015784 <metal_fini+0x70>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:43
        return;
2001577e:	0001                	nop
20015780:	a011                	j	20015784 <metal_fini+0x70>
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:48
        return;
20015782:	0001                	nop
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:59
    }
}
20015784:	40f2                	lw	ra,28(sp)
20015786:	4462                	lw	s0,24(sp)
20015788:	6105                	addi	sp,sp,32
2001578a:	8082                	ret

2001578c <metal_init_run>:
metal_init_run():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2001578c:	1141                	addi	sp,sp,-16
2001578e:	c606                	sw	ra,12(sp)
20015790:	c422                	sw	s0,8(sp)
20015792:	0800                	addi	s0,sp,16
20015794:	3721                	jal	2001569c <metal_init>
20015796:	0001                	nop
20015798:	40b2                	lw	ra,12(sp)
2001579a:	4422                	lw	s0,8(sp)
2001579c:	0141                	addi	sp,sp,16
2001579e:	8082                	ret

200157a0 <metal_fini_run>:
metal_fini_run():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
200157a0:	1141                	addi	sp,sp,-16
200157a2:	c606                	sw	ra,12(sp)
200157a4:	c422                	sw	s0,8(sp)
200157a6:	0800                	addi	s0,sp,16
200157a8:	37b5                	jal	20015714 <metal_fini>
200157aa:	0001                	nop
200157ac:	40b2                	lw	ra,12(sp)
200157ae:	4422                	lw	s0,8(sp)
200157b0:	0141                	addi	sp,sp,16
200157b2:	8082                	ret

200157b4 <_exit>:
_exit():
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
200157b4:	1101                	addi	sp,sp,-32
200157b6:	ce06                	sw	ra,28(sp)
200157b8:	cc22                	sw	s0,24(sp)
200157ba:	1000                	addi	s0,sp,32
200157bc:	fea42623          	sw	a0,-20(s0)
/mnt/usb2/e_sdk/freedom-e-sdk/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
200157c0:	fec42503          	lw	a0,-20(s0)
200157c4:	abfff0ef          	jal	ra,20015282 <metal_shutdown>
